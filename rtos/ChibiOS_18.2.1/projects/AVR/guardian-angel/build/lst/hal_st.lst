   1               		.file	"hal_st.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.stInit,"ax",@progbits
  11               	.global	stInit
  13               	stInit:
  14               	.LFB173:
  15               		.file 1 "../../../os/hal/src/hal_st.c"
   1:../../../os/hal/src/hal_st.c **** /*
   2:../../../os/hal/src/hal_st.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../../os/hal/src/hal_st.c **** 
   4:../../../os/hal/src/hal_st.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../../os/hal/src/hal_st.c ****     you may not use this file except in compliance with the License.
   6:../../../os/hal/src/hal_st.c ****     You may obtain a copy of the License at
   7:../../../os/hal/src/hal_st.c **** 
   8:../../../os/hal/src/hal_st.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../../os/hal/src/hal_st.c **** 
  10:../../../os/hal/src/hal_st.c ****     Unless required by applicable law or agreed to in writing, software
  11:../../../os/hal/src/hal_st.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../../os/hal/src/hal_st.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../../os/hal/src/hal_st.c ****     See the License for the specific language governing permissions and
  14:../../../os/hal/src/hal_st.c ****     limitations under the License.
  15:../../../os/hal/src/hal_st.c **** */
  16:../../../os/hal/src/hal_st.c **** 
  17:../../../os/hal/src/hal_st.c **** /**
  18:../../../os/hal/src/hal_st.c ****  * @file    hal_st.c
  19:../../../os/hal/src/hal_st.c ****  * @brief   ST Driver code.
  20:../../../os/hal/src/hal_st.c ****  *
  21:../../../os/hal/src/hal_st.c ****  * @addtogroup ST
  22:../../../os/hal/src/hal_st.c ****  * @{
  23:../../../os/hal/src/hal_st.c ****  */
  24:../../../os/hal/src/hal_st.c **** 
  25:../../../os/hal/src/hal_st.c **** #include "hal.h"
  26:../../../os/hal/src/hal_st.c **** 
  27:../../../os/hal/src/hal_st.c **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
  28:../../../os/hal/src/hal_st.c **** 
  29:../../../os/hal/src/hal_st.c **** /*===========================================================================*/
  30:../../../os/hal/src/hal_st.c **** /* Driver local definitions.                                                 */
  31:../../../os/hal/src/hal_st.c **** /*===========================================================================*/
  32:../../../os/hal/src/hal_st.c **** 
  33:../../../os/hal/src/hal_st.c **** /*===========================================================================*/
  34:../../../os/hal/src/hal_st.c **** /* Driver exported variables.                                                */
  35:../../../os/hal/src/hal_st.c **** /*===========================================================================*/
  36:../../../os/hal/src/hal_st.c **** 
  37:../../../os/hal/src/hal_st.c **** /*===========================================================================*/
  38:../../../os/hal/src/hal_st.c **** /* Driver local types.                                                       */
  39:../../../os/hal/src/hal_st.c **** /*===========================================================================*/
  40:../../../os/hal/src/hal_st.c **** 
  41:../../../os/hal/src/hal_st.c **** /*===========================================================================*/
  42:../../../os/hal/src/hal_st.c **** /* Driver local variables.                                                   */
  43:../../../os/hal/src/hal_st.c **** /*===========================================================================*/
  44:../../../os/hal/src/hal_st.c **** 
  45:../../../os/hal/src/hal_st.c **** /*===========================================================================*/
  46:../../../os/hal/src/hal_st.c **** /* Driver local functions.                                                   */
  47:../../../os/hal/src/hal_st.c **** /*===========================================================================*/
  48:../../../os/hal/src/hal_st.c **** 
  49:../../../os/hal/src/hal_st.c **** /*===========================================================================*/
  50:../../../os/hal/src/hal_st.c **** /* Driver exported functions.                                                */
  51:../../../os/hal/src/hal_st.c **** /*===========================================================================*/
  52:../../../os/hal/src/hal_st.c **** 
  53:../../../os/hal/src/hal_st.c **** /**
  54:../../../os/hal/src/hal_st.c ****  * @brief   ST Driver initialization.
  55:../../../os/hal/src/hal_st.c ****  * @note    This function is implicitly invoked by @p halInit(), there is
  56:../../../os/hal/src/hal_st.c ****  *          no need to explicitly initialize the driver.
  57:../../../os/hal/src/hal_st.c ****  *
  58:../../../os/hal/src/hal_st.c ****  * @init
  59:../../../os/hal/src/hal_st.c ****  */
  60:../../../os/hal/src/hal_st.c **** void stInit(void) {
  16               		.loc 1 60 19 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  61:../../../os/hal/src/hal_st.c **** 
  62:../../../os/hal/src/hal_st.c ****   st_lld_init();
  22               		.loc 1 62 3 view .LVU1
  23 0000 0C94 0000 		jmp st_lld_init
  24               	.LVL0:
  25               		.cfi_endproc
  26               	.LFE173:
  28               		.section	.text.stStartAlarm,"ax",@progbits
  29               	.global	stStartAlarm
  31               	stStartAlarm:
  32               	.LVL1:
  33               	.LFB174:
  63:../../../os/hal/src/hal_st.c **** }
  64:../../../os/hal/src/hal_st.c **** 
  65:../../../os/hal/src/hal_st.c **** /**
  66:../../../os/hal/src/hal_st.c ****  * @brief   Starts the alarm.
  67:../../../os/hal/src/hal_st.c ****  * @note    Makes sure that no spurious alarms are triggered after
  68:../../../os/hal/src/hal_st.c ****  *          this call.
  69:../../../os/hal/src/hal_st.c ****  * @note    This functionality is only available in free running mode, the
  70:../../../os/hal/src/hal_st.c ****  *          behavior in periodic mode is undefined.
  71:../../../os/hal/src/hal_st.c ****  *
  72:../../../os/hal/src/hal_st.c ****  * @param[in] abstime   the time to be set for the first alarm
  73:../../../os/hal/src/hal_st.c ****  *
  74:../../../os/hal/src/hal_st.c ****  * @api
  75:../../../os/hal/src/hal_st.c ****  */
  76:../../../os/hal/src/hal_st.c **** void stStartAlarm(systime_t abstime) {
  34               		.loc 1 76 38 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
  77:../../../os/hal/src/hal_st.c **** 
  78:../../../os/hal/src/hal_st.c ****   osalDbgAssert(stIsAlarmActive() == false, "already active");
  40               		.loc 1 78 3 view .LVU3
  41               		.loc 1 78 3 view .LVU4
  79:../../../os/hal/src/hal_st.c **** 
  80:../../../os/hal/src/hal_st.c ****   st_lld_start_alarm(abstime);
  42               		.loc 1 80 3 view .LVU5
  43               	.LBB10:
  44               	.LBI10:
  45               		.file 2 "../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h"
   1:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*
   2:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
   4:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     you may not use this file except in compliance with the License.
   6:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     You may obtain a copy of the License at
   7:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
   8:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  10:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     Unless required by applicable law or agreed to in writing, software
  11:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     See the License for the specific language governing permissions and
  14:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     limitations under the License.
  15:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** */
  16:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  17:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /**
  18:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @file    TIMv1/hal_st_lld.h
  19:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @brief   AVR/MEGA ST subsystem low level driver header.
  20:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @details This header is designed to be include-able without having to
  21:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *          include other files from the HAL.
  22:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *
  23:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @addtogroup AVR
  24:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @{
  25:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  */
  26:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  27:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #ifndef HAL_ST_LLD_H
  28:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #define HAL_ST_LLD_H
  29:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  30:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #include <avr/io.h>
  31:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  32:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  33:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* Driver constants.                                                        */
  34:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  35:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  36:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  37:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* Driver pre-compile time settings.                                        */
  38:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  39:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  40:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* TODO: for models that have many timers, could add AVR_ST_USE_TIMER.      */
  41:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  42:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  43:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* Derived constants and error checks.                                      */
  44:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  45:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  46:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* TODO: error checks for valid timer selected.                             */
  47:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  48:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  49:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* Driver data structures and types.                                        */
  50:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  51:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  52:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  53:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* Driver macros.                                                           */
  54:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  55:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  56:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  57:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* External declarations.                                                   */
  58:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  59:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  60:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #ifdef __cplusplus
  61:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** extern "C" {
  62:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #endif
  63:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****   void st_lld_init(void);
  64:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #ifdef __cplusplus
  65:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** }
  66:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #endif
  67:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  68:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #if defined(__AVR_ATmega128__) || defined(__AVR_ATmega162__)
  69:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #define TIFR_REG TIFR
  70:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #define TIMSK_REG TIMSK
  71:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #else
  72:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #define TIFR_REG TIFR1
  73:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #define TIMSK_REG TIMSK1
  74:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #endif
  75:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  76:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  77:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* Driver inline functions.                                                 */
  78:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  79:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  80:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /**
  81:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @brief   Returns the time counter value.
  82:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *
  83:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @return              The counter value.
  84:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *
  85:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @notapi
  86:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  */
  87:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** static inline systime_t st_lld_get_counter(void) {
  88:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  89:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****   return (systime_t) TCNT1;
  90:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** }
  91:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  92:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /**
  93:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @brief   Starts the alarm.
  94:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @note    Makes sure that no spurious alarms are triggered after
  95:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *          this call.
  96:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *
  97:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @param[in] time      the time to be set for the first alarm
  98:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *
  99:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @notapi
 100:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  */
 101:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** static inline void st_lld_start_alarm(systime_t time) {
  46               		.loc 2 101 20 view .LVU6
  47               	.LBB11:
 102:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
 103:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****   OCR1A = (uint16_t) time;
  48               		.loc 2 103 3 view .LVU7
  49               		.loc 2 103 9 is_stmt 0 view .LVU8
  50 0000 9093 8900 		sts 136+1,r25
  51 0004 8093 8800 		sts 136,r24
 104:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
 105:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****   /* Reset pending. */
 106:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****   TIFR_REG = _BV(OCF1A);
  52               		.loc 2 106 3 is_stmt 1 view .LVU9
  53               		.loc 2 106 12 is_stmt 0 view .LVU10
  54 0008 82E0      		ldi r24,lo8(2)
  55               	.LVL2:
  56               		.loc 2 106 12 view .LVU11
  57 000a 86BB      		out 0x16,r24
  58               	.LVL3:
 107:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
 108:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****   /* Enable interrupt. */
 109:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****   TIMSK_REG = _BV(OCIE1A);
  59               		.loc 2 109 3 is_stmt 1 view .LVU12
  60               		.loc 2 109 13 is_stmt 0 view .LVU13
  61 000c 8093 6F00 		sts 111,r24
  62               	.LVL4:
  63               	/* epilogue start */
  64               		.loc 2 109 13 view .LVU14
  65               	.LBE11:
  66               	.LBE10:
  81:../../../os/hal/src/hal_st.c **** }
  67               		.loc 1 81 1 view .LVU15
  68 0010 0895      		ret
  69               		.cfi_endproc
  70               	.LFE174:
  72               		.section	.text.stStopAlarm,"ax",@progbits
  73               	.global	stStopAlarm
  75               	stStopAlarm:
  76               	.LFB175:
  82:../../../os/hal/src/hal_st.c **** 
  83:../../../os/hal/src/hal_st.c **** /**
  84:../../../os/hal/src/hal_st.c ****  * @brief   Stops the alarm interrupt.
  85:../../../os/hal/src/hal_st.c ****  * @note    This functionality is only available in free running mode, the
  86:../../../os/hal/src/hal_st.c ****  *          behavior in periodic mode is undefined.
  87:../../../os/hal/src/hal_st.c ****  *
  88:../../../os/hal/src/hal_st.c ****  * @api
  89:../../../os/hal/src/hal_st.c ****  */
  90:../../../os/hal/src/hal_st.c **** void stStopAlarm(void) {
  77               		.loc 1 90 24 is_stmt 1 view -0
  78               		.cfi_startproc
  79               	/* prologue: function */
  80               	/* frame size = 0 */
  81               	/* stack size = 0 */
  82               	.L__stack_usage = 0
  91:../../../os/hal/src/hal_st.c **** 
  92:../../../os/hal/src/hal_st.c ****   st_lld_stop_alarm();
  83               		.loc 1 92 3 view .LVU17
  84               	.LBB12:
  85               	.LBI12:
 110:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** }
 111:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
 112:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /**
 113:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @brief   Stops the alarm interrupt.
 114:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *
 115:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @notapi
 116:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  */
 117:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** static inline void st_lld_stop_alarm(void) {
  86               		.loc 2 117 20 view .LVU18
  87               	.LBB13:
 118:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
 119:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****   TIMSK_REG = 0;
  88               		.loc 2 119 3 view .LVU19
  89               		.loc 2 119 13 is_stmt 0 view .LVU20
  90 0000 1092 6F00 		sts 111,__zero_reg__
  91               	/* epilogue start */
  92               	.LBE13:
  93               	.LBE12:
  93:../../../os/hal/src/hal_st.c **** }
  94               		.loc 1 93 1 view .LVU21
  95 0004 0895      		ret
  96               		.cfi_endproc
  97               	.LFE175:
  99               		.section	.text.stSetAlarm,"ax",@progbits
 100               	.global	stSetAlarm
 102               	stSetAlarm:
 103               	.LVL5:
 104               	.LFB176:
  94:../../../os/hal/src/hal_st.c **** 
  95:../../../os/hal/src/hal_st.c **** /**
  96:../../../os/hal/src/hal_st.c ****  * @brief   Sets the alarm time.
  97:../../../os/hal/src/hal_st.c ****  * @note    This functionality is only available in free running mode, the
  98:../../../os/hal/src/hal_st.c ****  *          behavior in periodic mode is undefined.
  99:../../../os/hal/src/hal_st.c ****  *
 100:../../../os/hal/src/hal_st.c ****  * @param[in] abstime   the time to be set for the next alarm
 101:../../../os/hal/src/hal_st.c ****  *
 102:../../../os/hal/src/hal_st.c ****  * @api
 103:../../../os/hal/src/hal_st.c ****  */
 104:../../../os/hal/src/hal_st.c **** void stSetAlarm(systime_t abstime) {
 105               		.loc 1 104 36 is_stmt 1 view -0
 106               		.cfi_startproc
 107               	/* prologue: function */
 108               	/* frame size = 0 */
 109               	/* stack size = 0 */
 110               	.L__stack_usage = 0
 105:../../../os/hal/src/hal_st.c **** 
 106:../../../os/hal/src/hal_st.c ****   osalDbgAssert(stIsAlarmActive() != false, "not active");
 111               		.loc 1 106 3 view .LVU23
 112               		.loc 1 106 3 view .LVU24
 107:../../../os/hal/src/hal_st.c **** 
 108:../../../os/hal/src/hal_st.c ****   st_lld_set_alarm(abstime);
 113               		.loc 1 108 3 view .LVU25
 114               	.LBB14:
 115               	.LBI14:
 120:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** }
 121:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
 122:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /**
 123:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @brief   Sets the alarm time.
 124:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *
 125:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @param[in] time      the time to be set for the next alarm
 126:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *
 127:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @notapi
 128:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  */
 129:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** static inline void st_lld_set_alarm(systime_t time) {
 116               		.loc 2 129 20 view .LVU26
 117               	.LBB15:
 130:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****   OCR1A = (uint16_t) time;
 118               		.loc 2 131 3 view .LVU27
 119               		.loc 2 131 9 is_stmt 0 view .LVU28
 120 0000 9093 8900 		sts 136+1,r25
 121 0004 8093 8800 		sts 136,r24
 122               	.LVL6:
 123               	/* epilogue start */
 124               		.loc 2 131 9 view .LVU29
 125               	.LBE15:
 126               	.LBE14:
 109:../../../os/hal/src/hal_st.c **** }
 127               		.loc 1 109 1 view .LVU30
 128 0008 0895      		ret
 129               		.cfi_endproc
 130               	.LFE176:
 132               		.section	.text.stGetAlarm,"ax",@progbits
 133               	.global	stGetAlarm
 135               	stGetAlarm:
 136               	.LFB177:
 110:../../../os/hal/src/hal_st.c **** 
 111:../../../os/hal/src/hal_st.c **** /**
 112:../../../os/hal/src/hal_st.c ****  * @brief   Returns the current alarm time.
 113:../../../os/hal/src/hal_st.c ****  * @note    This functionality is only available in free running mode, the
 114:../../../os/hal/src/hal_st.c ****  *          behavior in periodic mode is undefined.
 115:../../../os/hal/src/hal_st.c ****  *
 116:../../../os/hal/src/hal_st.c ****  * @return              The currently set alarm time.
 117:../../../os/hal/src/hal_st.c ****  *
 118:../../../os/hal/src/hal_st.c ****  * @api
 119:../../../os/hal/src/hal_st.c ****  */
 120:../../../os/hal/src/hal_st.c **** systime_t stGetAlarm(void) {
 137               		.loc 1 120 28 is_stmt 1 view -0
 138               		.cfi_startproc
 139               	/* prologue: function */
 140               	/* frame size = 0 */
 141               	/* stack size = 0 */
 142               	.L__stack_usage = 0
 121:../../../os/hal/src/hal_st.c **** 
 122:../../../os/hal/src/hal_st.c ****   osalDbgAssert(stIsAlarmActive() != false, "not active");
 143               		.loc 1 122 3 view .LVU32
 144               		.loc 1 122 3 view .LVU33
 123:../../../os/hal/src/hal_st.c **** 
 124:../../../os/hal/src/hal_st.c ****   return st_lld_get_alarm();
 145               		.loc 1 124 3 view .LVU34
 146               	.LBB16:
 147               	.LBI16:
 132:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** }
 133:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
 134:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /**
 135:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @brief   Returns the current alarm time.
 136:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *
 137:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @return              The currently set alarm time.
 138:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *
 139:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @notapi
 140:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  */
 141:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** static inline systime_t st_lld_get_alarm(void) {
 148               		.loc 2 141 25 view .LVU35
 149               	.LBB17:
 142:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
 143:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****   return (systime_t) OCR1A;
 150               		.loc 2 143 3 view .LVU36
 151               		.loc 2 143 10 is_stmt 0 view .LVU37
 152 0000 8091 8800 		lds r24,136
 153 0004 9091 8900 		lds r25,136+1
 154               	/* epilogue start */
 155               	.LBE17:
 156               	.LBE16:
 125:../../../os/hal/src/hal_st.c **** }
 157               		.loc 1 125 1 view .LVU38
 158 0008 0895      		ret
 159               		.cfi_endproc
 160               	.LFE177:
 162               		.text
 163               	.Letext0:
 164               		.file 3 "/usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/include/stddef.h"
 165               		.file 4 "/usr/local/Cellar/avr-gcc/8.2.0/avr/include/stdint.h"
 166               		.file 5 "../../../os/common/ports/AVR/compilers/GCC/chtypes.h"
 167               		.file 6 "../../../os/rt/include/chsystypes.h"
 168               		.file 7 "../../../os/rt/include/chschd.h"
 169               		.file 8 "../../../os/rt/include/chtime.h"
 170               		.file 9 "../../../os/common/ports/AVR/chcore.h"
 171               		.file 10 "../../../os/rt/include/chsem.h"
 172               		.file 11 "../../../os/rt/include/chmtx.h"
 173               		.file 12 "../../../os/rt/include/chsys.h"
 174               		.file 13 "../../../os/rt/include/chregistry.h"
 175               		.file 14 "../../../os/rt/include/chevents.h"
 176               		.file 15 "../../../os/common/oslib/include/chmemcore.h"
 177               		.file 16 "../../../os/hal/include/hal_queues.h"
 178               		.file 17 "../../../os/hal/include/hal_pal.h"
 179               		.file 18 "../../../os/hal/ports/AVR/MEGA/LLD/GPIOv1/hal_pal_lld.h"
 180               		.file 19 "../../../os/hal/include/hal_adc.h"
 181               		.file 20 "../../../os/hal/ports/AVR/MEGA/LLD/ADCv1/hal_adc_lld.h"
 182               		.file 21 "../../../os/hal/include/hal_serial.h"
 183               		.file 22 "../../../os/hal/ports/AVR/MEGA/LLD/USARTv1/hal_serial_lld.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_st.c
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccJOtZdx.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccJOtZdx.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccJOtZdx.s:4      *ABS*:000000000000003f __SREG__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccJOtZdx.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccJOtZdx.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccJOtZdx.s:13     .text.stInit:0000000000000000 stInit
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccJOtZdx.s:31     .text.stStartAlarm:0000000000000000 stStartAlarm
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccJOtZdx.s:75     .text.stStopAlarm:0000000000000000 stStopAlarm
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccJOtZdx.s:102    .text.stSetAlarm:0000000000000000 stSetAlarm
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccJOtZdx.s:135    .text.stGetAlarm:0000000000000000 stGetAlarm

UNDEFINED SYMBOLS
st_lld_init
