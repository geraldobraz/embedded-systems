   1               		.file	"chevents.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.chEvtRegisterMaskWithFlags,"ax",@progbits
  11               	.global	chEvtRegisterMaskWithFlags
  13               	chEvtRegisterMaskWithFlags:
  14               	.LVL0:
  15               	.LFB141:
  16               		.file 1 "../../../os/rt/src/chevents.c"
   1:../../../os/rt/src/chevents.c **** /*
   2:../../../os/rt/src/chevents.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/rt/src/chevents.c **** 
   4:../../../os/rt/src/chevents.c ****     This file is part of ChibiOS.
   5:../../../os/rt/src/chevents.c **** 
   6:../../../os/rt/src/chevents.c ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/rt/src/chevents.c ****     it under the terms of the GNU General Public License as published by
   8:../../../os/rt/src/chevents.c ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/rt/src/chevents.c ****     (at your option) any later version.
  10:../../../os/rt/src/chevents.c **** 
  11:../../../os/rt/src/chevents.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/rt/src/chevents.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/rt/src/chevents.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/rt/src/chevents.c ****     GNU General Public License for more details.
  15:../../../os/rt/src/chevents.c **** 
  16:../../../os/rt/src/chevents.c ****     You should have received a copy of the GNU General Public License
  17:../../../os/rt/src/chevents.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/rt/src/chevents.c **** */
  19:../../../os/rt/src/chevents.c **** /*
  20:../../../os/rt/src/chevents.c ****    Concepts and parts of this file have been contributed by Scott (skute).
  21:../../../os/rt/src/chevents.c ****  */
  22:../../../os/rt/src/chevents.c **** 
  23:../../../os/rt/src/chevents.c **** /**
  24:../../../os/rt/src/chevents.c ****  * @file    chevents.c
  25:../../../os/rt/src/chevents.c ****  * @brief   Events code.
  26:../../../os/rt/src/chevents.c ****  *
  27:../../../os/rt/src/chevents.c ****  * @addtogroup events
  28:../../../os/rt/src/chevents.c ****  * @details Event Flags, Event Sources and Event Listeners.
  29:../../../os/rt/src/chevents.c ****  *          <h2>Operation mode</h2>
  30:../../../os/rt/src/chevents.c ****  *          Each thread has a mask of pending events inside its
  31:../../../os/rt/src/chevents.c ****  *          @p thread_t structure.
  32:../../../os/rt/src/chevents.c ****  *          Operations defined for events:
  33:../../../os/rt/src/chevents.c ****  *          - <b>Wait</b>, the invoking thread goes to sleep until a certain
  34:../../../os/rt/src/chevents.c ****  *            AND/OR combination of events become pending.
  35:../../../os/rt/src/chevents.c ****  *          - <b>Clear</b>, a mask of events is cleared from the pending
  36:../../../os/rt/src/chevents.c ****  *            events, the cleared events mask is returned (only the
  37:../../../os/rt/src/chevents.c ****  *            events that were actually pending and then cleared).
  38:../../../os/rt/src/chevents.c ****  *          - <b>Signal</b>, an events mask is directly ORed to the mask of the
  39:../../../os/rt/src/chevents.c ****  *            signaled thread.
  40:../../../os/rt/src/chevents.c ****  *          - <b>Broadcast</b>, each thread registered on an Event Source is
  41:../../../os/rt/src/chevents.c ****  *            signaled with the events specified in its Event Listener.
  42:../../../os/rt/src/chevents.c ****  *          - <b>Dispatch</b>, an events mask is scanned and for each bit set
  43:../../../os/rt/src/chevents.c ****  *            to one an associated handler function is invoked. Bit masks are
  44:../../../os/rt/src/chevents.c ****  *            scanned from bit zero upward.
  45:../../../os/rt/src/chevents.c ****  *          .
  46:../../../os/rt/src/chevents.c ****  *          An Event Source is a special object that can be "broadcasted" by
  47:../../../os/rt/src/chevents.c ****  *          a thread or an interrupt service routine. Broadcasting an Event
  48:../../../os/rt/src/chevents.c ****  *          Source has the effect that all the threads registered on the
  49:../../../os/rt/src/chevents.c ****  *          Event Source will be signaled with an events mask.<br>
  50:../../../os/rt/src/chevents.c ****  *          An unlimited number of Event Sources can exists in a system and
  51:../../../os/rt/src/chevents.c ****  *          each thread can be listening on an unlimited number of
  52:../../../os/rt/src/chevents.c ****  *          them.
  53:../../../os/rt/src/chevents.c ****  * @pre     In order to use the Events APIs the @p CH_CFG_USE_EVENTS option must be
  54:../../../os/rt/src/chevents.c ****  *          enabled in @p chconf.h.
  55:../../../os/rt/src/chevents.c ****  * @post    Enabling events requires 1-4 (depending on the architecture)
  56:../../../os/rt/src/chevents.c ****  *          extra bytes in the @p thread_t structure.
  57:../../../os/rt/src/chevents.c ****  * @{
  58:../../../os/rt/src/chevents.c ****  */
  59:../../../os/rt/src/chevents.c **** 
  60:../../../os/rt/src/chevents.c **** #include "ch.h"
  61:../../../os/rt/src/chevents.c **** 
  62:../../../os/rt/src/chevents.c **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
  63:../../../os/rt/src/chevents.c **** 
  64:../../../os/rt/src/chevents.c **** /*===========================================================================*/
  65:../../../os/rt/src/chevents.c **** /* Module local definitions.                                                 */
  66:../../../os/rt/src/chevents.c **** /*===========================================================================*/
  67:../../../os/rt/src/chevents.c **** 
  68:../../../os/rt/src/chevents.c **** /*===========================================================================*/
  69:../../../os/rt/src/chevents.c **** /* Module exported variables.                                                */
  70:../../../os/rt/src/chevents.c **** /*===========================================================================*/
  71:../../../os/rt/src/chevents.c **** 
  72:../../../os/rt/src/chevents.c **** /*===========================================================================*/
  73:../../../os/rt/src/chevents.c **** /* Module local types.                                                       */
  74:../../../os/rt/src/chevents.c **** /*===========================================================================*/
  75:../../../os/rt/src/chevents.c **** 
  76:../../../os/rt/src/chevents.c **** /*===========================================================================*/
  77:../../../os/rt/src/chevents.c **** /* Module local variables.                                                   */
  78:../../../os/rt/src/chevents.c **** /*===========================================================================*/
  79:../../../os/rt/src/chevents.c **** 
  80:../../../os/rt/src/chevents.c **** /*===========================================================================*/
  81:../../../os/rt/src/chevents.c **** /* Module local functions.                                                   */
  82:../../../os/rt/src/chevents.c **** /*===========================================================================*/
  83:../../../os/rt/src/chevents.c **** 
  84:../../../os/rt/src/chevents.c **** /*===========================================================================*/
  85:../../../os/rt/src/chevents.c **** /* Module exported functions.                                                */
  86:../../../os/rt/src/chevents.c **** /*===========================================================================*/
  87:../../../os/rt/src/chevents.c **** 
  88:../../../os/rt/src/chevents.c **** /**
  89:../../../os/rt/src/chevents.c ****  * @brief   Registers an Event Listener on an Event Source.
  90:../../../os/rt/src/chevents.c ****  * @details Once a thread has registered as listener on an event source it
  91:../../../os/rt/src/chevents.c ****  *          will be notified of all events broadcasted there.
  92:../../../os/rt/src/chevents.c ****  * @note    Multiple Event Listeners can specify the same bits to be ORed to
  93:../../../os/rt/src/chevents.c ****  *          different threads.
  94:../../../os/rt/src/chevents.c ****  *
  95:../../../os/rt/src/chevents.c ****  * @param[in] esp       pointer to the  @p event_source_t structure
  96:../../../os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
  97:../../../os/rt/src/chevents.c ****  * @param[in] events    events to be ORed to the thread when
  98:../../../os/rt/src/chevents.c ****  *                      the event source is broadcasted
  99:../../../os/rt/src/chevents.c ****  * @param[in] wflags    mask of flags the listening thread is interested in
 100:../../../os/rt/src/chevents.c ****  *
 101:../../../os/rt/src/chevents.c ****  * @api
 102:../../../os/rt/src/chevents.c ****  */
 103:../../../os/rt/src/chevents.c **** void chEvtRegisterMaskWithFlags(event_source_t *esp,
 104:../../../os/rt/src/chevents.c ****                                 event_listener_t *elp,
 105:../../../os/rt/src/chevents.c ****                                 eventmask_t events,
 106:../../../os/rt/src/chevents.c ****                                 eventflags_t wflags) {
  17               		.loc 1 106 54 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 106 54 is_stmt 0 view .LVU1
  24 0000 FB01      		movw r30,r22
 107:../../../os/rt/src/chevents.c **** 
 108:../../../os/rt/src/chevents.c ****   chDbgCheck((esp != NULL) && (elp != NULL));
  25               		.loc 1 108 3 is_stmt 1 view .LVU2
  26               		.loc 1 108 3 view .LVU3
 109:../../../os/rt/src/chevents.c **** 
 110:../../../os/rt/src/chevents.c ****   chSysLock();
  27               		.loc 1 110 3 view .LVU4
  28               	.LBB138:
  29               	.LBI138:
  30               		.file 2 "../../../os/rt/include/chsys.h"
   1:../../../os/rt/include/chsys.h **** /*
   2:../../../os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/rt/include/chsys.h **** 
   4:../../../os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:../../../os/rt/include/chsys.h **** 
   6:../../../os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:../../../os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/rt/include/chsys.h ****     (at your option) any later version.
  10:../../../os/rt/include/chsys.h **** 
  11:../../../os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:../../../os/rt/include/chsys.h **** 
  16:../../../os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/rt/include/chsys.h **** */
  19:../../../os/rt/include/chsys.h **** 
  20:../../../os/rt/include/chsys.h **** /**
  21:../../../os/rt/include/chsys.h ****  * @file    chsys.h
  22:../../../os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:../../../os/rt/include/chsys.h ****  *
  24:../../../os/rt/include/chsys.h ****  * @addtogroup system
  25:../../../os/rt/include/chsys.h ****  * @{
  26:../../../os/rt/include/chsys.h ****  */
  27:../../../os/rt/include/chsys.h **** 
  28:../../../os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:../../../os/rt/include/chsys.h **** #define CHSYS_H
  30:../../../os/rt/include/chsys.h **** 
  31:../../../os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:../../../os/rt/include/chsys.h **** 
  33:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  34:../../../os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  36:../../../os/rt/include/chsys.h **** 
  37:../../../os/rt/include/chsys.h **** /**
  38:../../../os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:../../../os/rt/include/chsys.h ****  * @{
  40:../../../os/rt/include/chsys.h ****  */
  41:../../../os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:../../../os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:../../../os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:../../../os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:../../../os/rt/include/chsys.h **** /** @} */
  46:../../../os/rt/include/chsys.h **** 
  47:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  48:../../../os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  50:../../../os/rt/include/chsys.h **** 
  51:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  52:../../../os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  54:../../../os/rt/include/chsys.h **** 
  55:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  56:../../../os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  58:../../../os/rt/include/chsys.h **** 
  59:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  60:../../../os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  62:../../../os/rt/include/chsys.h **** 
  63:../../../os/rt/include/chsys.h **** /**
  64:../../../os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:../../../os/rt/include/chsys.h ****  */
  66:../../../os/rt/include/chsys.h **** /**
  67:../../../os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:../../../os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:../../../os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:../../../os/rt/include/chsys.h ****  *
  71:../../../os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:../../../os/rt/include/chsys.h ****  * @return              Priority range result.
  73:../../../os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:../../../os/rt/include/chsys.h ****  *                      does not support priorities.
  75:../../../os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:../../../os/rt/include/chsys.h ****  */
  77:../../../os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:../../../os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:../../../os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:../../../os/rt/include/chsys.h **** #else
  81:../../../os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:../../../os/rt/include/chsys.h **** #endif
  83:../../../os/rt/include/chsys.h **** 
  84:../../../os/rt/include/chsys.h **** /**
  85:../../../os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:../../../os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:../../../os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:../../../os/rt/include/chsys.h ****  *
  89:../../../os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:../../../os/rt/include/chsys.h ****  * @return              Priority range result.
  91:../../../os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:../../../os/rt/include/chsys.h ****  *                      does not support priorities.
  93:../../../os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:../../../os/rt/include/chsys.h ****  */
  95:../../../os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:../../../os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:../../../os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:../../../os/rt/include/chsys.h **** #else
  99:../../../os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:../../../os/rt/include/chsys.h **** #endif
 101:../../../os/rt/include/chsys.h **** 
 102:../../../os/rt/include/chsys.h **** /**
 103:../../../os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:../../../os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:../../../os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:../../../os/rt/include/chsys.h ****  *
 107:../../../os/rt/include/chsys.h ****  * @special
 108:../../../os/rt/include/chsys.h ****  */
 109:../../../os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:../../../os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:../../../os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:../../../os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:../../../os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:../../../os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:../../../os/rt/include/chsys.h **** 
 116:../../../os/rt/include/chsys.h **** /**
 117:../../../os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:../../../os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:../../../os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:../../../os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:../../../os/rt/include/chsys.h ****  *
 122:../../../os/rt/include/chsys.h ****  * @special
 123:../../../os/rt/include/chsys.h ****  */
 124:../../../os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:../../../os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:../../../os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:../../../os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:../../../os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:../../../os/rt/include/chsys.h **** 
 130:../../../os/rt/include/chsys.h **** /**
 131:../../../os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:../../../os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:../../../os/rt/include/chsys.h ****  *          port implementation.
 134:../../../os/rt/include/chsys.h ****  *
 135:../../../os/rt/include/chsys.h ****  * @special
 136:../../../os/rt/include/chsys.h ****  */
 137:../../../os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:../../../os/rt/include/chsys.h **** /** @} */
 139:../../../os/rt/include/chsys.h **** 
 140:../../../os/rt/include/chsys.h **** /**
 141:../../../os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:../../../os/rt/include/chsys.h ****  */
 143:../../../os/rt/include/chsys.h **** /**
 144:../../../os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:../../../os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:../../../os/rt/include/chsys.h ****  *          port implementation.
 147:../../../os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:../../../os/rt/include/chsys.h ****  *
 149:../../../os/rt/include/chsys.h ****  * @special
 150:../../../os/rt/include/chsys.h ****  */
 151:../../../os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:../../../os/rt/include/chsys.h **** /** @} */
 153:../../../os/rt/include/chsys.h **** 
 154:../../../os/rt/include/chsys.h **** /**
 155:../../../os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:../../../os/rt/include/chsys.h ****  * @{
 157:../../../os/rt/include/chsys.h ****  */
 158:../../../os/rt/include/chsys.h **** /**
 159:../../../os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:../../../os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:../../../os/rt/include/chsys.h ****  *
 163:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:../../../os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:../../../os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:../../../os/rt/include/chsys.h ****  *
 167:../../../os/rt/include/chsys.h ****  * @api
 168:../../../os/rt/include/chsys.h ****  */
 169:../../../os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:../../../os/rt/include/chsys.h **** 
 171:../../../os/rt/include/chsys.h **** /**
 172:../../../os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:../../../os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:../../../os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:../../../os/rt/include/chsys.h ****  *
 177:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:../../../os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:../../../os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:../../../os/rt/include/chsys.h ****  *
 181:../../../os/rt/include/chsys.h ****  * @api
 182:../../../os/rt/include/chsys.h ****  */
 183:../../../os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:../../../os/rt/include/chsys.h **** 
 185:../../../os/rt/include/chsys.h **** /**
 186:../../../os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:../../../os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:../../../os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:../../../os/rt/include/chsys.h ****  *
 191:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:../../../os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:../../../os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:../../../os/rt/include/chsys.h ****  *
 195:../../../os/rt/include/chsys.h ****  * @api
 196:../../../os/rt/include/chsys.h ****  */
 197:../../../os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:../../../os/rt/include/chsys.h **** 
 199:../../../os/rt/include/chsys.h **** /**
 200:../../../os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:../../../os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:../../../os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:../../../os/rt/include/chsys.h ****  *
 205:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:../../../os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:../../../os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:../../../os/rt/include/chsys.h ****  *
 209:../../../os/rt/include/chsys.h ****  * @api
 210:../../../os/rt/include/chsys.h ****  */
 211:../../../os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:../../../os/rt/include/chsys.h **** 
 213:../../../os/rt/include/chsys.h **** /**
 214:../../../os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:../../../os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:../../../os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:../../../os/rt/include/chsys.h ****  *
 219:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:../../../os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:../../../os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:../../../os/rt/include/chsys.h ****  *
 223:../../../os/rt/include/chsys.h ****  * @api
 224:../../../os/rt/include/chsys.h ****  */
 225:../../../os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:../../../os/rt/include/chsys.h **** 
 227:../../../os/rt/include/chsys.h **** /**
 228:../../../os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:../../../os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:../../../os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:../../../os/rt/include/chsys.h ****  *
 233:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:../../../os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:../../../os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:../../../os/rt/include/chsys.h ****  *
 237:../../../os/rt/include/chsys.h ****  * @api
 238:../../../os/rt/include/chsys.h ****  */
 239:../../../os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:../../../os/rt/include/chsys.h **** /** @} */
 241:../../../os/rt/include/chsys.h **** 
 242:../../../os/rt/include/chsys.h **** /**
 243:../../../os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:../../../os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:../../../os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:../../../os/rt/include/chsys.h ****  *
 247:../../../os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:../../../os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:../../../os/rt/include/chsys.h ****  *
 250:../../../os/rt/include/chsys.h ****  * @xclass
 251:../../../os/rt/include/chsys.h ****  */
 252:../../../os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:../../../os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:../../../os/rt/include/chsys.h **** #endif
 255:../../../os/rt/include/chsys.h **** 
 256:../../../os/rt/include/chsys.h **** /**
 257:../../../os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:../../../os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:../../../os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:../../../os/rt/include/chsys.h ****  *
 261:../../../os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:../../../os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:../../../os/rt/include/chsys.h ****  *
 264:../../../os/rt/include/chsys.h ****  * @special
 265:../../../os/rt/include/chsys.h ****  */
 266:../../../os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:../../../os/rt/include/chsys.h ****                                                                             \
 268:../../../os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:../../../os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:../../../os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:../../../os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:../../../os/rt/include/chsys.h **** }
 273:../../../os/rt/include/chsys.h **** 
 274:../../../os/rt/include/chsys.h **** /*===========================================================================*/
 275:../../../os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:../../../os/rt/include/chsys.h **** /*===========================================================================*/
 277:../../../os/rt/include/chsys.h **** 
 278:../../../os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:../../../os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:../../../os/rt/include/chsys.h **** #endif
 281:../../../os/rt/include/chsys.h **** 
 282:../../../os/rt/include/chsys.h **** #ifdef __cplusplus
 283:../../../os/rt/include/chsys.h **** extern "C" {
 284:../../../os/rt/include/chsys.h **** #endif
 285:../../../os/rt/include/chsys.h ****   void chSysInit(void);
 286:../../../os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:../../../os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:../../../os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:../../../os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:../../../os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:../../../os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:../../../os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:../../../os/rt/include/chsys.h **** #endif
 294:../../../os/rt/include/chsys.h **** #ifdef __cplusplus
 295:../../../os/rt/include/chsys.h **** }
 296:../../../os/rt/include/chsys.h **** #endif
 297:../../../os/rt/include/chsys.h **** 
 298:../../../os/rt/include/chsys.h **** /*===========================================================================*/
 299:../../../os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:../../../os/rt/include/chsys.h **** /*===========================================================================*/
 301:../../../os/rt/include/chsys.h **** 
 302:../../../os/rt/include/chsys.h **** /**
 303:../../../os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:../../../os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:../../../os/rt/include/chsys.h ****  *          hardware priority.
 306:../../../os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:../../../os/rt/include/chsys.h ****  *
 308:../../../os/rt/include/chsys.h ****  * @special
 309:../../../os/rt/include/chsys.h ****  */
 310:../../../os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:../../../os/rt/include/chsys.h **** 
 312:../../../os/rt/include/chsys.h ****   port_disable();
 313:../../../os/rt/include/chsys.h ****   _dbg_check_disable();
 314:../../../os/rt/include/chsys.h **** }
 315:../../../os/rt/include/chsys.h **** 
 316:../../../os/rt/include/chsys.h **** /**
 317:../../../os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:../../../os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:../../../os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:../../../os/rt/include/chsys.h ****  *          enabled.
 321:../../../os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:../../../os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:../../../os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:../../../os/rt/include/chsys.h ****  *
 325:../../../os/rt/include/chsys.h ****  * @special
 326:../../../os/rt/include/chsys.h ****  */
 327:../../../os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:../../../os/rt/include/chsys.h **** 
 329:../../../os/rt/include/chsys.h ****   port_suspend();
 330:../../../os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:../../../os/rt/include/chsys.h **** }
 332:../../../os/rt/include/chsys.h **** 
 333:../../../os/rt/include/chsys.h **** /**
 334:../../../os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:../../../os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:../../../os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:../../../os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:../../../os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:../../../os/rt/include/chsys.h ****  *
 340:../../../os/rt/include/chsys.h ****  * @special
 341:../../../os/rt/include/chsys.h ****  */
 342:../../../os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:../../../os/rt/include/chsys.h **** 
 344:../../../os/rt/include/chsys.h ****   _dbg_check_enable();
 345:../../../os/rt/include/chsys.h ****   port_enable();
 346:../../../os/rt/include/chsys.h **** }
 347:../../../os/rt/include/chsys.h **** 
 348:../../../os/rt/include/chsys.h **** /**
 349:../../../os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:../../../os/rt/include/chsys.h ****  *
 351:../../../os/rt/include/chsys.h ****  * @special
 352:../../../os/rt/include/chsys.h ****  */
 353:../../../os/rt/include/chsys.h **** static inline void chSysLock(void) {
  31               		.loc 2 353 20 view .LVU5
  32               	.LBE138:
 354:../../../os/rt/include/chsys.h **** 
 355:../../../os/rt/include/chsys.h ****   port_lock();
  33               		.loc 2 355 3 view .LVU6
  34               	.LBB141:
  35               	.LBB139:
  36               	.LBI139:
  37               		.file 3 "../../../os/common/ports/AVR/chcore.h"
   1:../../../os/common/ports/AVR/chcore.h **** /*
   2:../../../os/common/ports/AVR/chcore.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/common/ports/AVR/chcore.h **** 
   4:../../../os/common/ports/AVR/chcore.h ****     This file is part of ChibiOS.
   5:../../../os/common/ports/AVR/chcore.h **** 
   6:../../../os/common/ports/AVR/chcore.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/common/ports/AVR/chcore.h ****     it under the terms of the GNU General Public License as published by
   8:../../../os/common/ports/AVR/chcore.h ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/common/ports/AVR/chcore.h ****     (at your option) any later version.
  10:../../../os/common/ports/AVR/chcore.h **** 
  11:../../../os/common/ports/AVR/chcore.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/common/ports/AVR/chcore.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/common/ports/AVR/chcore.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/common/ports/AVR/chcore.h ****     GNU General Public License for more details.
  15:../../../os/common/ports/AVR/chcore.h **** 
  16:../../../os/common/ports/AVR/chcore.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/common/ports/AVR/chcore.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/common/ports/AVR/chcore.h **** */
  19:../../../os/common/ports/AVR/chcore.h **** 
  20:../../../os/common/ports/AVR/chcore.h **** /**
  21:../../../os/common/ports/AVR/chcore.h ****  * @file    templates/chcore.h
  22:../../../os/common/ports/AVR/chcore.h ****  * @brief   Port related template macros and structures.
  23:../../../os/common/ports/AVR/chcore.h ****  * @details This file is a template of the system driver macros provided by
  24:../../../os/common/ports/AVR/chcore.h ****  *          a port.
  25:../../../os/common/ports/AVR/chcore.h ****  *
  26:../../../os/common/ports/AVR/chcore.h ****  * @addtogroup core
  27:../../../os/common/ports/AVR/chcore.h ****  * @{
  28:../../../os/common/ports/AVR/chcore.h ****  */
  29:../../../os/common/ports/AVR/chcore.h **** 
  30:../../../os/common/ports/AVR/chcore.h **** #ifndef CHCORE_H
  31:../../../os/common/ports/AVR/chcore.h **** #define CHCORE_H
  32:../../../os/common/ports/AVR/chcore.h **** 
  33:../../../os/common/ports/AVR/chcore.h **** #include <avr/io.h>
  34:../../../os/common/ports/AVR/chcore.h **** #include <avr/interrupt.h>
  35:../../../os/common/ports/AVR/chcore.h **** 
  36:../../../os/common/ports/AVR/chcore.h **** extern bool __avr_in_isr;
  37:../../../os/common/ports/AVR/chcore.h **** 
  38:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  39:../../../os/common/ports/AVR/chcore.h **** /* Module constants.                                                         */
  40:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  41:../../../os/common/ports/AVR/chcore.h **** 
  42:../../../os/common/ports/AVR/chcore.h **** /**
  43:../../../os/common/ports/AVR/chcore.h ****  * @name    Port Capabilities and Constants
  44:../../../os/common/ports/AVR/chcore.h ****  * @{
  45:../../../os/common/ports/AVR/chcore.h ****  */
  46:../../../os/common/ports/AVR/chcore.h **** /**
  47:../../../os/common/ports/AVR/chcore.h ****  * @brief   This port supports a realtime counter.
  48:../../../os/common/ports/AVR/chcore.h ****  */
  49:../../../os/common/ports/AVR/chcore.h **** #define PORT_SUPPORTS_RT                FALSE
  50:../../../os/common/ports/AVR/chcore.h **** 
  51:../../../os/common/ports/AVR/chcore.h **** /**
  52:../../../os/common/ports/AVR/chcore.h ****  * @brief   Natural alignment constant.
  53:../../../os/common/ports/AVR/chcore.h ****  * @note    It is the minimum alignment for pointer-size variables.
  54:../../../os/common/ports/AVR/chcore.h ****  */
  55:../../../os/common/ports/AVR/chcore.h **** #define PORT_NATURAL_ALIGN              1U
  56:../../../os/common/ports/AVR/chcore.h **** 
  57:../../../os/common/ports/AVR/chcore.h **** /**
  58:../../../os/common/ports/AVR/chcore.h ****  * @brief   Stack alignment constant.
  59:../../../os/common/ports/AVR/chcore.h ****  * @note    It is the alignement required for the stack pointer.
  60:../../../os/common/ports/AVR/chcore.h ****  */
  61:../../../os/common/ports/AVR/chcore.h **** #define PORT_STACK_ALIGN                1U
  62:../../../os/common/ports/AVR/chcore.h **** 
  63:../../../os/common/ports/AVR/chcore.h **** /**
  64:../../../os/common/ports/AVR/chcore.h ****  * @brief   Working Areas alignment constant.
  65:../../../os/common/ports/AVR/chcore.h ****  * @note    It is the alignment to be enforced for thread working areas.
  66:../../../os/common/ports/AVR/chcore.h ****  */
  67:../../../os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA_ALIGN         1U
  68:../../../os/common/ports/AVR/chcore.h **** /** @} */
  69:../../../os/common/ports/AVR/chcore.h **** 
  70:../../../os/common/ports/AVR/chcore.h **** /**
  71:../../../os/common/ports/AVR/chcore.h ****  * @name    Architecture and Compiler
  72:../../../os/common/ports/AVR/chcore.h ****  * @{
  73:../../../os/common/ports/AVR/chcore.h ****  */
  74:../../../os/common/ports/AVR/chcore.h **** /**
  75:../../../os/common/ports/AVR/chcore.h ****  * @brief   Macro defining an AVR architecture.
  76:../../../os/common/ports/AVR/chcore.h ****  */
  77:../../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR
  78:../../../os/common/ports/AVR/chcore.h **** 
  79:../../../os/common/ports/AVR/chcore.h **** /**
  80:../../../os/common/ports/AVR/chcore.h ****  * @brief   Macro defining the specific AVR architecture.
  81:../../../os/common/ports/AVR/chcore.h ****  */
  82:../../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR_MEGAAVR
  83:../../../os/common/ports/AVR/chcore.h **** 
  84:../../../os/common/ports/AVR/chcore.h **** /**
  85:../../../os/common/ports/AVR/chcore.h ****  * @brief   Name of the implemented architecture.
  86:../../../os/common/ports/AVR/chcore.h ****  */
  87:../../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_NAME          "MegaAVR"
  88:../../../os/common/ports/AVR/chcore.h **** 
  89:../../../os/common/ports/AVR/chcore.h **** /**
  90:../../../os/common/ports/AVR/chcore.h ****  * @brief   Compiler name and version.
  91:../../../os/common/ports/AVR/chcore.h ****  */
  92:../../../os/common/ports/AVR/chcore.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
  93:../../../os/common/ports/AVR/chcore.h **** #define PORT_COMPILER_NAME              "GCC " __VERSION__
  94:../../../os/common/ports/AVR/chcore.h **** 
  95:../../../os/common/ports/AVR/chcore.h **** #else
  96:../../../os/common/ports/AVR/chcore.h **** #error "unsupported compiler"
  97:../../../os/common/ports/AVR/chcore.h **** #endif
  98:../../../os/common/ports/AVR/chcore.h **** 
  99:../../../os/common/ports/AVR/chcore.h **** /**
 100:../../../os/common/ports/AVR/chcore.h ****  * @brief   Port-specific information string.
 101:../../../os/common/ports/AVR/chcore.h ****  */
 102:../../../os/common/ports/AVR/chcore.h **** #define PORT_INFO                       "None"
 103:../../../os/common/ports/AVR/chcore.h **** /** @} */
 104:../../../os/common/ports/AVR/chcore.h **** 
 105:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 106:../../../os/common/ports/AVR/chcore.h **** /* Module pre-compile time settings.                                         */
 107:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 108:../../../os/common/ports/AVR/chcore.h **** 
 109:../../../os/common/ports/AVR/chcore.h **** /**
 110:../../../os/common/ports/AVR/chcore.h ****  * @brief   Stack size for the system idle thread.
 111:../../../os/common/ports/AVR/chcore.h ****  * @details This size depends on the idle thread implementation, usually
 112:../../../os/common/ports/AVR/chcore.h ****  *          the idle thread should take no more space than those reserved
 113:../../../os/common/ports/AVR/chcore.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 114:../../../os/common/ports/AVR/chcore.h ****  */
 115:../../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 116:../../../os/common/ports/AVR/chcore.h **** #define PORT_IDLE_THREAD_STACK_SIZE     8
 117:../../../os/common/ports/AVR/chcore.h **** #endif
 118:../../../os/common/ports/AVR/chcore.h **** 
 119:../../../os/common/ports/AVR/chcore.h **** /**
 120:../../../os/common/ports/AVR/chcore.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 121:../../../os/common/ports/AVR/chcore.h ****  * @details This constant is used in the calculation of the correct working
 122:../../../os/common/ports/AVR/chcore.h ****  *          area size.
 123:../../../os/common/ports/AVR/chcore.h ****  */
 124:../../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 125:../../../os/common/ports/AVR/chcore.h **** #define PORT_INT_REQUIRED_STACK         32
 126:../../../os/common/ports/AVR/chcore.h **** #endif
 127:../../../os/common/ports/AVR/chcore.h **** 
 128:../../../os/common/ports/AVR/chcore.h **** /**
 129:../../../os/common/ports/AVR/chcore.h ****  * @brief   Enables an alternative timer implementation.
 130:../../../os/common/ports/AVR/chcore.h ****  * @details Usually the port uses a timer interface defined in the file
 131:../../../os/common/ports/AVR/chcore.h ****  *          @p chcore_timer.h, if this option is enabled then the file
 132:../../../os/common/ports/AVR/chcore.h ****  *          @p chcore_timer_alt.h is included instead.
 133:../../../os/common/ports/AVR/chcore.h ****  */
 134:../../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_USE_ALT_TIMER) || defined(__DOXYGEN__)
 135:../../../os/common/ports/AVR/chcore.h **** #define PORT_USE_ALT_TIMER              FALSE
 136:../../../os/common/ports/AVR/chcore.h **** #endif
 137:../../../os/common/ports/AVR/chcore.h **** 
 138:../../../os/common/ports/AVR/chcore.h **** /**
 139:../../../os/common/ports/AVR/chcore.h ****  * @brief   Enables a "wait for interrupt" instruction in the idle loop.
 140:../../../os/common/ports/AVR/chcore.h ****  */
 141:../../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_AVR_WFI_SLEEP_IDLE) || defined(__DOXYGEN__)
 142:../../../os/common/ports/AVR/chcore.h **** #define PORT_AVR_WFI_SLEEP_IDLE      FALSE
 143:../../../os/common/ports/AVR/chcore.h **** #endif
 144:../../../os/common/ports/AVR/chcore.h **** 
 145:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 146:../../../os/common/ports/AVR/chcore.h **** /* Derived constants and error checks.                                       */
 147:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 148:../../../os/common/ports/AVR/chcore.h **** 
 149:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 150:../../../os/common/ports/AVR/chcore.h **** /* Module data structures and types.                                         */
 151:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 152:../../../os/common/ports/AVR/chcore.h **** 
 153:../../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 154:../../../os/common/ports/AVR/chcore.h ****    asm module.*/
 155:../../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 156:../../../os/common/ports/AVR/chcore.h **** 
 157:../../../os/common/ports/AVR/chcore.h **** /**
 158:../../../os/common/ports/AVR/chcore.h ****  * @brief   Type of stack and memory alignment enforcement.
 159:../../../os/common/ports/AVR/chcore.h ****  * @note    In this architecture the stack alignment is enforced to 8 bits.
 160:../../../os/common/ports/AVR/chcore.h ****  */
 161:../../../os/common/ports/AVR/chcore.h **** typedef uint8_t stkalign_t;
 162:../../../os/common/ports/AVR/chcore.h **** 
 163:../../../os/common/ports/AVR/chcore.h **** /**
 164:../../../os/common/ports/AVR/chcore.h ****  * @brief   Interrupt saved context.
 165:../../../os/common/ports/AVR/chcore.h ****  * @details This structure represents the stack frame saved during a
 166:../../../os/common/ports/AVR/chcore.h ****  *          preemption-capable interrupt handler.
 167:../../../os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 168:../../../os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 169:../../../os/common/ports/AVR/chcore.h ****  */
 170:../../../os/common/ports/AVR/chcore.h **** struct port_extctx {
 171:../../../os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 172:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r31;
 173:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r30;
 174:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r27;
 175:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r26;
 176:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r25;
 177:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r24;
 178:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r23;
 179:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r22;
 180:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r21;
 181:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r20;
 182:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r19;
 183:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r18;
 184:../../../os/common/ports/AVR/chcore.h ****   uint8_t       sr;
 185:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r1;
 186:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r0;
 187:../../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 188:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 189:../../../os/common/ports/AVR/chcore.h **** #endif
 190:../../../os/common/ports/AVR/chcore.h ****   uint16_t      pc;
 191:../../../os/common/ports/AVR/chcore.h **** };
 192:../../../os/common/ports/AVR/chcore.h **** 
 193:../../../os/common/ports/AVR/chcore.h **** /**
 194:../../../os/common/ports/AVR/chcore.h ****  * @brief   System saved context.
 195:../../../os/common/ports/AVR/chcore.h ****  * @details This structure represents the inner stack frame during a context
 196:../../../os/common/ports/AVR/chcore.h ****  *          switching.
 197:../../../os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 198:../../../os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 199:../../../os/common/ports/AVR/chcore.h ****  * @note    LR is stored in the caller context so it is not present in this
 200:../../../os/common/ports/AVR/chcore.h ****  *          structure.
 201:../../../os/common/ports/AVR/chcore.h ****  */
 202:../../../os/common/ports/AVR/chcore.h **** struct port_intctx {
 203:../../../os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 204:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r29;
 205:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r28;
 206:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r17;
 207:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r16;
 208:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r15;
 209:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r14;
 210:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r13;
 211:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r12;
 212:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r11;
 213:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r10;
 214:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r9;
 215:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r8;
 216:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r7;
 217:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r6;
 218:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r5;
 219:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r4;
 220:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r3;
 221:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r2;
 222:../../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 223:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 224:../../../os/common/ports/AVR/chcore.h **** #endif
 225:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pcl;
 226:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pch;
 227:../../../os/common/ports/AVR/chcore.h **** };
 228:../../../os/common/ports/AVR/chcore.h **** 
 229:../../../os/common/ports/AVR/chcore.h **** /**
 230:../../../os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p thread_t structure.
 231:../../../os/common/ports/AVR/chcore.h ****  * @details This structure usually contains just the saved stack pointer
 232:../../../os/common/ports/AVR/chcore.h ****  *          defined as a pointer to a @p port_intctx structure.
 233:../../../os/common/ports/AVR/chcore.h ****  */
 234:../../../os/common/ports/AVR/chcore.h **** struct port_context {
 235:../../../os/common/ports/AVR/chcore.h ****   struct port_intctx *sp;
 236:../../../os/common/ports/AVR/chcore.h **** };
 237:../../../os/common/ports/AVR/chcore.h **** 
 238:../../../os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 239:../../../os/common/ports/AVR/chcore.h **** 
 240:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 241:../../../os/common/ports/AVR/chcore.h **** /* Module macros.                                                            */
 242:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 243:../../../os/common/ports/AVR/chcore.h **** 
 244:../../../os/common/ports/AVR/chcore.h **** /**
 245:../../../os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 246:../../../os/common/ports/AVR/chcore.h ****  * @details This code usually setup the context switching frame represented
 247:../../../os/common/ports/AVR/chcore.h ****  *          by an @p port_intctx structure.
 248:../../../os/common/ports/AVR/chcore.h ****  */
 249:../../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__) || defined(__DOXYGEN__)
 250:../../../os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 251:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 252:../../../os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 253:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 254:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 255:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 256:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 257:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcx = (uint8_t)0;                                             \
 258:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 259:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 260:../../../os/common/ports/AVR/chcore.h **** }
 261:../../../os/common/ports/AVR/chcore.h **** #else /* !__AVR_3_BYTE_PC__ */
 262:../../../os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 263:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 264:../../../os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 265:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 266:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 267:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 268:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 269:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 270:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 271:../../../os/common/ports/AVR/chcore.h **** }
 272:../../../os/common/ports/AVR/chcore.h **** #endif /* !__AVR_3_BYTE_PC__ */
 273:../../../os/common/ports/AVR/chcore.h **** 
 274:../../../os/common/ports/AVR/chcore.h **** /**
 275:../../../os/common/ports/AVR/chcore.h ****  * @brief   Computes the thread working area global size.
 276:../../../os/common/ports/AVR/chcore.h ****  * @note    There is no need to perform alignments in this macro.
 277:../../../os/common/ports/AVR/chcore.h ****  */
 278:../../../os/common/ports/AVR/chcore.h **** #define PORT_WA_SIZE(n) ((sizeof(struct port_intctx) - 1) +                \
 279:../../../os/common/ports/AVR/chcore.h ****                          (sizeof(struct port_extctx) - 1) +                \
 280:../../../os/common/ports/AVR/chcore.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 281:../../../os/common/ports/AVR/chcore.h **** 
 282:../../../os/common/ports/AVR/chcore.h **** /**
 283:../../../os/common/ports/AVR/chcore.h ****  * @brief   Static working area allocation.
 284:../../../os/common/ports/AVR/chcore.h ****  * @details This macro is used to allocate a static thread working area
 285:../../../os/common/ports/AVR/chcore.h ****  *          aligned as both position and size.
 286:../../../os/common/ports/AVR/chcore.h ****  *
 287:../../../os/common/ports/AVR/chcore.h ****  * @param[in] s         the name to be assigned to the stack array
 288:../../../os/common/ports/AVR/chcore.h ****  * @param[in] n         the stack size to be assigned to the thread
 289:../../../os/common/ports/AVR/chcore.h ****  */
 290:../../../os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA(s, n)                                             \
 291:../../../os/common/ports/AVR/chcore.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 292:../../../os/common/ports/AVR/chcore.h **** 
 293:../../../os/common/ports/AVR/chcore.h **** /**
 294:../../../os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 295:../../../os/common/ports/AVR/chcore.h ****  */
 296:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_PRIORITY(n) false
 297:../../../os/common/ports/AVR/chcore.h **** 
 298:../../../os/common/ports/AVR/chcore.h **** /**
 299:../../../os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 300:../../../os/common/ports/AVR/chcore.h ****  */
 301:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_KERNEL_PRIORITY(n) false
 302:../../../os/common/ports/AVR/chcore.h **** 
 303:../../../os/common/ports/AVR/chcore.h **** /**
 304:../../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ prologue code.
 305:../../../os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 306:../../../os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 307:../../../os/common/ports/AVR/chcore.h ****  * @note    This code tricks the compiler to save all the specified registers
 308:../../../os/common/ports/AVR/chcore.h ****  *          by "touching" them.
 309:../../../os/common/ports/AVR/chcore.h ****  */
 310:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_PROLOGUE() {                                               \
 311:../../../os/common/ports/AVR/chcore.h ****   asm ("" : : : "r18", "r19", "r20", "r21", "r22", "r23", "r24",            \
 312:../../../os/common/ports/AVR/chcore.h ****                 "r25", "r26", "r27", "r30", "r31");                         \
 313:../../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 314:../../../os/common/ports/AVR/chcore.h **** }
 315:../../../os/common/ports/AVR/chcore.h **** 
 316:../../../os/common/ports/AVR/chcore.h **** /**
 317:../../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ epilogue code.
 318:../../../os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 319:../../../os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 320:../../../os/common/ports/AVR/chcore.h ****  */
 321:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_EPILOGUE() {                                               \
 322:../../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = false;                                                     \
 323:../../../os/common/ports/AVR/chcore.h ****   _dbg_check_lock();                                                        \
 324:../../../os/common/ports/AVR/chcore.h ****   if (chSchIsPreemptionRequired())                                          \
 325:../../../os/common/ports/AVR/chcore.h ****     chSchDoReschedule();                                                    \
 326:../../../os/common/ports/AVR/chcore.h ****   _dbg_check_unlock();                                                      \
 327:../../../os/common/ports/AVR/chcore.h **** }
 328:../../../os/common/ports/AVR/chcore.h **** 
 329:../../../os/common/ports/AVR/chcore.h **** /**
 330:../../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ handler function declaration.
 331:../../../os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 332:../../../os/common/ports/AVR/chcore.h ****  *          port implementation.
 333:../../../os/common/ports/AVR/chcore.h ****  */
 334:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_HANDLER(id) ISR(id)
 335:../../../os/common/ports/AVR/chcore.h **** 
 336:../../../os/common/ports/AVR/chcore.h **** /**
 337:../../../os/common/ports/AVR/chcore.h ****  * @brief   Fast IRQ handler function declaration.
 338:../../../os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 339:../../../os/common/ports/AVR/chcore.h ****  *          port implementation.
 340:../../../os/common/ports/AVR/chcore.h ****  */
 341:../../../os/common/ports/AVR/chcore.h **** #define PORT_FAST_IRQ_HANDLER(id) ISR(id)
 342:../../../os/common/ports/AVR/chcore.h **** 
 343:../../../os/common/ports/AVR/chcore.h **** /**
 344:../../../os/common/ports/AVR/chcore.h ****  * @brief   Performs a context switch between two threads.
 345:../../../os/common/ports/AVR/chcore.h ****  * @details This is the most critical code in any port, this function
 346:../../../os/common/ports/AVR/chcore.h ****  *          is responsible for the context switch between 2 threads.
 347:../../../os/common/ports/AVR/chcore.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 348:../../../os/common/ports/AVR/chcore.h ****  *          switch performance so optimize here as much as you can.
 349:../../../os/common/ports/AVR/chcore.h ****  *
 350:../../../os/common/ports/AVR/chcore.h ****  * @param[in] ntp       the thread to be switched in
 351:../../../os/common/ports/AVR/chcore.h ****  * @param[in] otp       the thread to be switched out
 352:../../../os/common/ports/AVR/chcore.h ****  */
 353:../../../os/common/ports/AVR/chcore.h **** #define port_switch(ntp, otp) {                                             \
 354:../../../os/common/ports/AVR/chcore.h ****   _port_switch(ntp, otp);                                                   \
 355:../../../os/common/ports/AVR/chcore.h ****   asm volatile ("" : : : "memory");                                         \
 356:../../../os/common/ports/AVR/chcore.h **** }
 357:../../../os/common/ports/AVR/chcore.h **** 
 358:../../../os/common/ports/AVR/chcore.h **** 
 359:../../../os/common/ports/AVR/chcore.h **** /**
 360:../../../os/common/ports/AVR/chcore.h ****  * @brief   Port-related initialization code.
 361:../../../os/common/ports/AVR/chcore.h ****  * @note    This function is empty in this port.
 362:../../../os/common/ports/AVR/chcore.h ****  */
 363:../../../os/common/ports/AVR/chcore.h **** #define port_init() {                                                       \
 364:../../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 365:../../../os/common/ports/AVR/chcore.h **** }
 366:../../../os/common/ports/AVR/chcore.h **** 
 367:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 368:../../../os/common/ports/AVR/chcore.h **** /* External declarations.                                                    */
 369:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 370:../../../os/common/ports/AVR/chcore.h **** 
 371:../../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 372:../../../os/common/ports/AVR/chcore.h ****    asm module.*/
 373:../../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 374:../../../os/common/ports/AVR/chcore.h **** 
 375:../../../os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 376:../../../os/common/ports/AVR/chcore.h **** extern "C" {
 377:../../../os/common/ports/AVR/chcore.h **** #endif
 378:../../../os/common/ports/AVR/chcore.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 379:../../../os/common/ports/AVR/chcore.h ****   void _port_thread_start(void);
 380:../../../os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 381:../../../os/common/ports/AVR/chcore.h **** }
 382:../../../os/common/ports/AVR/chcore.h **** #endif
 383:../../../os/common/ports/AVR/chcore.h **** 
 384:../../../os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 385:../../../os/common/ports/AVR/chcore.h **** 
 386:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 387:../../../os/common/ports/AVR/chcore.h **** /* Module inline functions.                                                  */
 388:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 389:../../../os/common/ports/AVR/chcore.h **** 
 390:../../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 391:../../../os/common/ports/AVR/chcore.h ****    asm module.*/
 392:../../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 393:../../../os/common/ports/AVR/chcore.h **** 
 394:../../../os/common/ports/AVR/chcore.h **** /**
 395:../../../os/common/ports/AVR/chcore.h ****  * @brief   Returns a word encoding the current interrupts status.
 396:../../../os/common/ports/AVR/chcore.h ****  *
 397:../../../os/common/ports/AVR/chcore.h ****  * @return              The interrupts status.
 398:../../../os/common/ports/AVR/chcore.h ****  */
 399:../../../os/common/ports/AVR/chcore.h **** static inline syssts_t port_get_irq_status(void) {
 400:../../../os/common/ports/AVR/chcore.h **** 
 401:../../../os/common/ports/AVR/chcore.h ****   return SREG;
 402:../../../os/common/ports/AVR/chcore.h **** }
 403:../../../os/common/ports/AVR/chcore.h **** 
 404:../../../os/common/ports/AVR/chcore.h **** /**
 405:../../../os/common/ports/AVR/chcore.h ****  * @brief   Checks the interrupt status.
 406:../../../os/common/ports/AVR/chcore.h ****  *
 407:../../../os/common/ports/AVR/chcore.h ****  * @param[in] sts       the interrupt status word
 408:../../../os/common/ports/AVR/chcore.h ****  *
 409:../../../os/common/ports/AVR/chcore.h ****  * @return              The interrupt status.
 410:../../../os/common/ports/AVR/chcore.h ****  * @retval false        the word specified a disabled interrupts status.
 411:../../../os/common/ports/AVR/chcore.h ****  * @retval true         the word specified an enabled interrupts status.
 412:../../../os/common/ports/AVR/chcore.h ****  */
 413:../../../os/common/ports/AVR/chcore.h **** static inline bool port_irq_enabled(syssts_t sts) {
 414:../../../os/common/ports/AVR/chcore.h **** 
 415:../../../os/common/ports/AVR/chcore.h ****   return (bool)((sts & 0x80) != 0);
 416:../../../os/common/ports/AVR/chcore.h **** }
 417:../../../os/common/ports/AVR/chcore.h **** 
 418:../../../os/common/ports/AVR/chcore.h **** /**
 419:../../../os/common/ports/AVR/chcore.h ****  * @brief   Determines the current execution context.
 420:../../../os/common/ports/AVR/chcore.h ****  *
 421:../../../os/common/ports/AVR/chcore.h ****  * @return              The execution context.
 422:../../../os/common/ports/AVR/chcore.h ****  * @retval false        not running in ISR mode.
 423:../../../os/common/ports/AVR/chcore.h ****  * @retval true         running in ISR mode.
 424:../../../os/common/ports/AVR/chcore.h ****  */
 425:../../../os/common/ports/AVR/chcore.h **** static inline bool port_is_isr_context(void) {
 426:../../../os/common/ports/AVR/chcore.h **** 
 427:../../../os/common/ports/AVR/chcore.h ****   return __avr_in_isr;
 428:../../../os/common/ports/AVR/chcore.h **** }
 429:../../../os/common/ports/AVR/chcore.h **** 
 430:../../../os/common/ports/AVR/chcore.h **** /**
 431:../../../os/common/ports/AVR/chcore.h ****  * @brief   Kernel-lock action.
 432:../../../os/common/ports/AVR/chcore.h ****  * @details Usually this function just disables interrupts but may perform more
 433:../../../os/common/ports/AVR/chcore.h ****  *          actions.
 434:../../../os/common/ports/AVR/chcore.h ****  */
 435:../../../os/common/ports/AVR/chcore.h **** static inline void port_lock(void) {
  38               		.loc 3 435 20 view .LVU7
  39               	.LBB140:
 436:../../../os/common/ports/AVR/chcore.h **** 
 437:../../../os/common/ports/AVR/chcore.h ****   asm volatile ("cli" : : : "memory");
  40               		.loc 3 437 3 view .LVU8
  41               	/* #APP */
  42               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
  43 0002 F894      		cli
  44               	 ;  0 "" 2
  45               	/* #NOAPP */
  46               	.LBE140:
  47               	.LBE139:
  48               	.LBE141:
 356:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
  49               		.loc 2 356 34 view .LVU9
 357:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
  50               		.loc 2 357 20 view .LVU10
 111:../../../os/rt/src/chevents.c ****   elp->next     = esp->next;
  51               		.loc 1 111 3 view .LVU11
  52               		.loc 1 111 17 is_stmt 0 view .LVU12
  53 0004 DC01      		movw r26,r24
  54 0006 6D91      		ld r22,X+
  55 0008 7C91      		ld r23,X
  56 000a 1197      		sbiw r26,1
  57               	.LVL1:
  58               		.loc 1 111 17 view .LVU13
  59 000c 7183      		std Z+1,r23
  60 000e 6083      		st Z,r22
 112:../../../os/rt/src/chevents.c ****   esp->next     = elp;
  61               		.loc 1 112 3 is_stmt 1 view .LVU14
  62               		.loc 1 112 17 is_stmt 0 view .LVU15
  63 0010 ED93      		st X+,r30
  64 0012 FC93      		st X,r31
 113:../../../os/rt/src/chevents.c ****   elp->listener = currp;
  65               		.loc 1 113 3 is_stmt 1 view .LVU16
  66               		.loc 1 113 17 is_stmt 0 view .LVU17
  67 0014 8091 0000 		lds r24,ch+11
  68 0018 9091 0000 		lds r25,ch+11+1
  69               	.LVL2:
  70               		.loc 1 113 17 view .LVU18
  71 001c 9383      		std Z+3,r25
  72 001e 8283      		std Z+2,r24
 114:../../../os/rt/src/chevents.c ****   elp->events   = events;
  73               		.loc 1 114 3 is_stmt 1 view .LVU19
  74               		.loc 1 114 17 is_stmt 0 view .LVU20
  75 0020 4483      		std Z+4,r20
 115:../../../os/rt/src/chevents.c ****   elp->flags    = (eventflags_t)0;
  76               		.loc 1 115 3 is_stmt 1 view .LVU21
  77               		.loc 1 115 17 is_stmt 0 view .LVU22
  78 0022 1582      		std Z+5,__zero_reg__
 116:../../../os/rt/src/chevents.c ****   elp->wflags   = wflags;
  79               		.loc 1 116 3 is_stmt 1 view .LVU23
  80               		.loc 1 116 17 is_stmt 0 view .LVU24
  81 0024 2683      		std Z+6,r18
 117:../../../os/rt/src/chevents.c ****   chSysUnlock();
  82               		.loc 1 117 3 is_stmt 1 view .LVU25
  83               	.LBB142:
  84               	.LBI142:
 358:../../../os/rt/include/chsys.h **** }
 359:../../../os/rt/include/chsys.h **** 
 360:../../../os/rt/include/chsys.h **** /**
 361:../../../os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:../../../os/rt/include/chsys.h ****  *
 363:../../../os/rt/include/chsys.h ****  * @special
 364:../../../os/rt/include/chsys.h ****  */
 365:../../../os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
  85               		.loc 2 365 20 view .LVU26
  86               	.LBB143:
 366:../../../os/rt/include/chsys.h **** 
 367:../../../os/rt/include/chsys.h ****   _dbg_check_unlock();
  87               		.loc 2 367 22 view .LVU27
 368:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
  88               		.loc 2 368 33 view .LVU28
 369:../../../os/rt/include/chsys.h **** 
 370:../../../os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:../../../os/rt/include/chsys.h ****      in a critical section not followed by a chSchResceduleS(), this means
 372:../../../os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:../../../os/rt/include/chsys.h ****      the ready list.*/
 374:../../../os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
  89               		.loc 2 374 3 view .LVU29
  90               		.loc 2 374 3 view .LVU30
 375:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:../../../os/rt/include/chsys.h ****               "priority order violation");
 377:../../../os/rt/include/chsys.h **** 
 378:../../../os/rt/include/chsys.h ****   port_unlock();
  91               		.loc 2 378 3 view .LVU31
  92               	.LBB144:
  93               	.LBI144:
 438:../../../os/common/ports/AVR/chcore.h **** }
 439:../../../os/common/ports/AVR/chcore.h **** 
 440:../../../os/common/ports/AVR/chcore.h **** /**
 441:../../../os/common/ports/AVR/chcore.h ****  * @brief   Kernel-unlock action.
 442:../../../os/common/ports/AVR/chcore.h ****  * @details Usually this function just enables interrupts but may perform more
 443:../../../os/common/ports/AVR/chcore.h ****  *          actions.
 444:../../../os/common/ports/AVR/chcore.h ****  */
 445:../../../os/common/ports/AVR/chcore.h **** static inline void port_unlock(void) {
  94               		.loc 3 445 20 view .LVU32
  95               	.LBB145:
 446:../../../os/common/ports/AVR/chcore.h **** 
 447:../../../os/common/ports/AVR/chcore.h ****   asm volatile ("sei" : : : "memory");
  96               		.loc 3 447 3 view .LVU33
  97               	/* #APP */
  98               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
  99 0026 7894      		sei
 100               	 ;  0 "" 2
 101               	/* #NOAPP */
 102               	/* epilogue start */
 103               	.LBE145:
 104               	.LBE144:
 105               	.LBE143:
 106               	.LBE142:
 118:../../../os/rt/src/chevents.c **** }
 107               		.loc 1 118 1 is_stmt 0 view .LVU34
 108 0028 0895      		ret
 109               		.cfi_endproc
 110               	.LFE141:
 112               		.section	.text.chEvtUnregister,"ax",@progbits
 113               	.global	chEvtUnregister
 115               	chEvtUnregister:
 116               	.LVL3:
 117               	.LFB142:
 119:../../../os/rt/src/chevents.c **** 
 120:../../../os/rt/src/chevents.c **** /**
 121:../../../os/rt/src/chevents.c ****  * @brief   Unregisters an Event Listener from its Event Source.
 122:../../../os/rt/src/chevents.c ****  * @note    If the event listener is not registered on the specified event
 123:../../../os/rt/src/chevents.c ****  *          source then the function does nothing.
 124:../../../os/rt/src/chevents.c ****  * @note    For optimal performance it is better to perform the unregister
 125:../../../os/rt/src/chevents.c ****  *          operations in inverse order of the register operations (elements
 126:../../../os/rt/src/chevents.c ****  *          are found on top of the list).
 127:../../../os/rt/src/chevents.c ****  *
 128:../../../os/rt/src/chevents.c ****  * @param[in] esp       pointer to the  @p event_source_t structure
 129:../../../os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
 130:../../../os/rt/src/chevents.c ****  *
 131:../../../os/rt/src/chevents.c ****  * @api
 132:../../../os/rt/src/chevents.c ****  */
 133:../../../os/rt/src/chevents.c **** void chEvtUnregister(event_source_t *esp, event_listener_t *elp) {
 118               		.loc 1 133 66 is_stmt 1 view -0
 119               		.cfi_startproc
 120               	/* prologue: function */
 121               	/* frame size = 0 */
 122               	/* stack size = 0 */
 123               	.L__stack_usage = 0
 134:../../../os/rt/src/chevents.c ****   event_listener_t *p;
 124               		.loc 1 134 3 view .LVU36
 135:../../../os/rt/src/chevents.c **** 
 136:../../../os/rt/src/chevents.c ****   chDbgCheck((esp != NULL) && (elp != NULL));
 125               		.loc 1 136 3 view .LVU37
 126               		.loc 1 136 3 view .LVU38
 137:../../../os/rt/src/chevents.c **** 
 138:../../../os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 139:../../../os/rt/src/chevents.c ****   p = (event_listener_t *)esp;
 127               		.loc 1 139 3 view .LVU39
 140:../../../os/rt/src/chevents.c ****   /*lint -restore*/
 141:../../../os/rt/src/chevents.c ****   chSysLock();
 128               		.loc 1 141 3 view .LVU40
 129               	.LBB146:
 130               	.LBI146:
 353:../../../os/rt/include/chsys.h **** 
 131               		.loc 2 353 20 view .LVU41
 132               	.LBE146:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 133               		.loc 2 355 3 view .LVU42
 134               	.LBB149:
 135               	.LBB147:
 136               	.LBI147:
 435:../../../os/common/ports/AVR/chcore.h **** 
 137               		.loc 3 435 20 view .LVU43
 138               	.LBB148:
 437:../../../os/common/ports/AVR/chcore.h **** }
 139               		.loc 3 437 3 view .LVU44
 140               	/* #APP */
 141               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 142 0000 F894      		cli
 143               	 ;  0 "" 2
 144               	/* #NOAPP */
 145               	.LBE148:
 146               	.LBE147:
 147               	.LBE149:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 148               		.loc 2 356 34 view .LVU45
 357:../../../os/rt/include/chsys.h **** }
 149               		.loc 2 357 20 view .LVU46
 139:../../../os/rt/src/chevents.c ****   /*lint -restore*/
 150               		.loc 1 139 5 is_stmt 0 view .LVU47
 151 0002 FC01      		movw r30,r24
 152 0004 00C0      		rjmp .L4
 153               	.LVL4:
 154               	.L6:
 142:../../../os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 143:../../../os/rt/src/chevents.c ****   while (p->next != (event_listener_t *)esp) {
 144:../../../os/rt/src/chevents.c ****   /*lint -restore*/
 145:../../../os/rt/src/chevents.c ****     if (p->next == elp) {
 155               		.loc 1 145 5 is_stmt 1 view .LVU48
 156               		.loc 1 145 8 is_stmt 0 view .LVU49
 157 0006 2617      		cp r18,r22
 158 0008 3707      		cpc r19,r23
 159 000a 01F0      		breq .L8
 160 000c F901      		movw r30,r18
 161               	.LVL5:
 162               	.L4:
 143:../../../os/rt/src/chevents.c ****   /*lint -restore*/
 163               		.loc 1 143 11 view .LVU50
 164 000e 2081      		ld r18,Z
 165 0010 3181      		ldd r19,Z+1
 143:../../../os/rt/src/chevents.c ****   /*lint -restore*/
 166               		.loc 1 143 9 view .LVU51
 167 0012 2817      		cp r18,r24
 168 0014 3907      		cpc r19,r25
 169 0016 01F4      		brne .L6
 146:../../../os/rt/src/chevents.c ****       p->next = elp->next;
 147:../../../os/rt/src/chevents.c ****       break;
 148:../../../os/rt/src/chevents.c ****     }
 149:../../../os/rt/src/chevents.c ****     p = p->next;
 150:../../../os/rt/src/chevents.c ****   }
 151:../../../os/rt/src/chevents.c ****   chSysUnlock();
 170               		.loc 1 151 3 is_stmt 1 view .LVU52
 171               	.LBB150:
 172               	.LBI150:
 365:../../../os/rt/include/chsys.h **** 
 173               		.loc 2 365 20 view .LVU53
 174               	.LBB151:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 175               		.loc 2 367 22 view .LVU54
 368:../../../os/rt/include/chsys.h **** 
 176               		.loc 2 368 33 view .LVU55
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 177               		.loc 2 374 3 view .LVU56
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 178               		.loc 2 374 3 view .LVU57
 179               		.loc 2 378 3 view .LVU58
 180               	.LBB152:
 181               	.LBI152:
 445:../../../os/common/ports/AVR/chcore.h **** 
 182               		.loc 3 445 20 view .LVU59
 183               	.LBB153:
 184               		.loc 3 447 3 view .LVU60
 185               	/* #APP */
 186               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 187 0018 7894      		sei
 188               	 ;  0 "" 2
 189               	/* #NOAPP */
 190               	/* epilogue start */
 191               	.LBE153:
 192               	.LBE152:
 193               	.LBE151:
 194               	.LBE150:
 152:../../../os/rt/src/chevents.c **** }
 195               		.loc 1 152 1 is_stmt 0 view .LVU61
 196 001a 0895      		ret
 197               	.L8:
 146:../../../os/rt/src/chevents.c ****       break;
 198               		.loc 1 146 7 is_stmt 1 view .LVU62
 146:../../../os/rt/src/chevents.c ****       break;
 199               		.loc 1 146 20 is_stmt 0 view .LVU63
 200 001c DB01      		movw r26,r22
 201 001e 8D91      		ld r24,X+
 202 0020 9C91      		ld r25,X
 203               	.LVL6:
 146:../../../os/rt/src/chevents.c ****       break;
 204               		.loc 1 146 15 view .LVU64
 205 0022 9183      		std Z+1,r25
 206 0024 8083      		st Z,r24
 147:../../../os/rt/src/chevents.c ****     }
 207               		.loc 1 147 7 is_stmt 1 view .LVU65
 151:../../../os/rt/src/chevents.c **** }
 208               		.loc 1 151 3 view .LVU66
 209               	.LBB157:
 365:../../../os/rt/include/chsys.h **** 
 210               		.loc 2 365 20 view .LVU67
 211               	.LBB156:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 212               		.loc 2 367 22 view .LVU68
 368:../../../os/rt/include/chsys.h **** 
 213               		.loc 2 368 33 view .LVU69
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 214               		.loc 2 374 3 view .LVU70
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 215               		.loc 2 374 3 view .LVU71
 216               		.loc 2 378 3 view .LVU72
 217               	.LBB155:
 445:../../../os/common/ports/AVR/chcore.h **** 
 218               		.loc 3 445 20 view .LVU73
 219               	.LBB154:
 220               		.loc 3 447 3 view .LVU74
 221               	/* #APP */
 222               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 223 0026 7894      		sei
 224               	 ;  0 "" 2
 225               	/* #NOAPP */
 226               	/* epilogue start */
 227               	.LBE154:
 228               	.LBE155:
 229               	.LBE156:
 230               	.LBE157:
 231               		.loc 1 152 1 is_stmt 0 view .LVU75
 232 0028 0895      		ret
 233               		.cfi_endproc
 234               	.LFE142:
 236               		.section	.text.chEvtGetAndClearEventsI,"ax",@progbits
 237               	.global	chEvtGetAndClearEventsI
 239               	chEvtGetAndClearEventsI:
 240               	.LVL7:
 241               	.LFB143:
 153:../../../os/rt/src/chevents.c **** 
 154:../../../os/rt/src/chevents.c **** /**
 155:../../../os/rt/src/chevents.c ****  * @brief   Clears the pending events specified in the events mask.
 156:../../../os/rt/src/chevents.c ****  *
 157:../../../os/rt/src/chevents.c ****  * @param[in] events    the events to be cleared
 158:../../../os/rt/src/chevents.c ****  * @return              The mask of pending events that were cleared.
 159:../../../os/rt/src/chevents.c ****  *
 160:../../../os/rt/src/chevents.c ****  * @iclass
 161:../../../os/rt/src/chevents.c ****  */
 162:../../../os/rt/src/chevents.c **** eventmask_t chEvtGetAndClearEventsI(eventmask_t events) {
 242               		.loc 1 162 57 is_stmt 1 view -0
 243               		.cfi_startproc
 244               	/* prologue: function */
 245               	/* frame size = 0 */
 246               	/* stack size = 0 */
 247               	.L__stack_usage = 0
 163:../../../os/rt/src/chevents.c ****   eventmask_t m;
 248               		.loc 1 163 3 view .LVU77
 164:../../../os/rt/src/chevents.c **** 
 165:../../../os/rt/src/chevents.c ****   m = currp->epending & events;
 249               		.loc 1 165 3 view .LVU78
 250               		.loc 1 165 7 is_stmt 0 view .LVU79
 251 0000 E091 0000 		lds r30,ch+11
 252 0004 F091 0000 		lds r31,ch+11+1
 253               		.loc 1 165 12 view .LVU80
 254 0008 208D      		ldd r18,Z+24
 255               	.LVL8:
 166:../../../os/rt/src/chevents.c ****   currp->epending &= ~events;
 256               		.loc 1 166 3 is_stmt 1 view .LVU81
 257               		.loc 1 166 19 is_stmt 0 view .LVU82
 258 000a 982F      		mov r25,r24
 259 000c 9095      		com r25
 260 000e 9223      		and r25,r18
 261 0010 908F      		std Z+24,r25
 167:../../../os/rt/src/chevents.c **** 
 168:../../../os/rt/src/chevents.c ****   return m;
 262               		.loc 1 168 3 is_stmt 1 view .LVU83
 169:../../../os/rt/src/chevents.c **** }
 263               		.loc 1 169 1 is_stmt 0 view .LVU84
 264 0012 8223      		and r24,r18
 265               	.LVL9:
 266               	/* epilogue start */
 267               		.loc 1 169 1 view .LVU85
 268 0014 0895      		ret
 269               		.cfi_endproc
 270               	.LFE143:
 272               		.section	.text.chEvtGetAndClearEvents,"ax",@progbits
 273               	.global	chEvtGetAndClearEvents
 275               	chEvtGetAndClearEvents:
 276               	.LVL10:
 277               	.LFB144:
 170:../../../os/rt/src/chevents.c **** 
 171:../../../os/rt/src/chevents.c **** /**
 172:../../../os/rt/src/chevents.c ****  * @brief   Clears the pending events specified in the events mask.
 173:../../../os/rt/src/chevents.c ****  *
 174:../../../os/rt/src/chevents.c ****  * @param[in] events    the events to be cleared
 175:../../../os/rt/src/chevents.c ****  * @return              The mask of pending events that were cleared.
 176:../../../os/rt/src/chevents.c ****  *
 177:../../../os/rt/src/chevents.c ****  * @api
 178:../../../os/rt/src/chevents.c ****  */
 179:../../../os/rt/src/chevents.c **** eventmask_t chEvtGetAndClearEvents(eventmask_t events) {
 278               		.loc 1 179 56 is_stmt 1 view -0
 279               		.cfi_startproc
 280               	/* prologue: function */
 281               	/* frame size = 0 */
 282               	/* stack size = 0 */
 283               	.L__stack_usage = 0
 180:../../../os/rt/src/chevents.c ****   eventmask_t m;
 284               		.loc 1 180 3 view .LVU87
 181:../../../os/rt/src/chevents.c **** 
 182:../../../os/rt/src/chevents.c ****   chSysLock();
 285               		.loc 1 182 3 view .LVU88
 286               	.LBB158:
 287               	.LBI158:
 353:../../../os/rt/include/chsys.h **** 
 288               		.loc 2 353 20 view .LVU89
 289               	.LBE158:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 290               		.loc 2 355 3 view .LVU90
 291               	.LBB161:
 292               	.LBB159:
 293               	.LBI159:
 435:../../../os/common/ports/AVR/chcore.h **** 
 294               		.loc 3 435 20 view .LVU91
 295               	.LBB160:
 437:../../../os/common/ports/AVR/chcore.h **** }
 296               		.loc 3 437 3 view .LVU92
 297               	/* #APP */
 298               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 299 0000 F894      		cli
 300               	 ;  0 "" 2
 301               	/* #NOAPP */
 302               	.LBE160:
 303               	.LBE159:
 304               	.LBE161:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 305               		.loc 2 356 34 view .LVU93
 357:../../../os/rt/include/chsys.h **** }
 306               		.loc 2 357 20 view .LVU94
 183:../../../os/rt/src/chevents.c ****   m = chEvtGetAndClearEventsI(events);
 307               		.loc 1 183 3 view .LVU95
 308               	.LVL11:
 309               	.LBB162:
 310               	.LBI162:
 162:../../../os/rt/src/chevents.c ****   eventmask_t m;
 311               		.loc 1 162 13 view .LVU96
 312               	.LBB163:
 163:../../../os/rt/src/chevents.c **** 
 313               		.loc 1 163 3 view .LVU97
 165:../../../os/rt/src/chevents.c ****   currp->epending &= ~events;
 314               		.loc 1 165 3 view .LVU98
 165:../../../os/rt/src/chevents.c ****   currp->epending &= ~events;
 315               		.loc 1 165 7 is_stmt 0 view .LVU99
 316 0002 E091 0000 		lds r30,ch+11
 317 0006 F091 0000 		lds r31,ch+11+1
 165:../../../os/rt/src/chevents.c ****   currp->epending &= ~events;
 318               		.loc 1 165 12 view .LVU100
 319 000a 208D      		ldd r18,Z+24
 320               	.LVL12:
 166:../../../os/rt/src/chevents.c **** 
 321               		.loc 1 166 3 is_stmt 1 view .LVU101
 166:../../../os/rt/src/chevents.c **** 
 322               		.loc 1 166 19 is_stmt 0 view .LVU102
 323 000c 982F      		mov r25,r24
 324 000e 9095      		com r25
 325 0010 9223      		and r25,r18
 326 0012 908F      		std Z+24,r25
 168:../../../os/rt/src/chevents.c **** }
 327               		.loc 1 168 3 is_stmt 1 view .LVU103
 328               	.LVL13:
 168:../../../os/rt/src/chevents.c **** }
 329               		.loc 1 168 3 is_stmt 0 view .LVU104
 330               	.LBE163:
 331               	.LBE162:
 184:../../../os/rt/src/chevents.c ****   chSysUnlock();
 332               		.loc 1 184 3 is_stmt 1 view .LVU105
 333               	.LBB164:
 334               	.LBI164:
 365:../../../os/rt/include/chsys.h **** 
 335               		.loc 2 365 20 view .LVU106
 336               	.LBB165:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 337               		.loc 2 367 22 view .LVU107
 368:../../../os/rt/include/chsys.h **** 
 338               		.loc 2 368 33 view .LVU108
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 339               		.loc 2 374 3 view .LVU109
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 340               		.loc 2 374 3 view .LVU110
 341               		.loc 2 378 3 view .LVU111
 342               	.LBB166:
 343               	.LBI166:
 445:../../../os/common/ports/AVR/chcore.h **** 
 344               		.loc 3 445 20 view .LVU112
 345               	.LBB167:
 346               		.loc 3 447 3 view .LVU113
 347               	/* #APP */
 348               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 349 0014 7894      		sei
 350               	 ;  0 "" 2
 351               	/* #NOAPP */
 352               	.LBE167:
 353               	.LBE166:
 354               	.LBE165:
 355               	.LBE164:
 185:../../../os/rt/src/chevents.c **** 
 186:../../../os/rt/src/chevents.c ****   return m;
 356               		.loc 1 186 3 view .LVU114
 187:../../../os/rt/src/chevents.c **** }
 357               		.loc 1 187 1 is_stmt 0 view .LVU115
 358 0016 8223      		and r24,r18
 359               	.LVL14:
 360               	/* epilogue start */
 361               		.loc 1 187 1 view .LVU116
 362 0018 0895      		ret
 363               		.cfi_endproc
 364               	.LFE144:
 366               		.section	.text.chEvtAddEvents,"ax",@progbits
 367               	.global	chEvtAddEvents
 369               	chEvtAddEvents:
 370               	.LVL15:
 371               	.LFB145:
 188:../../../os/rt/src/chevents.c **** 
 189:../../../os/rt/src/chevents.c **** /**
 190:../../../os/rt/src/chevents.c ****  * @brief   Adds (OR) a set of events to the current thread, this is
 191:../../../os/rt/src/chevents.c ****  *          @b much faster than using @p chEvtBroadcast() or @p chEvtSignal().
 192:../../../os/rt/src/chevents.c ****  *
 193:../../../os/rt/src/chevents.c ****  * @param[in] events    the events to be added
 194:../../../os/rt/src/chevents.c ****  * @return              The mask of currently pending events.
 195:../../../os/rt/src/chevents.c ****  *
 196:../../../os/rt/src/chevents.c ****  * @api
 197:../../../os/rt/src/chevents.c ****  */
 198:../../../os/rt/src/chevents.c **** eventmask_t chEvtAddEvents(eventmask_t events) {
 372               		.loc 1 198 48 is_stmt 1 view -0
 373               		.cfi_startproc
 374               	/* prologue: function */
 375               	/* frame size = 0 */
 376               	/* stack size = 0 */
 377               	.L__stack_usage = 0
 199:../../../os/rt/src/chevents.c ****   eventmask_t newevt;
 378               		.loc 1 199 3 view .LVU118
 200:../../../os/rt/src/chevents.c **** 
 201:../../../os/rt/src/chevents.c ****   chSysLock();
 379               		.loc 1 201 3 view .LVU119
 380               	.LBB168:
 381               	.LBI168:
 353:../../../os/rt/include/chsys.h **** 
 382               		.loc 2 353 20 view .LVU120
 383               	.LBE168:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 384               		.loc 2 355 3 view .LVU121
 385               	.LBB171:
 386               	.LBB169:
 387               	.LBI169:
 435:../../../os/common/ports/AVR/chcore.h **** 
 388               		.loc 3 435 20 view .LVU122
 389               	.LBB170:
 437:../../../os/common/ports/AVR/chcore.h **** }
 390               		.loc 3 437 3 view .LVU123
 391               	/* #APP */
 392               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 393 0000 F894      		cli
 394               	 ;  0 "" 2
 395               	/* #NOAPP */
 396               	.LBE170:
 397               	.LBE169:
 398               	.LBE171:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 399               		.loc 2 356 34 view .LVU124
 357:../../../os/rt/include/chsys.h **** }
 400               		.loc 2 357 20 view .LVU125
 202:../../../os/rt/src/chevents.c ****   newevt = chEvtAddEventsI(events);
 401               		.loc 1 202 3 view .LVU126
 402               	.LVL16:
 403               	.LBB172:
 404               	.LBI172:
 405               		.file 4 "../../../os/rt/include/chevents.h"
   1:../../../os/rt/include/chevents.h **** /*
   2:../../../os/rt/include/chevents.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/rt/include/chevents.h **** 
   4:../../../os/rt/include/chevents.h ****     This file is part of ChibiOS.
   5:../../../os/rt/include/chevents.h **** 
   6:../../../os/rt/include/chevents.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/rt/include/chevents.h ****     it under the terms of the GNU General Public License as published by
   8:../../../os/rt/include/chevents.h ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/rt/include/chevents.h ****     (at your option) any later version.
  10:../../../os/rt/include/chevents.h **** 
  11:../../../os/rt/include/chevents.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/rt/include/chevents.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/rt/include/chevents.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/rt/include/chevents.h ****     GNU General Public License for more details.
  15:../../../os/rt/include/chevents.h **** 
  16:../../../os/rt/include/chevents.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/rt/include/chevents.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/rt/include/chevents.h **** */
  19:../../../os/rt/include/chevents.h **** /*
  20:../../../os/rt/include/chevents.h ****    Concepts and parts of this file have been contributed by Scott (skute).
  21:../../../os/rt/include/chevents.h ****  */
  22:../../../os/rt/include/chevents.h **** 
  23:../../../os/rt/include/chevents.h **** /**
  24:../../../os/rt/include/chevents.h ****  * @file    chevents.h
  25:../../../os/rt/include/chevents.h ****  * @brief   Events macros and structures.
  26:../../../os/rt/include/chevents.h ****  *
  27:../../../os/rt/include/chevents.h ****  * @addtogroup events
  28:../../../os/rt/include/chevents.h ****  * @{
  29:../../../os/rt/include/chevents.h ****  */
  30:../../../os/rt/include/chevents.h **** 
  31:../../../os/rt/include/chevents.h **** #ifndef CHEVENTS_H
  32:../../../os/rt/include/chevents.h **** #define CHEVENTS_H
  33:../../../os/rt/include/chevents.h **** 
  34:../../../os/rt/include/chevents.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
  35:../../../os/rt/include/chevents.h **** 
  36:../../../os/rt/include/chevents.h **** /*===========================================================================*/
  37:../../../os/rt/include/chevents.h **** /* Module constants.                                                         */
  38:../../../os/rt/include/chevents.h **** /*===========================================================================*/
  39:../../../os/rt/include/chevents.h **** 
  40:../../../os/rt/include/chevents.h **** /*===========================================================================*/
  41:../../../os/rt/include/chevents.h **** /* Module pre-compile time settings.                                         */
  42:../../../os/rt/include/chevents.h **** /*===========================================================================*/
  43:../../../os/rt/include/chevents.h **** 
  44:../../../os/rt/include/chevents.h **** /*===========================================================================*/
  45:../../../os/rt/include/chevents.h **** /* Derived constants and error checks.                                       */
  46:../../../os/rt/include/chevents.h **** /*===========================================================================*/
  47:../../../os/rt/include/chevents.h **** 
  48:../../../os/rt/include/chevents.h **** /*===========================================================================*/
  49:../../../os/rt/include/chevents.h **** /* Module data structures and types.                                         */
  50:../../../os/rt/include/chevents.h **** /*===========================================================================*/
  51:../../../os/rt/include/chevents.h **** 
  52:../../../os/rt/include/chevents.h **** typedef struct event_listener event_listener_t;
  53:../../../os/rt/include/chevents.h **** 
  54:../../../os/rt/include/chevents.h **** /**
  55:../../../os/rt/include/chevents.h ****  * @brief   Event Listener structure.
  56:../../../os/rt/include/chevents.h ****  */
  57:../../../os/rt/include/chevents.h **** struct event_listener {
  58:../../../os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief Next Event Listener
  59:../../../os/rt/include/chevents.h ****                                                     registered on the event
  60:../../../os/rt/include/chevents.h ****                                                     source.                 */
  61:../../../os/rt/include/chevents.h ****   thread_t              *listener;      /**< @brief Thread interested in the
  62:../../../os/rt/include/chevents.h ****                                                     event source.           */
  63:../../../os/rt/include/chevents.h ****   eventmask_t           events;         /**< @brief Events to be set in
  64:../../../os/rt/include/chevents.h ****                                                     the listening thread.   */
  65:../../../os/rt/include/chevents.h ****   eventflags_t          flags;          /**< @brief Flags added to the listener
  66:../../../os/rt/include/chevents.h ****                                                     by the event source.    */
  67:../../../os/rt/include/chevents.h ****   eventflags_t          wflags;         /**< @brief Flags that this listener
  68:../../../os/rt/include/chevents.h ****                                                     interested in.          */
  69:../../../os/rt/include/chevents.h **** };
  70:../../../os/rt/include/chevents.h **** 
  71:../../../os/rt/include/chevents.h **** /**
  72:../../../os/rt/include/chevents.h ****  * @brief   Event Source structure.
  73:../../../os/rt/include/chevents.h ****  */
  74:../../../os/rt/include/chevents.h **** typedef struct event_source {
  75:../../../os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief First Event Listener
  76:../../../os/rt/include/chevents.h ****                                                     registered on the Event
  77:../../../os/rt/include/chevents.h ****                                                     Source.                 */
  78:../../../os/rt/include/chevents.h **** } event_source_t;
  79:../../../os/rt/include/chevents.h **** 
  80:../../../os/rt/include/chevents.h **** /**
  81:../../../os/rt/include/chevents.h ****  * @brief   Event Handler callback function.
  82:../../../os/rt/include/chevents.h ****  */
  83:../../../os/rt/include/chevents.h **** typedef void (*evhandler_t)(eventid_t id);
  84:../../../os/rt/include/chevents.h **** 
  85:../../../os/rt/include/chevents.h **** /*===========================================================================*/
  86:../../../os/rt/include/chevents.h **** /* Module macros.                                                            */
  87:../../../os/rt/include/chevents.h **** /*===========================================================================*/
  88:../../../os/rt/include/chevents.h **** 
  89:../../../os/rt/include/chevents.h **** /**
  90:../../../os/rt/include/chevents.h ****  * @brief   All events allowed mask.
  91:../../../os/rt/include/chevents.h ****  */
  92:../../../os/rt/include/chevents.h **** #define ALL_EVENTS      ((eventmask_t)-1)
  93:../../../os/rt/include/chevents.h **** 
  94:../../../os/rt/include/chevents.h **** /**
  95:../../../os/rt/include/chevents.h ****  * @brief   Returns an event mask from an event identifier.
  96:../../../os/rt/include/chevents.h ****  */
  97:../../../os/rt/include/chevents.h **** #define EVENT_MASK(eid) ((eventmask_t)1 << (eventmask_t)(eid))
  98:../../../os/rt/include/chevents.h **** 
  99:../../../os/rt/include/chevents.h **** /**
 100:../../../os/rt/include/chevents.h ****  * @brief   Data part of a static event source initializer.
 101:../../../os/rt/include/chevents.h ****  * @details This macro should be used when statically initializing an event
 102:../../../os/rt/include/chevents.h ****  *          source that is part of a bigger structure.
 103:../../../os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 104:../../../os/rt/include/chevents.h ****  */
 105:../../../os/rt/include/chevents.h **** #define _EVENTSOURCE_DATA(name) {(event_listener_t *)(&name)}
 106:../../../os/rt/include/chevents.h **** 
 107:../../../os/rt/include/chevents.h **** /**
 108:../../../os/rt/include/chevents.h ****  * @brief   Static event source initializer.
 109:../../../os/rt/include/chevents.h ****  * @details Statically initialized event sources require no explicit
 110:../../../os/rt/include/chevents.h ****  *          initialization using @p chEvtInit().
 111:../../../os/rt/include/chevents.h ****  *
 112:../../../os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 113:../../../os/rt/include/chevents.h ****  */
 114:../../../os/rt/include/chevents.h **** #define EVENTSOURCE_DECL(name) event_source_t name = _EVENTSOURCE_DATA(name)
 115:../../../os/rt/include/chevents.h **** 
 116:../../../os/rt/include/chevents.h **** /*===========================================================================*/
 117:../../../os/rt/include/chevents.h **** /* External declarations.                                                    */
 118:../../../os/rt/include/chevents.h **** /*===========================================================================*/
 119:../../../os/rt/include/chevents.h **** 
 120:../../../os/rt/include/chevents.h **** #ifdef __cplusplus
 121:../../../os/rt/include/chevents.h **** extern "C" {
 122:../../../os/rt/include/chevents.h **** #endif
 123:../../../os/rt/include/chevents.h ****   void chEvtRegisterMaskWithFlags(event_source_t *esp,
 124:../../../os/rt/include/chevents.h ****                                   event_listener_t *elp,
 125:../../../os/rt/include/chevents.h ****                                   eventmask_t events,
 126:../../../os/rt/include/chevents.h ****                                   eventflags_t wflags);
 127:../../../os/rt/include/chevents.h ****   void chEvtUnregister(event_source_t *esp, event_listener_t *elp);
 128:../../../os/rt/include/chevents.h ****   eventmask_t chEvtGetAndClearEventsI(eventmask_t events);
 129:../../../os/rt/include/chevents.h ****   eventmask_t chEvtGetAndClearEvents(eventmask_t events);
 130:../../../os/rt/include/chevents.h ****   eventmask_t chEvtAddEvents(eventmask_t events);
 131:../../../os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlags(event_listener_t *elp);
 132:../../../os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlagsI(event_listener_t *elp);
 133:../../../os/rt/include/chevents.h ****   void chEvtSignal(thread_t *tp, eventmask_t events);
 134:../../../os/rt/include/chevents.h ****   void chEvtSignalI(thread_t *tp, eventmask_t events);
 135:../../../os/rt/include/chevents.h ****   void chEvtBroadcastFlags(event_source_t *esp, eventflags_t flags);
 136:../../../os/rt/include/chevents.h ****   void chEvtBroadcastFlagsI(event_source_t *esp, eventflags_t flags);
 137:../../../os/rt/include/chevents.h ****   void chEvtDispatch(const evhandler_t *handlers, eventmask_t events);
 138:../../../os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == TRUE) || (CH_CFG_USE_EVENTS_TIMEOUT == FALSE)
 139:../../../os/rt/include/chevents.h ****   eventmask_t chEvtWaitOne(eventmask_t events);
 140:../../../os/rt/include/chevents.h ****   eventmask_t chEvtWaitAny(eventmask_t events);
 141:../../../os/rt/include/chevents.h ****   eventmask_t chEvtWaitAll(eventmask_t events);
 142:../../../os/rt/include/chevents.h **** #endif
 143:../../../os/rt/include/chevents.h **** #if CH_CFG_USE_EVENTS_TIMEOUT == TRUE
 144:../../../os/rt/include/chevents.h ****   eventmask_t chEvtWaitOneTimeout(eventmask_t events, sysinterval_t timeout);
 145:../../../os/rt/include/chevents.h ****   eventmask_t chEvtWaitAnyTimeout(eventmask_t events, sysinterval_t timeout);
 146:../../../os/rt/include/chevents.h ****   eventmask_t chEvtWaitAllTimeout(eventmask_t events, sysinterval_t timeout);
 147:../../../os/rt/include/chevents.h **** #endif
 148:../../../os/rt/include/chevents.h **** #ifdef __cplusplus
 149:../../../os/rt/include/chevents.h **** }
 150:../../../os/rt/include/chevents.h **** #endif
 151:../../../os/rt/include/chevents.h **** 
 152:../../../os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == FALSE) && (CH_CFG_USE_EVENTS_TIMEOUT == TRUE)
 153:../../../os/rt/include/chevents.h **** #define chEvtWaitOne(mask) chEvtWaitOneTimeout(mask, TIME_INFINITE)
 154:../../../os/rt/include/chevents.h **** #define chEvtWaitAny(mask) chEvtWaitAnyTimeout(mask, TIME_INFINITE)
 155:../../../os/rt/include/chevents.h **** #define chEvtWaitAll(mask) chEvtWaitAllTimeout(mask, TIME_INFINITE)
 156:../../../os/rt/include/chevents.h **** #endif
 157:../../../os/rt/include/chevents.h **** 
 158:../../../os/rt/include/chevents.h **** /*===========================================================================*/
 159:../../../os/rt/include/chevents.h **** /* Module inline functions.                                                  */
 160:../../../os/rt/include/chevents.h **** /*===========================================================================*/
 161:../../../os/rt/include/chevents.h **** 
 162:../../../os/rt/include/chevents.h **** /**
 163:../../../os/rt/include/chevents.h ****  * @brief   Initializes an Event Source.
 164:../../../os/rt/include/chevents.h ****  * @note    This function can be invoked before the kernel is initialized
 165:../../../os/rt/include/chevents.h ****  *          because it just prepares a @p event_source_t structure.
 166:../../../os/rt/include/chevents.h ****  *
 167:../../../os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 168:../../../os/rt/include/chevents.h ****  *
 169:../../../os/rt/include/chevents.h ****  * @init
 170:../../../os/rt/include/chevents.h ****  */
 171:../../../os/rt/include/chevents.h **** static inline void chEvtObjectInit(event_source_t *esp) {
 172:../../../os/rt/include/chevents.h **** 
 173:../../../os/rt/include/chevents.h ****   esp->next = (event_listener_t *)esp;
 174:../../../os/rt/include/chevents.h **** }
 175:../../../os/rt/include/chevents.h **** 
 176:../../../os/rt/include/chevents.h **** /**
 177:../../../os/rt/include/chevents.h ****  * @brief   Registers an Event Listener on an Event Source.
 178:../../../os/rt/include/chevents.h ****  * @details Once a thread has registered as listener on an event source it
 179:../../../os/rt/include/chevents.h ****  *          will be notified of all events broadcasted there.
 180:../../../os/rt/include/chevents.h ****  * @note    Multiple Event Listeners can specify the same bits to be ORed to
 181:../../../os/rt/include/chevents.h ****  *          different threads.
 182:../../../os/rt/include/chevents.h ****  *
 183:../../../os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 184:../../../os/rt/include/chevents.h ****  * @param[out] elp      pointer to the @p event_listener_t structure
 185:../../../os/rt/include/chevents.h ****  * @param[in] events    the mask of events to be ORed to the thread when
 186:../../../os/rt/include/chevents.h ****  *                      the event source is broadcasted
 187:../../../os/rt/include/chevents.h ****  *
 188:../../../os/rt/include/chevents.h ****  * @api
 189:../../../os/rt/include/chevents.h ****  */
 190:../../../os/rt/include/chevents.h **** static inline void chEvtRegisterMask(event_source_t *esp,
 191:../../../os/rt/include/chevents.h ****                                      event_listener_t *elp,
 192:../../../os/rt/include/chevents.h ****                                      eventmask_t events) {
 193:../../../os/rt/include/chevents.h **** 
 194:../../../os/rt/include/chevents.h ****   chEvtRegisterMaskWithFlags(esp, elp, events, (eventflags_t)-1);
 195:../../../os/rt/include/chevents.h **** }
 196:../../../os/rt/include/chevents.h **** 
 197:../../../os/rt/include/chevents.h **** /**
 198:../../../os/rt/include/chevents.h ****  * @brief   Registers an Event Listener on an Event Source.
 199:../../../os/rt/include/chevents.h ****  * @note    Multiple Event Listeners can use the same event identifier, the
 200:../../../os/rt/include/chevents.h ****  *          listener will share the callback function.
 201:../../../os/rt/include/chevents.h ****  *
 202:../../../os/rt/include/chevents.h ****  * @param[in] esp       pointer to the  @p event_source_t structure
 203:../../../os/rt/include/chevents.h ****  * @param[out] elp      pointer to the @p event_listener_t structure
 204:../../../os/rt/include/chevents.h ****  * @param[in] event     numeric identifier assigned to the Event Listener.
 205:../../../os/rt/include/chevents.h ****  *                      The value must range between zero and the size, in bit,
 206:../../../os/rt/include/chevents.h ****  *                      of the @p eventmask_t type minus one.
 207:../../../os/rt/include/chevents.h ****  *
 208:../../../os/rt/include/chevents.h ****  * @api
 209:../../../os/rt/include/chevents.h ****  */
 210:../../../os/rt/include/chevents.h **** static inline void chEvtRegister(event_source_t *esp,
 211:../../../os/rt/include/chevents.h ****                                  event_listener_t *elp,
 212:../../../os/rt/include/chevents.h ****                                  eventid_t event) {
 213:../../../os/rt/include/chevents.h **** 
 214:../../../os/rt/include/chevents.h ****   chEvtRegisterMask(esp, elp, EVENT_MASK(event));
 215:../../../os/rt/include/chevents.h **** }
 216:../../../os/rt/include/chevents.h **** 
 217:../../../os/rt/include/chevents.h **** /**
 218:../../../os/rt/include/chevents.h ****  * @brief   Verifies if there is at least one @p event_listener_t registered.
 219:../../../os/rt/include/chevents.h ****  *
 220:../../../os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 221:../../../os/rt/include/chevents.h ****  * @return              The event source status.
 222:../../../os/rt/include/chevents.h ****  *
 223:../../../os/rt/include/chevents.h ****  * @iclass
 224:../../../os/rt/include/chevents.h ****  */
 225:../../../os/rt/include/chevents.h **** static inline bool chEvtIsListeningI(event_source_t *esp) {
 226:../../../os/rt/include/chevents.h **** 
 227:../../../os/rt/include/chevents.h ****   return (bool)(esp != (event_source_t *)esp->next);
 228:../../../os/rt/include/chevents.h **** }
 229:../../../os/rt/include/chevents.h **** 
 230:../../../os/rt/include/chevents.h **** /**
 231:../../../os/rt/include/chevents.h ****  * @brief   Signals all the Event Listeners registered on the specified Event
 232:../../../os/rt/include/chevents.h ****  *          Source.
 233:../../../os/rt/include/chevents.h ****  *
 234:../../../os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 235:../../../os/rt/include/chevents.h ****  *
 236:../../../os/rt/include/chevents.h ****  * @api
 237:../../../os/rt/include/chevents.h ****  */
 238:../../../os/rt/include/chevents.h **** static inline void chEvtBroadcast(event_source_t *esp) {
 239:../../../os/rt/include/chevents.h **** 
 240:../../../os/rt/include/chevents.h ****   chEvtBroadcastFlags(esp, (eventflags_t)0);
 241:../../../os/rt/include/chevents.h **** }
 242:../../../os/rt/include/chevents.h **** 
 243:../../../os/rt/include/chevents.h **** /**
 244:../../../os/rt/include/chevents.h ****  * @brief   Signals all the Event Listeners registered on the specified Event
 245:../../../os/rt/include/chevents.h ****  *          Source.
 246:../../../os/rt/include/chevents.h ****  * @post    This function does not reschedule so a call to a rescheduling
 247:../../../os/rt/include/chevents.h ****  *          function must be performed before unlocking the kernel. Note that
 248:../../../os/rt/include/chevents.h ****  *          interrupt handlers always reschedule on exit so an explicit
 249:../../../os/rt/include/chevents.h ****  *          reschedule must not be performed in ISRs.
 250:../../../os/rt/include/chevents.h ****  *
 251:../../../os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 252:../../../os/rt/include/chevents.h ****  *
 253:../../../os/rt/include/chevents.h ****  * @iclass
 254:../../../os/rt/include/chevents.h ****  */
 255:../../../os/rt/include/chevents.h **** static inline void chEvtBroadcastI(event_source_t *esp) {
 256:../../../os/rt/include/chevents.h **** 
 257:../../../os/rt/include/chevents.h ****   chEvtBroadcastFlagsI(esp, (eventflags_t)0);
 258:../../../os/rt/include/chevents.h **** }
 259:../../../os/rt/include/chevents.h **** 
 260:../../../os/rt/include/chevents.h **** /**
 261:../../../os/rt/include/chevents.h ****  * @brief   Adds (OR) a set of events to the current thread, this is
 262:../../../os/rt/include/chevents.h ****  *          @b much faster than using @p chEvtBroadcast() or @p chEvtSignal().
 263:../../../os/rt/include/chevents.h ****  *
 264:../../../os/rt/include/chevents.h ****  * @param[in] events    the events to be added
 265:../../../os/rt/include/chevents.h ****  * @return              The mask of currently pending events.
 266:../../../os/rt/include/chevents.h ****  *
 267:../../../os/rt/include/chevents.h ****  * @iclass
 268:../../../os/rt/include/chevents.h ****  */
 269:../../../os/rt/include/chevents.h **** static inline eventmask_t chEvtAddEventsI(eventmask_t events) {
 406               		.loc 4 269 27 view .LVU127
 407               	.LBB173:
 270:../../../os/rt/include/chevents.h **** 
 271:../../../os/rt/include/chevents.h ****   return currp->epending |= events;
 408               		.loc 4 271 3 view .LVU128
 409               		.loc 4 271 10 is_stmt 0 view .LVU129
 410 0002 E091 0000 		lds r30,ch+11
 411 0006 F091 0000 		lds r31,ch+11+1
 412               		.loc 4 271 26 view .LVU130
 413 000a 908D      		ldd r25,Z+24
 414 000c 892B      		or r24,r25
 415               	.LVL17:
 416               		.loc 4 271 26 view .LVU131
 417 000e 808F      		std Z+24,r24
 418               	.LVL18:
 419               		.loc 4 271 26 view .LVU132
 420               	.LBE173:
 421               	.LBE172:
 203:../../../os/rt/src/chevents.c ****   chSysUnlock();
 422               		.loc 1 203 3 is_stmt 1 view .LVU133
 423               	.LBB174:
 424               	.LBI174:
 365:../../../os/rt/include/chsys.h **** 
 425               		.loc 2 365 20 view .LVU134
 426               	.LBB175:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 427               		.loc 2 367 22 view .LVU135
 368:../../../os/rt/include/chsys.h **** 
 428               		.loc 2 368 33 view .LVU136
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 429               		.loc 2 374 3 view .LVU137
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 430               		.loc 2 374 3 view .LVU138
 431               		.loc 2 378 3 view .LVU139
 432               	.LBB176:
 433               	.LBI176:
 445:../../../os/common/ports/AVR/chcore.h **** 
 434               		.loc 3 445 20 view .LVU140
 435               	.LBB177:
 436               		.loc 3 447 3 view .LVU141
 437               	/* #APP */
 438               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 439 0010 7894      		sei
 440               	 ;  0 "" 2
 441               	/* #NOAPP */
 442               	.LBE177:
 443               	.LBE176:
 444               	.LBE175:
 445               	.LBE174:
 204:../../../os/rt/src/chevents.c **** 
 205:../../../os/rt/src/chevents.c ****   return newevt;
 446               		.loc 1 205 3 view .LVU142
 447               	/* epilogue start */
 206:../../../os/rt/src/chevents.c **** }
 448               		.loc 1 206 1 is_stmt 0 view .LVU143
 449 0012 0895      		ret
 450               		.cfi_endproc
 451               	.LFE145:
 453               		.section	.text.chEvtGetAndClearFlags,"ax",@progbits
 454               	.global	chEvtGetAndClearFlags
 456               	chEvtGetAndClearFlags:
 457               	.LVL19:
 458               	.LFB147:
 207:../../../os/rt/src/chevents.c **** 
 208:../../../os/rt/src/chevents.c **** /**
 209:../../../os/rt/src/chevents.c ****  * @brief   Signals all the Event Listeners registered on the specified Event
 210:../../../os/rt/src/chevents.c ****  *          Source.
 211:../../../os/rt/src/chevents.c ****  * @details This function variants ORs the specified event flags to all the
 212:../../../os/rt/src/chevents.c ****  *          threads registered on the @p event_source_t in addition to the
 213:../../../os/rt/src/chevents.c ****  *          event flags specified by the threads themselves in the
 214:../../../os/rt/src/chevents.c ****  *          @p event_listener_t objects.
 215:../../../os/rt/src/chevents.c ****  * @post    This function does not reschedule so a call to a rescheduling
 216:../../../os/rt/src/chevents.c ****  *          function must be performed before unlocking the kernel. Note that
 217:../../../os/rt/src/chevents.c ****  *          interrupt handlers always reschedule on exit so an explicit
 218:../../../os/rt/src/chevents.c ****  *          reschedule must not be performed in ISRs.
 219:../../../os/rt/src/chevents.c ****  *
 220:../../../os/rt/src/chevents.c ****  * @param[in] esp       pointer to the @p event_source_t structure
 221:../../../os/rt/src/chevents.c ****  * @param[in] flags     the flags set to be added to the listener flags mask
 222:../../../os/rt/src/chevents.c ****  *
 223:../../../os/rt/src/chevents.c ****  * @iclass
 224:../../../os/rt/src/chevents.c ****  */
 225:../../../os/rt/src/chevents.c **** void chEvtBroadcastFlagsI(event_source_t *esp, eventflags_t flags) {
 226:../../../os/rt/src/chevents.c ****   event_listener_t *elp;
 227:../../../os/rt/src/chevents.c **** 
 228:../../../os/rt/src/chevents.c ****   chDbgCheckClassI();
 229:../../../os/rt/src/chevents.c ****   chDbgCheck(esp != NULL);
 230:../../../os/rt/src/chevents.c **** 
 231:../../../os/rt/src/chevents.c ****   elp = esp->next;
 232:../../../os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 233:../../../os/rt/src/chevents.c ****   while (elp != (event_listener_t *)esp) {
 234:../../../os/rt/src/chevents.c ****   /*lint -restore*/
 235:../../../os/rt/src/chevents.c ****     elp->flags |= flags;
 236:../../../os/rt/src/chevents.c ****     /* When flags == 0 the thread will always be signaled because the
 237:../../../os/rt/src/chevents.c ****        source does not emit any flag.*/
 238:../../../os/rt/src/chevents.c ****     if ((flags == (eventflags_t)0) ||
 239:../../../os/rt/src/chevents.c ****         ((elp->flags & elp->wflags) != (eventflags_t)0)) {
 240:../../../os/rt/src/chevents.c ****       chEvtSignalI(elp->listener, elp->events);
 241:../../../os/rt/src/chevents.c ****     }
 242:../../../os/rt/src/chevents.c ****     elp = elp->next;
 243:../../../os/rt/src/chevents.c ****   }
 244:../../../os/rt/src/chevents.c **** }
 245:../../../os/rt/src/chevents.c **** 
 246:../../../os/rt/src/chevents.c **** /**
 247:../../../os/rt/src/chevents.c ****  * @brief   Returns the flags associated to an @p event_listener_t.
 248:../../../os/rt/src/chevents.c ****  * @details The flags are returned and the @p event_listener_t flags mask is
 249:../../../os/rt/src/chevents.c ****  *          cleared.
 250:../../../os/rt/src/chevents.c ****  *
 251:../../../os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
 252:../../../os/rt/src/chevents.c ****  * @return              The flags added to the listener by the associated
 253:../../../os/rt/src/chevents.c ****  *                      event source.
 254:../../../os/rt/src/chevents.c ****  *
 255:../../../os/rt/src/chevents.c ****  * @api
 256:../../../os/rt/src/chevents.c ****  */
 257:../../../os/rt/src/chevents.c **** eventflags_t chEvtGetAndClearFlags(event_listener_t *elp) {
 459               		.loc 1 257 59 is_stmt 1 view -0
 460               		.cfi_startproc
 461               	/* prologue: function */
 462               	/* frame size = 0 */
 463               	/* stack size = 0 */
 464               	.L__stack_usage = 0
 465               		.loc 1 257 59 is_stmt 0 view .LVU145
 466 0000 FC01      		movw r30,r24
 258:../../../os/rt/src/chevents.c ****   eventflags_t flags;
 467               		.loc 1 258 3 is_stmt 1 view .LVU146
 259:../../../os/rt/src/chevents.c **** 
 260:../../../os/rt/src/chevents.c ****   chSysLock();
 468               		.loc 1 260 3 view .LVU147
 469               	.LBB178:
 470               	.LBI178:
 353:../../../os/rt/include/chsys.h **** 
 471               		.loc 2 353 20 view .LVU148
 472               	.LBE178:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 473               		.loc 2 355 3 view .LVU149
 474               	.LBB181:
 475               	.LBB179:
 476               	.LBI179:
 435:../../../os/common/ports/AVR/chcore.h **** 
 477               		.loc 3 435 20 view .LVU150
 478               	.LBB180:
 437:../../../os/common/ports/AVR/chcore.h **** }
 479               		.loc 3 437 3 view .LVU151
 480               	/* #APP */
 481               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 482 0002 F894      		cli
 483               	 ;  0 "" 2
 484               	/* #NOAPP */
 485               	.LBE180:
 486               	.LBE179:
 487               	.LBE181:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 488               		.loc 2 356 34 view .LVU152
 357:../../../os/rt/include/chsys.h **** }
 489               		.loc 2 357 20 view .LVU153
 261:../../../os/rt/src/chevents.c ****   flags = elp->flags;
 490               		.loc 1 261 3 view .LVU154
 491               		.loc 1 261 9 is_stmt 0 view .LVU155
 492 0004 8581      		ldd r24,Z+5
 493               	.LVL20:
 262:../../../os/rt/src/chevents.c ****   elp->flags = (eventflags_t)0;
 494               		.loc 1 262 3 is_stmt 1 view .LVU156
 495               		.loc 1 262 14 is_stmt 0 view .LVU157
 496 0006 1582      		std Z+5,__zero_reg__
 263:../../../os/rt/src/chevents.c ****   chSysUnlock();
 497               		.loc 1 263 3 is_stmt 1 view .LVU158
 498               	.LBB182:
 499               	.LBI182:
 365:../../../os/rt/include/chsys.h **** 
 500               		.loc 2 365 20 view .LVU159
 501               	.LBB183:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 502               		.loc 2 367 22 view .LVU160
 368:../../../os/rt/include/chsys.h **** 
 503               		.loc 2 368 33 view .LVU161
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 504               		.loc 2 374 3 view .LVU162
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 505               		.loc 2 374 3 view .LVU163
 506               		.loc 2 378 3 view .LVU164
 507               	.LBB184:
 508               	.LBI184:
 445:../../../os/common/ports/AVR/chcore.h **** 
 509               		.loc 3 445 20 view .LVU165
 510               	.LBB185:
 511               		.loc 3 447 3 view .LVU166
 512               	/* #APP */
 513               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 514 0008 7894      		sei
 515               	 ;  0 "" 2
 516               	/* #NOAPP */
 517               	.LBE185:
 518               	.LBE184:
 519               	.LBE183:
 520               	.LBE182:
 264:../../../os/rt/src/chevents.c **** 
 265:../../../os/rt/src/chevents.c ****   return flags;
 521               		.loc 1 265 3 view .LVU167
 522               	/* epilogue start */
 266:../../../os/rt/src/chevents.c **** }
 523               		.loc 1 266 1 is_stmt 0 view .LVU168
 524 000a 0895      		ret
 525               		.cfi_endproc
 526               	.LFE147:
 528               		.section	.text.chEvtSignalI,"ax",@progbits
 529               	.global	chEvtSignalI
 531               	chEvtSignalI:
 532               	.LVL21:
 533               	.LFB149:
 267:../../../os/rt/src/chevents.c **** 
 268:../../../os/rt/src/chevents.c **** /**
 269:../../../os/rt/src/chevents.c ****  * @brief   Adds a set of event flags directly to the specified @p thread_t.
 270:../../../os/rt/src/chevents.c ****  *
 271:../../../os/rt/src/chevents.c ****  * @param[in] tp        the thread to be signaled
 272:../../../os/rt/src/chevents.c ****  * @param[in] events    the events set to be ORed
 273:../../../os/rt/src/chevents.c ****  *
 274:../../../os/rt/src/chevents.c ****  * @api
 275:../../../os/rt/src/chevents.c ****  */
 276:../../../os/rt/src/chevents.c **** void chEvtSignal(thread_t *tp, eventmask_t events) {
 277:../../../os/rt/src/chevents.c **** 
 278:../../../os/rt/src/chevents.c ****   chDbgCheck(tp != NULL);
 279:../../../os/rt/src/chevents.c **** 
 280:../../../os/rt/src/chevents.c ****   chSysLock();
 281:../../../os/rt/src/chevents.c ****   chEvtSignalI(tp, events);
 282:../../../os/rt/src/chevents.c ****   chSchRescheduleS();
 283:../../../os/rt/src/chevents.c ****   chSysUnlock();
 284:../../../os/rt/src/chevents.c **** }
 285:../../../os/rt/src/chevents.c **** 
 286:../../../os/rt/src/chevents.c **** /**
 287:../../../os/rt/src/chevents.c ****  * @brief   Adds a set of event flags directly to the specified @p thread_t.
 288:../../../os/rt/src/chevents.c ****  * @post    This function does not reschedule so a call to a rescheduling
 289:../../../os/rt/src/chevents.c ****  *          function must be performed before unlocking the kernel. Note that
 290:../../../os/rt/src/chevents.c ****  *          interrupt handlers always reschedule on exit so an explicit
 291:../../../os/rt/src/chevents.c ****  *          reschedule must not be performed in ISRs.
 292:../../../os/rt/src/chevents.c ****  *
 293:../../../os/rt/src/chevents.c ****  * @param[in] tp        the thread to be signaled
 294:../../../os/rt/src/chevents.c ****  * @param[in] events    the events set to be ORed
 295:../../../os/rt/src/chevents.c ****  *
 296:../../../os/rt/src/chevents.c ****  * @iclass
 297:../../../os/rt/src/chevents.c ****  */
 298:../../../os/rt/src/chevents.c **** void chEvtSignalI(thread_t *tp, eventmask_t events) {
 534               		.loc 1 298 53 is_stmt 1 view -0
 535               		.cfi_startproc
 536               	/* prologue: function */
 537               	/* frame size = 0 */
 538               	/* stack size = 0 */
 539               	.L__stack_usage = 0
 540               		.loc 1 298 53 is_stmt 0 view .LVU170
 541 0000 FC01      		movw r30,r24
 299:../../../os/rt/src/chevents.c **** 
 300:../../../os/rt/src/chevents.c ****   chDbgCheckClassI();
 542               		.loc 1 300 21 is_stmt 1 view .LVU171
 301:../../../os/rt/src/chevents.c ****   chDbgCheck(tp != NULL);
 543               		.loc 1 301 3 view .LVU172
 544               		.loc 1 301 3 view .LVU173
 302:../../../os/rt/src/chevents.c **** 
 303:../../../os/rt/src/chevents.c ****   tp->epending |= events;
 545               		.loc 1 303 3 view .LVU174
 546               		.loc 1 303 16 is_stmt 0 view .LVU175
 547 0002 808D      		ldd r24,Z+24
 548               	.LVL22:
 549               		.loc 1 303 16 view .LVU176
 550 0004 682B      		or r22,r24
 551               	.LVL23:
 552               		.loc 1 303 16 view .LVU177
 553 0006 608F      		std Z+24,r22
 304:../../../os/rt/src/chevents.c ****   /* Test on the AND/OR conditions wait states.*/
 305:../../../os/rt/src/chevents.c ****   if (((tp->state == CH_STATE_WTOREVT) &&
 554               		.loc 1 305 3 is_stmt 1 view .LVU178
 555               		.loc 1 305 11 is_stmt 0 view .LVU179
 556 0008 8585      		ldd r24,Z+13
 557               		.loc 1 305 6 view .LVU180
 558 000a 8A30      		cpi r24,lo8(10)
 559 000c 01F0      		breq .L17
 306:../../../os/rt/src/chevents.c ****        ((tp->epending & tp->u.ewmask) != (eventmask_t)0)) ||
 560               		.loc 1 306 59 view .LVU181
 561 000e 8B30      		cpi r24,lo8(11)
 562 0010 01F0      		breq .L18
 563               	.L13:
 564               	/* epilogue start */
 307:../../../os/rt/src/chevents.c ****       ((tp->state == CH_STATE_WTANDEVT) &&
 308:../../../os/rt/src/chevents.c ****        ((tp->epending & tp->u.ewmask) == tp->u.ewmask))) {
 309:../../../os/rt/src/chevents.c ****     tp->u.rdymsg = MSG_OK;
 310:../../../os/rt/src/chevents.c ****     (void) chSchReadyI(tp);
 311:../../../os/rt/src/chevents.c ****   }
 312:../../../os/rt/src/chevents.c **** }
 565               		.loc 1 312 1 view .LVU182
 566 0012 0895      		ret
 567               	.L18:
 308:../../../os/rt/src/chevents.c ****     tp->u.rdymsg = MSG_OK;
 568               		.loc 1 308 30 view .LVU183
 569 0014 8089      		ldd r24,Z+16
 308:../../../os/rt/src/chevents.c ****     tp->u.rdymsg = MSG_OK;
 570               		.loc 1 308 39 view .LVU184
 571 0016 6823      		and r22,r24
 307:../../../os/rt/src/chevents.c ****       ((tp->state == CH_STATE_WTANDEVT) &&
 572               		.loc 1 307 41 view .LVU185
 573 0018 8613      		cpse r24,r22
 574 001a 00C0      		rjmp .L13
 575               	.L15:
 309:../../../os/rt/src/chevents.c ****     (void) chSchReadyI(tp);
 576               		.loc 1 309 5 is_stmt 1 view .LVU186
 309:../../../os/rt/src/chevents.c ****     (void) chSchReadyI(tp);
 577               		.loc 1 309 18 is_stmt 0 view .LVU187
 578 001c 118A      		std Z+17,__zero_reg__
 579 001e 108A      		std Z+16,__zero_reg__
 310:../../../os/rt/src/chevents.c ****   }
 580               		.loc 1 310 5 is_stmt 1 view .LVU188
 310:../../../os/rt/src/chevents.c ****   }
 581               		.loc 1 310 12 is_stmt 0 view .LVU189
 582 0020 CF01      		movw r24,r30
 583 0022 0C94 0000 		jmp chSchReadyI
 584               	.LVL24:
 585               	.L17:
 306:../../../os/rt/src/chevents.c ****       ((tp->state == CH_STATE_WTANDEVT) &&
 586               		.loc 1 306 39 discriminator 1 view .LVU190
 587 0026 8089      		ldd r24,Z+16
 588 0028 6823      		and r22,r24
 305:../../../os/rt/src/chevents.c ****        ((tp->epending & tp->u.ewmask) != (eventmask_t)0)) ||
 589               		.loc 1 305 40 discriminator 1 view .LVU191
 590 002a 01F4      		brne .L15
 591 002c 0895      		ret
 592               		.cfi_endproc
 593               	.LFE149:
 595               		.section	.text.chEvtBroadcastFlagsI,"ax",@progbits
 596               	.global	chEvtBroadcastFlagsI
 598               	chEvtBroadcastFlagsI:
 599               	.LVL25:
 600               	.LFB146:
 225:../../../os/rt/src/chevents.c ****   event_listener_t *elp;
 601               		.loc 1 225 68 is_stmt 1 view -0
 602               		.cfi_startproc
 225:../../../os/rt/src/chevents.c ****   event_listener_t *elp;
 603               		.loc 1 225 68 is_stmt 0 view .LVU193
 604 0000 EF92      		push r14
 605               	.LCFI0:
 606               		.cfi_def_cfa_offset 3
 607               		.cfi_offset 14, -2
 608 0002 FF92      		push r15
 609               	.LCFI1:
 610               		.cfi_def_cfa_offset 4
 611               		.cfi_offset 15, -3
 612 0004 1F93      		push r17
 613               	.LCFI2:
 614               		.cfi_def_cfa_offset 5
 615               		.cfi_offset 17, -4
 616 0006 CF93      		push r28
 617               	.LCFI3:
 618               		.cfi_def_cfa_offset 6
 619               		.cfi_offset 28, -5
 620 0008 DF93      		push r29
 621               	.LCFI4:
 622               		.cfi_def_cfa_offset 7
 623               		.cfi_offset 29, -6
 624               	/* prologue: function */
 625               	/* frame size = 0 */
 626               	/* stack size = 5 */
 627               	.L__stack_usage = 5
 628 000a 7C01      		movw r14,r24
 629 000c 162F      		mov r17,r22
 226:../../../os/rt/src/chevents.c **** 
 630               		.loc 1 226 3 is_stmt 1 view .LVU194
 228:../../../os/rt/src/chevents.c ****   chDbgCheck(esp != NULL);
 631               		.loc 1 228 21 view .LVU195
 229:../../../os/rt/src/chevents.c **** 
 632               		.loc 1 229 3 view .LVU196
 229:../../../os/rt/src/chevents.c **** 
 633               		.loc 1 229 3 view .LVU197
 231:../../../os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 634               		.loc 1 231 3 view .LVU198
 231:../../../os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 635               		.loc 1 231 7 is_stmt 0 view .LVU199
 636 000e FC01      		movw r30,r24
 637 0010 C081      		ld r28,Z
 638 0012 D181      		ldd r29,Z+1
 639               	.LVL26:
 233:../../../os/rt/src/chevents.c ****   /*lint -restore*/
 640               		.loc 1 233 3 is_stmt 1 view .LVU200
 233:../../../os/rt/src/chevents.c ****   /*lint -restore*/
 641               		.loc 1 233 9 is_stmt 0 view .LVU201
 642 0014 8C17      		cp r24,r28
 643 0016 9D07      		cpc r25,r29
 644 0018 01F0      		breq .L19
 645               	.LVL27:
 646               	.L23:
 235:../../../os/rt/src/chevents.c ****     /* When flags == 0 the thread will always be signaled because the
 647               		.loc 1 235 5 is_stmt 1 view .LVU202
 235:../../../os/rt/src/chevents.c ****     /* When flags == 0 the thread will always be signaled because the
 648               		.loc 1 235 16 is_stmt 0 view .LVU203
 649 001a 8D81      		ldd r24,Y+5
 650 001c 812B      		or r24,r17
 651 001e 8D83      		std Y+5,r24
 238:../../../os/rt/src/chevents.c ****         ((elp->flags & elp->wflags) != (eventflags_t)0)) {
 652               		.loc 1 238 5 is_stmt 1 view .LVU204
 238:../../../os/rt/src/chevents.c ****         ((elp->flags & elp->wflags) != (eventflags_t)0)) {
 653               		.loc 1 238 8 is_stmt 0 view .LVU205
 654 0020 1123      		tst r17
 655 0022 01F0      		breq .L21
 239:../../../os/rt/src/chevents.c ****       chEvtSignalI(elp->listener, elp->events);
 656               		.loc 1 239 37 discriminator 1 view .LVU206
 657 0024 9E81      		ldd r25,Y+6
 658 0026 8923      		and r24,r25
 238:../../../os/rt/src/chevents.c ****         ((elp->flags & elp->wflags) != (eventflags_t)0)) {
 659               		.loc 1 238 36 discriminator 1 view .LVU207
 660 0028 01F0      		breq .L22
 661               	.L21:
 240:../../../os/rt/src/chevents.c ****     }
 662               		.loc 1 240 7 is_stmt 1 view .LVU208
 663 002a 6C81      		ldd r22,Y+4
 664 002c 8A81      		ldd r24,Y+2
 665 002e 9B81      		ldd r25,Y+3
 666 0030 0E94 0000 		call chEvtSignalI
 667               	.LVL28:
 668               	.L22:
 242:../../../os/rt/src/chevents.c ****   }
 669               		.loc 1 242 5 view .LVU209
 242:../../../os/rt/src/chevents.c ****   }
 670               		.loc 1 242 9 is_stmt 0 view .LVU210
 671 0034 0990      		ld __tmp_reg__,Y+
 672 0036 D881      		ld r29,Y
 673 0038 C02D      		mov r28,__tmp_reg__
 674               	.LVL29:
 233:../../../os/rt/src/chevents.c ****   /*lint -restore*/
 675               		.loc 1 233 9 view .LVU211
 676 003a EC16      		cp r14,r28
 677 003c FD06      		cpc r15,r29
 678 003e 01F4      		brne .L23
 679               	.L19:
 680               	/* epilogue start */
 244:../../../os/rt/src/chevents.c **** 
 681               		.loc 1 244 1 view .LVU212
 682 0040 DF91      		pop r29
 683 0042 CF91      		pop r28
 684               	.LVL30:
 244:../../../os/rt/src/chevents.c **** 
 685               		.loc 1 244 1 view .LVU213
 686 0044 1F91      		pop r17
 687               	.LVL31:
 244:../../../os/rt/src/chevents.c **** 
 688               		.loc 1 244 1 view .LVU214
 689 0046 FF90      		pop r15
 690 0048 EF90      		pop r14
 691               	.LVL32:
 244:../../../os/rt/src/chevents.c **** 
 692               		.loc 1 244 1 view .LVU215
 693 004a 0895      		ret
 694               		.cfi_endproc
 695               	.LFE146:
 697               		.section	.text.chEvtSignal,"ax",@progbits
 698               	.global	chEvtSignal
 700               	chEvtSignal:
 701               	.LVL33:
 702               	.LFB148:
 276:../../../os/rt/src/chevents.c **** 
 703               		.loc 1 276 52 is_stmt 1 view -0
 704               		.cfi_startproc
 705               	/* prologue: function */
 706               	/* frame size = 0 */
 707               	/* stack size = 0 */
 708               	.L__stack_usage = 0
 278:../../../os/rt/src/chevents.c **** 
 709               		.loc 1 278 3 view .LVU217
 278:../../../os/rt/src/chevents.c **** 
 710               		.loc 1 278 3 view .LVU218
 280:../../../os/rt/src/chevents.c ****   chEvtSignalI(tp, events);
 711               		.loc 1 280 3 view .LVU219
 712               	.LBB186:
 713               	.LBI186:
 353:../../../os/rt/include/chsys.h **** 
 714               		.loc 2 353 20 view .LVU220
 715               	.LBE186:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 716               		.loc 2 355 3 view .LVU221
 717               	.LBB189:
 718               	.LBB187:
 719               	.LBI187:
 435:../../../os/common/ports/AVR/chcore.h **** 
 720               		.loc 3 435 20 view .LVU222
 721               	.LBB188:
 437:../../../os/common/ports/AVR/chcore.h **** }
 722               		.loc 3 437 3 view .LVU223
 723               	/* #APP */
 724               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 725 0000 F894      		cli
 726               	 ;  0 "" 2
 727               	/* #NOAPP */
 728               	.LBE188:
 729               	.LBE187:
 730               	.LBE189:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 731               		.loc 2 356 34 view .LVU224
 357:../../../os/rt/include/chsys.h **** }
 732               		.loc 2 357 20 view .LVU225
 281:../../../os/rt/src/chevents.c ****   chSchRescheduleS();
 733               		.loc 1 281 3 view .LVU226
 734 0002 0E94 0000 		call chEvtSignalI
 735               	.LVL34:
 282:../../../os/rt/src/chevents.c ****   chSysUnlock();
 736               		.loc 1 282 3 view .LVU227
 737 0006 0E94 0000 		call chSchRescheduleS
 738               	.LVL35:
 283:../../../os/rt/src/chevents.c **** }
 739               		.loc 1 283 3 view .LVU228
 740               	.LBB190:
 741               	.LBI190:
 365:../../../os/rt/include/chsys.h **** 
 742               		.loc 2 365 20 view .LVU229
 743               	.LBB191:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 744               		.loc 2 367 22 view .LVU230
 368:../../../os/rt/include/chsys.h **** 
 745               		.loc 2 368 33 view .LVU231
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 746               		.loc 2 374 3 view .LVU232
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 747               		.loc 2 374 3 view .LVU233
 748               		.loc 2 378 3 view .LVU234
 749               	.LBB192:
 750               	.LBI192:
 445:../../../os/common/ports/AVR/chcore.h **** 
 751               		.loc 3 445 20 view .LVU235
 752               	.LBB193:
 753               		.loc 3 447 3 view .LVU236
 754               	/* #APP */
 755               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 756 000a 7894      		sei
 757               	 ;  0 "" 2
 758               	/* #NOAPP */
 759               	/* epilogue start */
 760               	.LBE193:
 761               	.LBE192:
 762               	.LBE191:
 763               	.LBE190:
 284:../../../os/rt/src/chevents.c **** 
 764               		.loc 1 284 1 is_stmt 0 view .LVU237
 765 000c 0895      		ret
 766               		.cfi_endproc
 767               	.LFE148:
 769               		.section	.text.chEvtBroadcastFlags,"ax",@progbits
 770               	.global	chEvtBroadcastFlags
 772               	chEvtBroadcastFlags:
 773               	.LVL36:
 774               	.LFB150:
 313:../../../os/rt/src/chevents.c **** 
 314:../../../os/rt/src/chevents.c **** /**
 315:../../../os/rt/src/chevents.c ****  * @brief   Signals all the Event Listeners registered on the specified Event
 316:../../../os/rt/src/chevents.c ****  *          Source.
 317:../../../os/rt/src/chevents.c ****  * @details This function variants ORs the specified event flags to all the
 318:../../../os/rt/src/chevents.c ****  *          threads registered on the @p event_source_t in addition to the
 319:../../../os/rt/src/chevents.c ****  *          event flags specified by the threads themselves in the
 320:../../../os/rt/src/chevents.c ****  *          @p event_listener_t objects.
 321:../../../os/rt/src/chevents.c ****  *
 322:../../../os/rt/src/chevents.c ****  * @param[in] esp       pointer to the @p event_source_t structure
 323:../../../os/rt/src/chevents.c ****  * @param[in] flags     the flags set to be added to the listener flags mask
 324:../../../os/rt/src/chevents.c ****  *
 325:../../../os/rt/src/chevents.c ****  * @api
 326:../../../os/rt/src/chevents.c ****  */
 327:../../../os/rt/src/chevents.c **** void chEvtBroadcastFlags(event_source_t *esp, eventflags_t flags) {
 775               		.loc 1 327 67 is_stmt 1 view -0
 776               		.cfi_startproc
 777               	/* prologue: function */
 778               	/* frame size = 0 */
 779               	/* stack size = 0 */
 780               	.L__stack_usage = 0
 328:../../../os/rt/src/chevents.c **** 
 329:../../../os/rt/src/chevents.c ****   chSysLock();
 781               		.loc 1 329 3 view .LVU239
 782               	.LBB194:
 783               	.LBI194:
 353:../../../os/rt/include/chsys.h **** 
 784               		.loc 2 353 20 view .LVU240
 785               	.LBE194:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 786               		.loc 2 355 3 view .LVU241
 787               	.LBB197:
 788               	.LBB195:
 789               	.LBI195:
 435:../../../os/common/ports/AVR/chcore.h **** 
 790               		.loc 3 435 20 view .LVU242
 791               	.LBB196:
 437:../../../os/common/ports/AVR/chcore.h **** }
 792               		.loc 3 437 3 view .LVU243
 793               	/* #APP */
 794               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 795 0000 F894      		cli
 796               	 ;  0 "" 2
 797               	/* #NOAPP */
 798               	.LBE196:
 799               	.LBE195:
 800               	.LBE197:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 801               		.loc 2 356 34 view .LVU244
 357:../../../os/rt/include/chsys.h **** }
 802               		.loc 2 357 20 view .LVU245
 330:../../../os/rt/src/chevents.c ****   chEvtBroadcastFlagsI(esp, flags);
 803               		.loc 1 330 3 view .LVU246
 804 0002 0E94 0000 		call chEvtBroadcastFlagsI
 805               	.LVL37:
 331:../../../os/rt/src/chevents.c ****   chSchRescheduleS();
 806               		.loc 1 331 3 view .LVU247
 807 0006 0E94 0000 		call chSchRescheduleS
 808               	.LVL38:
 332:../../../os/rt/src/chevents.c ****   chSysUnlock();
 809               		.loc 1 332 3 view .LVU248
 810               	.LBB198:
 811               	.LBI198:
 365:../../../os/rt/include/chsys.h **** 
 812               		.loc 2 365 20 view .LVU249
 813               	.LBB199:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 814               		.loc 2 367 22 view .LVU250
 368:../../../os/rt/include/chsys.h **** 
 815               		.loc 2 368 33 view .LVU251
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 816               		.loc 2 374 3 view .LVU252
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 817               		.loc 2 374 3 view .LVU253
 818               		.loc 2 378 3 view .LVU254
 819               	.LBB200:
 820               	.LBI200:
 445:../../../os/common/ports/AVR/chcore.h **** 
 821               		.loc 3 445 20 view .LVU255
 822               	.LBB201:
 823               		.loc 3 447 3 view .LVU256
 824               	/* #APP */
 825               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 826 000a 7894      		sei
 827               	 ;  0 "" 2
 828               	/* #NOAPP */
 829               	/* epilogue start */
 830               	.LBE201:
 831               	.LBE200:
 832               	.LBE199:
 833               	.LBE198:
 333:../../../os/rt/src/chevents.c **** }
 834               		.loc 1 333 1 is_stmt 0 view .LVU257
 835 000c 0895      		ret
 836               		.cfi_endproc
 837               	.LFE150:
 839               		.section	.text.chEvtGetAndClearFlagsI,"ax",@progbits
 840               	.global	chEvtGetAndClearFlagsI
 842               	chEvtGetAndClearFlagsI:
 843               	.LVL39:
 844               	.LFB151:
 334:../../../os/rt/src/chevents.c **** 
 335:../../../os/rt/src/chevents.c **** /**
 336:../../../os/rt/src/chevents.c ****  * @brief   Returns the flags associated to an @p event_listener_t.
 337:../../../os/rt/src/chevents.c ****  * @details The flags are returned and the @p event_listener_t flags mask is
 338:../../../os/rt/src/chevents.c ****  *          cleared.
 339:../../../os/rt/src/chevents.c ****  *
 340:../../../os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
 341:../../../os/rt/src/chevents.c ****  * @return              The flags added to the listener by the associated
 342:../../../os/rt/src/chevents.c ****  *                      event source.
 343:../../../os/rt/src/chevents.c ****  *
 344:../../../os/rt/src/chevents.c ****  * @iclass
 345:../../../os/rt/src/chevents.c ****  */
 346:../../../os/rt/src/chevents.c **** eventflags_t chEvtGetAndClearFlagsI(event_listener_t *elp) {
 845               		.loc 1 346 60 is_stmt 1 view -0
 846               		.cfi_startproc
 847               	/* prologue: function */
 848               	/* frame size = 0 */
 849               	/* stack size = 0 */
 850               	.L__stack_usage = 0
 851               		.loc 1 346 60 is_stmt 0 view .LVU259
 852 0000 FC01      		movw r30,r24
 347:../../../os/rt/src/chevents.c ****   eventflags_t flags;
 853               		.loc 1 347 3 is_stmt 1 view .LVU260
 348:../../../os/rt/src/chevents.c **** 
 349:../../../os/rt/src/chevents.c ****   flags = elp->flags;
 854               		.loc 1 349 3 view .LVU261
 855               		.loc 1 349 9 is_stmt 0 view .LVU262
 856 0002 8581      		ldd r24,Z+5
 857               	.LVL40:
 350:../../../os/rt/src/chevents.c ****   elp->flags = (eventflags_t)0;
 858               		.loc 1 350 3 is_stmt 1 view .LVU263
 859               		.loc 1 350 14 is_stmt 0 view .LVU264
 860 0004 1582      		std Z+5,__zero_reg__
 351:../../../os/rt/src/chevents.c **** 
 352:../../../os/rt/src/chevents.c ****   return flags;
 861               		.loc 1 352 3 is_stmt 1 view .LVU265
 862               	/* epilogue start */
 353:../../../os/rt/src/chevents.c **** }
 863               		.loc 1 353 1 is_stmt 0 view .LVU266
 864 0006 0895      		ret
 865               		.cfi_endproc
 866               	.LFE151:
 868               		.section	.text.chEvtDispatch,"ax",@progbits
 869               	.global	chEvtDispatch
 871               	chEvtDispatch:
 872               	.LVL41:
 873               	.LFB152:
 354:../../../os/rt/src/chevents.c **** 
 355:../../../os/rt/src/chevents.c **** /**
 356:../../../os/rt/src/chevents.c ****  * @brief   Invokes the event handlers associated to an event flags mask.
 357:../../../os/rt/src/chevents.c ****  *
 358:../../../os/rt/src/chevents.c ****  * @param[in] events    mask of events to be dispatched
 359:../../../os/rt/src/chevents.c ****  * @param[in] handlers  an array of @p evhandler_t. The array must have size
 360:../../../os/rt/src/chevents.c ****  *                      equal to the number of bits in eventmask_t.
 361:../../../os/rt/src/chevents.c ****  *
 362:../../../os/rt/src/chevents.c ****  * @api
 363:../../../os/rt/src/chevents.c ****  */
 364:../../../os/rt/src/chevents.c **** void chEvtDispatch(const evhandler_t *handlers, eventmask_t events) {
 874               		.loc 1 364 69 is_stmt 1 view -0
 875               		.cfi_startproc
 876               		.loc 1 364 69 is_stmt 0 view .LVU268
 877 0000 BF92      		push r11
 878               	.LCFI5:
 879               		.cfi_def_cfa_offset 3
 880               		.cfi_offset 11, -2
 881 0002 CF92      		push r12
 882               	.LCFI6:
 883               		.cfi_def_cfa_offset 4
 884               		.cfi_offset 12, -3
 885 0004 DF92      		push r13
 886               	.LCFI7:
 887               		.cfi_def_cfa_offset 5
 888               		.cfi_offset 13, -4
 889 0006 EF92      		push r14
 890               	.LCFI8:
 891               		.cfi_def_cfa_offset 6
 892               		.cfi_offset 14, -5
 893 0008 FF92      		push r15
 894               	.LCFI9:
 895               		.cfi_def_cfa_offset 7
 896               		.cfi_offset 15, -6
 897 000a 0F93      		push r16
 898               	.LCFI10:
 899               		.cfi_def_cfa_offset 8
 900               		.cfi_offset 16, -7
 901 000c 1F93      		push r17
 902               	.LCFI11:
 903               		.cfi_def_cfa_offset 9
 904               		.cfi_offset 17, -8
 905 000e CF93      		push r28
 906               	.LCFI12:
 907               		.cfi_def_cfa_offset 10
 908               		.cfi_offset 28, -9
 909 0010 DF93      		push r29
 910               	.LCFI13:
 911               		.cfi_def_cfa_offset 11
 912               		.cfi_offset 29, -10
 913               	/* prologue: function */
 914               	/* frame size = 0 */
 915               	/* stack size = 9 */
 916               	.L__stack_usage = 9
 917 0012 EC01      		movw r28,r24
 918 0014 B62E      		mov r11,r22
 365:../../../os/rt/src/chevents.c ****   eventid_t eid;
 919               		.loc 1 365 3 is_stmt 1 view .LVU269
 366:../../../os/rt/src/chevents.c **** 
 367:../../../os/rt/src/chevents.c ****   chDbgCheck(handlers != NULL);
 920               		.loc 1 367 3 view .LVU270
 921               		.loc 1 367 3 view .LVU271
 368:../../../os/rt/src/chevents.c **** 
 369:../../../os/rt/src/chevents.c ****   eid = (eventid_t)0;
 922               		.loc 1 369 3 view .LVU272
 923               	.LVL42:
 370:../../../os/rt/src/chevents.c ****   while (events != (eventmask_t)0) {
 924               		.loc 1 370 3 view .LVU273
 925               		.loc 1 370 9 is_stmt 0 view .LVU274
 926 0016 6623      		tst r22
 927 0018 01F0      		breq .L34
 369:../../../os/rt/src/chevents.c ****   while (events != (eventmask_t)0) {
 928               		.loc 1 369 7 view .LVU275
 929 001a C12C      		mov r12,__zero_reg__
 930 001c D12C      		mov r13,__zero_reg__
 931 001e 7601      		movw r14,r12
 932 0020 462F      		mov r20,r22
 933 0022 50E0      		ldi r21,0
 371:../../../os/rt/src/chevents.c ****     if ((events & EVENT_MASK(eid)) != (eventmask_t)0) {
 372:../../../os/rt/src/chevents.c ****       chDbgAssert(handlers[eid] != NULL, "null handler");
 373:../../../os/rt/src/chevents.c ****       events &= ~EVENT_MASK(eid);
 934               		.loc 1 373 18 view .LVU276
 935 0024 01E0      		ldi r16,lo8(1)
 936 0026 10E0      		ldi r17,0
 937               	.LVL43:
 938               	.L35:
 371:../../../os/rt/src/chevents.c ****     if ((events & EVENT_MASK(eid)) != (eventmask_t)0) {
 939               		.loc 1 371 5 is_stmt 1 view .LVU277
 371:../../../os/rt/src/chevents.c ****     if ((events & EVENT_MASK(eid)) != (eventmask_t)0) {
 940               		.loc 1 371 36 is_stmt 0 view .LVU278
 941 0028 9A01      		movw r18,r20
 942 002a 0C2C      		mov r0,r12
 943 002c 00C0      		rjmp 2f
 944               		1:
 945 002e 3595      		asr r19
 946 0030 2795      		ror r18
 947               		2:
 948 0032 0A94      		dec r0
 949 0034 02F4      		brpl 1b
 371:../../../os/rt/src/chevents.c ****     if ((events & EVENT_MASK(eid)) != (eventmask_t)0) {
 950               		.loc 1 371 8 view .LVU279
 951 0036 20FF      		sbrs r18,0
 952 0038 00C0      		rjmp .L37
 372:../../../os/rt/src/chevents.c ****       events &= ~EVENT_MASK(eid);
 953               		.loc 1 372 7 is_stmt 1 view .LVU280
 372:../../../os/rt/src/chevents.c ****       events &= ~EVENT_MASK(eid);
 954               		.loc 1 372 7 view .LVU281
 955               		.loc 1 373 7 view .LVU282
 956               		.loc 1 373 18 is_stmt 0 view .LVU283
 957 003a 9801      		movw r18,r16
 958 003c 0C2C      		mov r0,r12
 959 003e 00C0      		rjmp 2f
 960               		1:
 961 0040 220F      		lsl r18
 962 0042 331F      		rol r19
 963               		2:
 964 0044 0A94      		dec r0
 965 0046 02F4      		brpl 1b
 966 0048 C901      		movw r24,r18
 967               		.loc 1 373 14 view .LVU284
 968 004a 8095      		com r24
 969 004c B822      		and r11,r24
 970               	.LVL44:
 374:../../../os/rt/src/chevents.c ****       handlers[eid](eid);
 971               		.loc 1 374 7 is_stmt 1 view .LVU285
 972               		.loc 1 374 15 is_stmt 0 view .LVU286
 973 004e F601      		movw r30,r12
 974 0050 EE0F      		lsl r30
 975 0052 FF1F      		rol r31
 976 0054 EC0F      		add r30,r28
 977 0056 FD1F      		adc r31,r29
 978               		.loc 1 374 7 view .LVU287
 979 0058 0190      		ld __tmp_reg__,Z+
 980 005a F081      		ld r31,Z
 981 005c E02D      		mov r30,__tmp_reg__
 982 005e C701      		movw r24,r14
 983 0060 B601      		movw r22,r12
 984 0062 0995      		icall
 985               	.LVL45:
 375:../../../os/rt/src/chevents.c ****     }
 376:../../../os/rt/src/chevents.c ****     eid++;
 986               		.loc 1 376 5 is_stmt 1 view .LVU288
 987               		.loc 1 376 8 is_stmt 0 view .LVU289
 988 0064 3FEF      		ldi r19,-1
 989 0066 C31A      		sub r12,r19
 990 0068 D30A      		sbc r13,r19
 991 006a E30A      		sbc r14,r19
 992 006c F30A      		sbc r15,r19
 993               	.LVL46:
 370:../../../os/rt/src/chevents.c ****     if ((events & EVENT_MASK(eid)) != (eventmask_t)0) {
 994               		.loc 1 370 9 view .LVU290
 995 006e BB20      		tst r11
 996 0070 01F0      		breq .L34
 997 0072 4B2D      		mov r20,r11
 998 0074 50E0      		ldi r21,0
 999 0076 00C0      		rjmp .L35
 1000               	.L37:
 1001               		.loc 1 376 5 is_stmt 1 view .LVU291
 1002               		.loc 1 376 8 is_stmt 0 view .LVU292
 1003 0078 8FEF      		ldi r24,-1
 1004 007a C81A      		sub r12,r24
 1005 007c D80A      		sbc r13,r24
 1006 007e E80A      		sbc r14,r24
 1007 0080 F80A      		sbc r15,r24
 1008               	.LVL47:
 1009               		.loc 1 376 8 view .LVU293
 1010 0082 00C0      		rjmp .L35
 1011               	.LVL48:
 1012               	.L34:
 1013               	/* epilogue start */
 377:../../../os/rt/src/chevents.c ****   }
 378:../../../os/rt/src/chevents.c **** }
 1014               		.loc 1 378 1 view .LVU294
 1015 0084 DF91      		pop r29
 1016 0086 CF91      		pop r28
 1017               	.LVL49:
 1018               		.loc 1 378 1 view .LVU295
 1019 0088 1F91      		pop r17
 1020 008a 0F91      		pop r16
 1021 008c FF90      		pop r15
 1022 008e EF90      		pop r14
 1023 0090 DF90      		pop r13
 1024 0092 CF90      		pop r12
 1025 0094 BF90      		pop r11
 1026               	.LVL50:
 1027               		.loc 1 378 1 view .LVU296
 1028 0096 0895      		ret
 1029               		.cfi_endproc
 1030               	.LFE152:
 1032               		.section	.text.chEvtWaitOne,"ax",@progbits
 1033               	.global	chEvtWaitOne
 1035               	chEvtWaitOne:
 1036               	.LVL51:
 1037               	.LFB153:
 379:../../../os/rt/src/chevents.c **** 
 380:../../../os/rt/src/chevents.c **** #if (CH_CFG_OPTIMIZE_SPEED == TRUE) ||                                      \
 381:../../../os/rt/src/chevents.c ****     (CH_CFG_USE_EVENTS_TIMEOUT == FALSE) ||                                 \
 382:../../../os/rt/src/chevents.c ****     defined(__DOXYGEN__)
 383:../../../os/rt/src/chevents.c **** /**
 384:../../../os/rt/src/chevents.c ****  * @brief   Waits for exactly one of the specified events.
 385:../../../os/rt/src/chevents.c ****  * @details The function waits for one event among those specified in
 386:../../../os/rt/src/chevents.c ****  *          @p events to become pending then the event is cleared and returned.
 387:../../../os/rt/src/chevents.c ****  * @note    One and only one event is served in the function, the one with the
 388:../../../os/rt/src/chevents.c ****  *          lowest event id. The function is meant to be invoked into a loop in
 389:../../../os/rt/src/chevents.c ****  *          order to serve all the pending events.<br>
 390:../../../os/rt/src/chevents.c ****  *          This means that Event Listeners with a lower event identifier have
 391:../../../os/rt/src/chevents.c ****  *          an higher priority.
 392:../../../os/rt/src/chevents.c ****  *
 393:../../../os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 394:../../../os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 395:../../../os/rt/src/chevents.c ****  * @return              The mask of the lowest event id served and cleared.
 396:../../../os/rt/src/chevents.c ****  *
 397:../../../os/rt/src/chevents.c ****  * @api
 398:../../../os/rt/src/chevents.c ****  */
 399:../../../os/rt/src/chevents.c **** eventmask_t chEvtWaitOne(eventmask_t events) {
 1038               		.loc 1 399 46 is_stmt 1 view -0
 1039               		.cfi_startproc
 1040               		.loc 1 399 46 is_stmt 0 view .LVU298
 1041 0000 1F93      		push r17
 1042               	.LCFI14:
 1043               		.cfi_def_cfa_offset 3
 1044               		.cfi_offset 17, -2
 1045 0002 CF93      		push r28
 1046               	.LCFI15:
 1047               		.cfi_def_cfa_offset 4
 1048               		.cfi_offset 28, -3
 1049 0004 DF93      		push r29
 1050               	.LCFI16:
 1051               		.cfi_def_cfa_offset 5
 1052               		.cfi_offset 29, -4
 1053               	/* prologue: function */
 1054               	/* frame size = 0 */
 1055               	/* stack size = 3 */
 1056               	.L__stack_usage = 3
 1057 0006 182F      		mov r17,r24
 400:../../../os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1058               		.loc 1 400 3 is_stmt 1 view .LVU299
 1059               		.loc 1 400 13 is_stmt 0 view .LVU300
 1060 0008 C091 0000 		lds r28,ch+11
 1061 000c D091 0000 		lds r29,ch+11+1
 1062               	.LVL52:
 401:../../../os/rt/src/chevents.c ****   eventmask_t m;
 1063               		.loc 1 401 3 is_stmt 1 view .LVU301
 402:../../../os/rt/src/chevents.c **** 
 403:../../../os/rt/src/chevents.c ****   chSysLock();
 1064               		.loc 1 403 3 view .LVU302
 1065               	.LBB202:
 1066               	.LBI202:
 353:../../../os/rt/include/chsys.h **** 
 1067               		.loc 2 353 20 view .LVU303
 1068               	.LBE202:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1069               		.loc 2 355 3 view .LVU304
 1070               	.LBB205:
 1071               	.LBB203:
 1072               	.LBI203:
 435:../../../os/common/ports/AVR/chcore.h **** 
 1073               		.loc 3 435 20 view .LVU305
 1074               	.LBB204:
 437:../../../os/common/ports/AVR/chcore.h **** }
 1075               		.loc 3 437 3 view .LVU306
 1076               	/* #APP */
 1077               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 1078 0010 F894      		cli
 1079               	 ;  0 "" 2
 1080               	/* #NOAPP */
 1081               	.LBE204:
 1082               	.LBE203:
 1083               	.LBE205:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 1084               		.loc 2 356 34 view .LVU307
 357:../../../os/rt/include/chsys.h **** }
 1085               		.loc 2 357 20 view .LVU308
 404:../../../os/rt/src/chevents.c ****   m = ctp->epending & events;
 1086               		.loc 1 404 3 view .LVU309
 1087               		.loc 1 404 10 is_stmt 0 view .LVU310
 1088 0012 288D      		ldd r18,Y+24
 1089               		.loc 1 404 5 view .LVU311
 1090 0014 922F      		mov r25,r18
 1091 0016 9823      		and r25,r24
 1092               	.LVL53:
 405:../../../os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 1093               		.loc 1 405 3 is_stmt 1 view .LVU312
 1094               		.loc 1 405 6 is_stmt 0 view .LVU313
 1095 0018 01F0      		breq .L43
 1096               	.LVL54:
 1097               	.L42:
 406:../../../os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 407:../../../os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTOREVT);
 408:../../../os/rt/src/chevents.c ****     m = ctp->epending & events;
 409:../../../os/rt/src/chevents.c ****   }
 410:../../../os/rt/src/chevents.c ****   m ^= m & (m - (eventmask_t)1);
 1098               		.loc 1 410 3 is_stmt 1 view .LVU314
 1099               		.loc 1 410 5 is_stmt 0 view .LVU315
 1100 001a 892F      		mov r24,r25
 1101 001c 8195      		neg r24
 1102 001e 8923      		and r24,r25
 1103               	.LVL55:
 411:../../../os/rt/src/chevents.c ****   ctp->epending &= ~m;
 1104               		.loc 1 411 3 is_stmt 1 view .LVU316
 1105               		.loc 1 411 17 is_stmt 0 view .LVU317
 1106 0020 982F      		mov r25,r24
 1107 0022 9095      		com r25
 1108 0024 9223      		and r25,r18
 1109 0026 988F      		std Y+24,r25
 412:../../../os/rt/src/chevents.c ****   chSysUnlock();
 1110               		.loc 1 412 3 is_stmt 1 view .LVU318
 1111               	.LBB206:
 1112               	.LBI206:
 365:../../../os/rt/include/chsys.h **** 
 1113               		.loc 2 365 20 view .LVU319
 1114               	.LBB207:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1115               		.loc 2 367 22 view .LVU320
 368:../../../os/rt/include/chsys.h **** 
 1116               		.loc 2 368 33 view .LVU321
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1117               		.loc 2 374 3 view .LVU322
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1118               		.loc 2 374 3 view .LVU323
 1119               		.loc 2 378 3 view .LVU324
 1120               	.LBB208:
 1121               	.LBI208:
 445:../../../os/common/ports/AVR/chcore.h **** 
 1122               		.loc 3 445 20 view .LVU325
 1123               	.LBB209:
 1124               		.loc 3 447 3 view .LVU326
 1125               	/* #APP */
 1126               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1127 0028 7894      		sei
 1128               	 ;  0 "" 2
 1129               	/* #NOAPP */
 1130               	.LBE209:
 1131               	.LBE208:
 1132               	.LBE207:
 1133               	.LBE206:
 413:../../../os/rt/src/chevents.c **** 
 414:../../../os/rt/src/chevents.c ****   return m;
 1134               		.loc 1 414 3 view .LVU327
 1135               	/* epilogue start */
 415:../../../os/rt/src/chevents.c **** }
 1136               		.loc 1 415 1 is_stmt 0 view .LVU328
 1137 002a DF91      		pop r29
 1138 002c CF91      		pop r28
 1139               	.LVL56:
 1140               		.loc 1 415 1 view .LVU329
 1141 002e 1F91      		pop r17
 1142               	.LVL57:
 1143               		.loc 1 415 1 view .LVU330
 1144 0030 0895      		ret
 1145               	.LVL58:
 1146               	.L43:
 406:../../../os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTOREVT);
 1147               		.loc 1 406 5 is_stmt 1 view .LVU331
 406:../../../os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTOREVT);
 1148               		.loc 1 406 19 is_stmt 0 view .LVU332
 1149 0032 888B      		std Y+16,r24
 407:../../../os/rt/src/chevents.c ****     m = ctp->epending & events;
 1150               		.loc 1 407 5 is_stmt 1 view .LVU333
 1151 0034 8AE0      		ldi r24,lo8(10)
 1152 0036 0E94 0000 		call chSchGoSleepS
 1153               	.LVL59:
 408:../../../os/rt/src/chevents.c ****   }
 1154               		.loc 1 408 5 view .LVU334
 408:../../../os/rt/src/chevents.c ****   }
 1155               		.loc 1 408 12 is_stmt 0 view .LVU335
 1156 003a 288D      		ldd r18,Y+24
 408:../../../os/rt/src/chevents.c ****   }
 1157               		.loc 1 408 7 view .LVU336
 1158 003c 922F      		mov r25,r18
 1159 003e 9123      		and r25,r17
 1160               	.LVL60:
 408:../../../os/rt/src/chevents.c ****   }
 1161               		.loc 1 408 7 view .LVU337
 1162 0040 00C0      		rjmp .L42
 1163               		.cfi_endproc
 1164               	.LFE153:
 1166               		.section	.text.chEvtWaitAny,"ax",@progbits
 1167               	.global	chEvtWaitAny
 1169               	chEvtWaitAny:
 1170               	.LVL61:
 1171               	.LFB154:
 416:../../../os/rt/src/chevents.c **** 
 417:../../../os/rt/src/chevents.c **** /**
 418:../../../os/rt/src/chevents.c ****  * @brief   Waits for any of the specified events.
 419:../../../os/rt/src/chevents.c ****  * @details The function waits for any event among those specified in
 420:../../../os/rt/src/chevents.c ****  *          @p events to become pending then the events are cleared and
 421:../../../os/rt/src/chevents.c ****  *          returned.
 422:../../../os/rt/src/chevents.c ****  *
 423:../../../os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 424:../../../os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 425:../../../os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 426:../../../os/rt/src/chevents.c ****  *
 427:../../../os/rt/src/chevents.c ****  * @api
 428:../../../os/rt/src/chevents.c ****  */
 429:../../../os/rt/src/chevents.c **** eventmask_t chEvtWaitAny(eventmask_t events) {
 1172               		.loc 1 429 46 is_stmt 1 view -0
 1173               		.cfi_startproc
 1174               		.loc 1 429 46 is_stmt 0 view .LVU339
 1175 0000 1F93      		push r17
 1176               	.LCFI17:
 1177               		.cfi_def_cfa_offset 3
 1178               		.cfi_offset 17, -2
 1179 0002 CF93      		push r28
 1180               	.LCFI18:
 1181               		.cfi_def_cfa_offset 4
 1182               		.cfi_offset 28, -3
 1183 0004 DF93      		push r29
 1184               	.LCFI19:
 1185               		.cfi_def_cfa_offset 5
 1186               		.cfi_offset 29, -4
 1187               	/* prologue: function */
 1188               	/* frame size = 0 */
 1189               	/* stack size = 3 */
 1190               	.L__stack_usage = 3
 1191 0006 182F      		mov r17,r24
 430:../../../os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1192               		.loc 1 430 3 is_stmt 1 view .LVU340
 1193               		.loc 1 430 13 is_stmt 0 view .LVU341
 1194 0008 C091 0000 		lds r28,ch+11
 1195 000c D091 0000 		lds r29,ch+11+1
 1196               	.LVL62:
 431:../../../os/rt/src/chevents.c ****   eventmask_t m;
 1197               		.loc 1 431 3 is_stmt 1 view .LVU342
 432:../../../os/rt/src/chevents.c **** 
 433:../../../os/rt/src/chevents.c ****   chSysLock();
 1198               		.loc 1 433 3 view .LVU343
 1199               	.LBB210:
 1200               	.LBI210:
 353:../../../os/rt/include/chsys.h **** 
 1201               		.loc 2 353 20 view .LVU344
 1202               	.LBE210:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1203               		.loc 2 355 3 view .LVU345
 1204               	.LBB213:
 1205               	.LBB211:
 1206               	.LBI211:
 435:../../../os/common/ports/AVR/chcore.h **** 
 1207               		.loc 3 435 20 view .LVU346
 1208               	.LBB212:
 437:../../../os/common/ports/AVR/chcore.h **** }
 1209               		.loc 3 437 3 view .LVU347
 1210               	/* #APP */
 1211               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 1212 0010 F894      		cli
 1213               	 ;  0 "" 2
 1214               	/* #NOAPP */
 1215               	.LBE212:
 1216               	.LBE211:
 1217               	.LBE213:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 1218               		.loc 2 356 34 view .LVU348
 357:../../../os/rt/include/chsys.h **** }
 1219               		.loc 2 357 20 view .LVU349
 434:../../../os/rt/src/chevents.c ****   m = ctp->epending & events;
 1220               		.loc 1 434 3 view .LVU350
 1221               		.loc 1 434 10 is_stmt 0 view .LVU351
 1222 0012 288D      		ldd r18,Y+24
 1223               		.loc 1 434 5 view .LVU352
 1224 0014 822F      		mov r24,r18
 1225               	.LVL63:
 1226               		.loc 1 434 5 view .LVU353
 1227 0016 8123      		and r24,r17
 1228               	.LVL64:
 435:../../../os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 1229               		.loc 1 435 3 is_stmt 1 view .LVU354
 1230               		.loc 1 435 6 is_stmt 0 view .LVU355
 1231 0018 01F0      		breq .L46
 1232               	.L45:
 436:../../../os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 437:../../../os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTOREVT);
 438:../../../os/rt/src/chevents.c ****     m = ctp->epending & events;
 439:../../../os/rt/src/chevents.c ****   }
 440:../../../os/rt/src/chevents.c ****   ctp->epending &= ~m;
 1233               		.loc 1 440 3 is_stmt 1 view .LVU356
 1234               		.loc 1 440 17 is_stmt 0 view .LVU357
 1235 001a 982F      		mov r25,r24
 1236 001c 9095      		com r25
 1237 001e 9223      		and r25,r18
 1238 0020 988F      		std Y+24,r25
 441:../../../os/rt/src/chevents.c ****   chSysUnlock();
 1239               		.loc 1 441 3 is_stmt 1 view .LVU358
 1240               	.LBB214:
 1241               	.LBI214:
 365:../../../os/rt/include/chsys.h **** 
 1242               		.loc 2 365 20 view .LVU359
 1243               	.LBB215:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1244               		.loc 2 367 22 view .LVU360
 368:../../../os/rt/include/chsys.h **** 
 1245               		.loc 2 368 33 view .LVU361
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1246               		.loc 2 374 3 view .LVU362
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1247               		.loc 2 374 3 view .LVU363
 1248               		.loc 2 378 3 view .LVU364
 1249               	.LBB216:
 1250               	.LBI216:
 445:../../../os/common/ports/AVR/chcore.h **** 
 1251               		.loc 3 445 20 view .LVU365
 1252               	.LBB217:
 1253               		.loc 3 447 3 view .LVU366
 1254               	/* #APP */
 1255               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1256 0022 7894      		sei
 1257               	 ;  0 "" 2
 1258               	/* #NOAPP */
 1259               	.LBE217:
 1260               	.LBE216:
 1261               	.LBE215:
 1262               	.LBE214:
 442:../../../os/rt/src/chevents.c **** 
 443:../../../os/rt/src/chevents.c ****   return m;
 1263               		.loc 1 443 3 view .LVU367
 1264               	/* epilogue start */
 444:../../../os/rt/src/chevents.c **** }
 1265               		.loc 1 444 1 is_stmt 0 view .LVU368
 1266 0024 DF91      		pop r29
 1267 0026 CF91      		pop r28
 1268               	.LVL65:
 1269               		.loc 1 444 1 view .LVU369
 1270 0028 1F91      		pop r17
 1271               	.LVL66:
 1272               		.loc 1 444 1 view .LVU370
 1273 002a 0895      		ret
 1274               	.LVL67:
 1275               	.L46:
 436:../../../os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTOREVT);
 1276               		.loc 1 436 5 is_stmt 1 view .LVU371
 436:../../../os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTOREVT);
 1277               		.loc 1 436 19 is_stmt 0 view .LVU372
 1278 002c 188B      		std Y+16,r17
 437:../../../os/rt/src/chevents.c ****     m = ctp->epending & events;
 1279               		.loc 1 437 5 is_stmt 1 view .LVU373
 1280 002e 8AE0      		ldi r24,lo8(10)
 1281               	.LVL68:
 437:../../../os/rt/src/chevents.c ****     m = ctp->epending & events;
 1282               		.loc 1 437 5 is_stmt 0 view .LVU374
 1283 0030 0E94 0000 		call chSchGoSleepS
 1284               	.LVL69:
 438:../../../os/rt/src/chevents.c ****   }
 1285               		.loc 1 438 5 is_stmt 1 view .LVU375
 438:../../../os/rt/src/chevents.c ****   }
 1286               		.loc 1 438 12 is_stmt 0 view .LVU376
 1287 0034 288D      		ldd r18,Y+24
 438:../../../os/rt/src/chevents.c ****   }
 1288               		.loc 1 438 7 view .LVU377
 1289 0036 822F      		mov r24,r18
 1290 0038 8123      		and r24,r17
 1291               	.LVL70:
 438:../../../os/rt/src/chevents.c ****   }
 1292               		.loc 1 438 7 view .LVU378
 1293 003a 00C0      		rjmp .L45
 1294               		.cfi_endproc
 1295               	.LFE154:
 1297               		.section	.text.chEvtWaitAll,"ax",@progbits
 1298               	.global	chEvtWaitAll
 1300               	chEvtWaitAll:
 1301               	.LVL71:
 1302               	.LFB155:
 445:../../../os/rt/src/chevents.c **** 
 446:../../../os/rt/src/chevents.c **** /**
 447:../../../os/rt/src/chevents.c ****  * @brief   Waits for all the specified events.
 448:../../../os/rt/src/chevents.c ****  * @details The function waits for all the events specified in @p events to
 449:../../../os/rt/src/chevents.c ****  *          become pending then the events are cleared and returned.
 450:../../../os/rt/src/chevents.c ****  *
 451:../../../os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 452:../../../os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS requires all the events
 453:../../../os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 454:../../../os/rt/src/chevents.c ****  *
 455:../../../os/rt/src/chevents.c ****  * @api
 456:../../../os/rt/src/chevents.c ****  */
 457:../../../os/rt/src/chevents.c **** eventmask_t chEvtWaitAll(eventmask_t events) {
 1303               		.loc 1 457 46 is_stmt 1 view -0
 1304               		.cfi_startproc
 1305               		.loc 1 457 46 is_stmt 0 view .LVU380
 1306 0000 0F93      		push r16
 1307               	.LCFI20:
 1308               		.cfi_def_cfa_offset 3
 1309               		.cfi_offset 16, -2
 1310 0002 1F93      		push r17
 1311               	.LCFI21:
 1312               		.cfi_def_cfa_offset 4
 1313               		.cfi_offset 17, -3
 1314 0004 CF93      		push r28
 1315               	.LCFI22:
 1316               		.cfi_def_cfa_offset 5
 1317               		.cfi_offset 28, -4
 1318               	/* prologue: function */
 1319               	/* frame size = 0 */
 1320               	/* stack size = 3 */
 1321               	.L__stack_usage = 3
 1322 0006 C82F      		mov r28,r24
 458:../../../os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1323               		.loc 1 458 3 is_stmt 1 view .LVU381
 1324               		.loc 1 458 13 is_stmt 0 view .LVU382
 1325 0008 0091 0000 		lds r16,ch+11
 1326 000c 1091 0000 		lds r17,ch+11+1
 1327               	.LVL72:
 459:../../../os/rt/src/chevents.c **** 
 460:../../../os/rt/src/chevents.c ****   chSysLock();
 1328               		.loc 1 460 3 is_stmt 1 view .LVU383
 1329               	.LBB218:
 1330               	.LBI218:
 353:../../../os/rt/include/chsys.h **** 
 1331               		.loc 2 353 20 view .LVU384
 1332               	.LBE218:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1333               		.loc 2 355 3 view .LVU385
 1334               	.LBB221:
 1335               	.LBB219:
 1336               	.LBI219:
 435:../../../os/common/ports/AVR/chcore.h **** 
 1337               		.loc 3 435 20 view .LVU386
 1338               	.LBB220:
 437:../../../os/common/ports/AVR/chcore.h **** }
 1339               		.loc 3 437 3 view .LVU387
 1340               	/* #APP */
 1341               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 1342 0010 F894      		cli
 1343               	 ;  0 "" 2
 1344               	/* #NOAPP */
 1345               	.LBE220:
 1346               	.LBE219:
 1347               	.LBE221:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 1348               		.loc 2 356 34 view .LVU388
 357:../../../os/rt/include/chsys.h **** }
 1349               		.loc 2 357 20 view .LVU389
 461:../../../os/rt/src/chevents.c ****   if ((ctp->epending & events) != events) {
 1350               		.loc 1 461 3 view .LVU390
 1351               		.loc 1 461 11 is_stmt 0 view .LVU391
 1352 0012 F801      		movw r30,r16
 1353 0014 908D      		ldd r25,Z+24
 1354               		.loc 1 461 32 view .LVU392
 1355 0016 892F      		mov r24,r25
 1356               	.LVL73:
 1357               		.loc 1 461 32 view .LVU393
 1358 0018 8C23      		and r24,r28
 1359               		.loc 1 461 6 view .LVU394
 1360 001a 8C17      		cp r24,r28
 1361 001c 01F0      		breq .L48
 462:../../../os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 1362               		.loc 1 462 5 is_stmt 1 view .LVU395
 1363               		.loc 1 462 19 is_stmt 0 view .LVU396
 1364 001e C08B      		std Z+16,r28
 463:../../../os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTANDEVT);
 1365               		.loc 1 463 5 is_stmt 1 view .LVU397
 1366 0020 8BE0      		ldi r24,lo8(11)
 1367 0022 0E94 0000 		call chSchGoSleepS
 1368               	.LVL74:
 1369 0026 F801      		movw r30,r16
 1370 0028 908D      		ldd r25,Z+24
 1371               	.L48:
 464:../../../os/rt/src/chevents.c ****   }
 465:../../../os/rt/src/chevents.c ****   ctp->epending &= ~events;
 1372               		.loc 1 465 3 view .LVU398
 1373               		.loc 1 465 17 is_stmt 0 view .LVU399
 1374 002a 8C2F      		mov r24,r28
 1375 002c 8095      		com r24
 1376 002e 8923      		and r24,r25
 1377 0030 F801      		movw r30,r16
 1378 0032 808F      		std Z+24,r24
 466:../../../os/rt/src/chevents.c ****   chSysUnlock();
 1379               		.loc 1 466 3 is_stmt 1 view .LVU400
 1380               	.LBB222:
 1381               	.LBI222:
 365:../../../os/rt/include/chsys.h **** 
 1382               		.loc 2 365 20 view .LVU401
 1383               	.LBB223:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1384               		.loc 2 367 22 view .LVU402
 368:../../../os/rt/include/chsys.h **** 
 1385               		.loc 2 368 33 view .LVU403
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1386               		.loc 2 374 3 view .LVU404
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1387               		.loc 2 374 3 view .LVU405
 1388               		.loc 2 378 3 view .LVU406
 1389               	.LBB224:
 1390               	.LBI224:
 445:../../../os/common/ports/AVR/chcore.h **** 
 1391               		.loc 3 445 20 view .LVU407
 1392               	.LBB225:
 1393               		.loc 3 447 3 view .LVU408
 1394               	/* #APP */
 1395               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1396 0034 7894      		sei
 1397               	 ;  0 "" 2
 1398               	/* #NOAPP */
 1399               	.LBE225:
 1400               	.LBE224:
 1401               	.LBE223:
 1402               	.LBE222:
 467:../../../os/rt/src/chevents.c **** 
 468:../../../os/rt/src/chevents.c ****   return events;
 1403               		.loc 1 468 3 view .LVU409
 469:../../../os/rt/src/chevents.c **** }
 1404               		.loc 1 469 1 is_stmt 0 view .LVU410
 1405 0036 8C2F      		mov r24,r28
 1406               	/* epilogue start */
 1407 0038 CF91      		pop r28
 1408               	.LVL75:
 1409               		.loc 1 469 1 view .LVU411
 1410 003a 1F91      		pop r17
 1411 003c 0F91      		pop r16
 1412               	.LVL76:
 1413               		.loc 1 469 1 view .LVU412
 1414 003e 0895      		ret
 1415               		.cfi_endproc
 1416               	.LFE155:
 1418               		.section	.text.chEvtWaitOneTimeout,"ax",@progbits
 1419               	.global	chEvtWaitOneTimeout
 1421               	chEvtWaitOneTimeout:
 1422               	.LVL77:
 1423               	.LFB156:
 470:../../../os/rt/src/chevents.c **** #endif /* CH_CFG_OPTIMIZE_SPEED || !CH_CFG_USE_EVENTS_TIMEOUT */
 471:../../../os/rt/src/chevents.c **** 
 472:../../../os/rt/src/chevents.c **** #if (CH_CFG_USE_EVENTS_TIMEOUT == TRUE) || defined(__DOXYGEN__)
 473:../../../os/rt/src/chevents.c **** /**
 474:../../../os/rt/src/chevents.c ****  * @brief   Waits for exactly one of the specified events.
 475:../../../os/rt/src/chevents.c ****  * @details The function waits for one event among those specified in
 476:../../../os/rt/src/chevents.c ****  *          @p events to become pending then the event is cleared and returned.
 477:../../../os/rt/src/chevents.c ****  * @note    One and only one event is served in the function, the one with the
 478:../../../os/rt/src/chevents.c ****  *          lowest event id. The function is meant to be invoked into a loop
 479:../../../os/rt/src/chevents.c ****  *          in order to serve all the pending events.<br>
 480:../../../os/rt/src/chevents.c ****  *          This means that Event Listeners with a lower event identifier have
 481:../../../os/rt/src/chevents.c ****  *          an higher priority.
 482:../../../os/rt/src/chevents.c ****  *
 483:../../../os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 484:../../../os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 485:../../../os/rt/src/chevents.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 486:../../../os/rt/src/chevents.c ****  *                      the following special values are allowed:
 487:../../../os/rt/src/chevents.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 488:../../../os/rt/src/chevents.c ****  *                      - @a TIME_INFINITE no timeout.
 489:../../../os/rt/src/chevents.c ****  *                      .
 490:../../../os/rt/src/chevents.c ****  * @return              The mask of the lowest event id served and cleared.
 491:../../../os/rt/src/chevents.c ****  * @retval 0            if the operation has timed out.
 492:../../../os/rt/src/chevents.c ****  *
 493:../../../os/rt/src/chevents.c ****  * @api
 494:../../../os/rt/src/chevents.c ****  */
 495:../../../os/rt/src/chevents.c **** eventmask_t chEvtWaitOneTimeout(eventmask_t events, sysinterval_t timeout) {
 1424               		.loc 1 495 76 is_stmt 1 view -0
 1425               		.cfi_startproc
 1426               		.loc 1 495 76 is_stmt 0 view .LVU414
 1427 0000 0F93      		push r16
 1428               	.LCFI23:
 1429               		.cfi_def_cfa_offset 3
 1430               		.cfi_offset 16, -2
 1431 0002 1F93      		push r17
 1432               	.LCFI24:
 1433               		.cfi_def_cfa_offset 4
 1434               		.cfi_offset 17, -3
 1435 0004 CF93      		push r28
 1436               	.LCFI25:
 1437               		.cfi_def_cfa_offset 5
 1438               		.cfi_offset 28, -4
 1439 0006 DF93      		push r29
 1440               	.LCFI26:
 1441               		.cfi_def_cfa_offset 6
 1442               		.cfi_offset 29, -5
 1443               	/* prologue: function */
 1444               	/* frame size = 0 */
 1445               	/* stack size = 4 */
 1446               	.L__stack_usage = 4
 1447 0008 D82F      		mov r29,r24
 496:../../../os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1448               		.loc 1 496 3 is_stmt 1 view .LVU415
 1449               		.loc 1 496 13 is_stmt 0 view .LVU416
 1450 000a 0091 0000 		lds r16,ch+11
 1451 000e 1091 0000 		lds r17,ch+11+1
 1452               	.LVL78:
 497:../../../os/rt/src/chevents.c ****   eventmask_t m;
 1453               		.loc 1 497 3 is_stmt 1 view .LVU417
 498:../../../os/rt/src/chevents.c **** 
 499:../../../os/rt/src/chevents.c ****   chSysLock();
 1454               		.loc 1 499 3 view .LVU418
 1455               	.LBB226:
 1456               	.LBI226:
 353:../../../os/rt/include/chsys.h **** 
 1457               		.loc 2 353 20 view .LVU419
 1458               	.LBE226:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1459               		.loc 2 355 3 view .LVU420
 1460               	.LBB229:
 1461               	.LBB227:
 1462               	.LBI227:
 435:../../../os/common/ports/AVR/chcore.h **** 
 1463               		.loc 3 435 20 view .LVU421
 1464               	.LBB228:
 437:../../../os/common/ports/AVR/chcore.h **** }
 1465               		.loc 3 437 3 view .LVU422
 1466               	/* #APP */
 1467               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 1468 0012 F894      		cli
 1469               	 ;  0 "" 2
 1470               	/* #NOAPP */
 1471               	.LBE228:
 1472               	.LBE227:
 1473               	.LBE229:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 1474               		.loc 2 356 34 view .LVU423
 357:../../../os/rt/include/chsys.h **** }
 1475               		.loc 2 357 20 view .LVU424
 500:../../../os/rt/src/chevents.c ****   m = ctp->epending & events;
 1476               		.loc 1 500 3 view .LVU425
 1477               		.loc 1 500 10 is_stmt 0 view .LVU426
 1478 0014 F801      		movw r30,r16
 1479 0016 808D      		ldd r24,Z+24
 1480               	.LVL79:
 1481               		.loc 1 500 5 view .LVU427
 1482 0018 C82F      		mov r28,r24
 1483 001a CD23      		and r28,r29
 1484               	.LVL80:
 501:../../../os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 1485               		.loc 1 501 3 is_stmt 1 view .LVU428
 1486               		.loc 1 501 6 is_stmt 0 view .LVU429
 1487 001c 01F4      		brne .L50
 502:../../../os/rt/src/chevents.c ****     if (TIME_IMMEDIATE == timeout) {
 1488               		.loc 1 502 5 is_stmt 1 view .LVU430
 1489               		.loc 1 502 8 is_stmt 0 view .LVU431
 1490 001e 6115      		cp r22,__zero_reg__
 1491 0020 7105      		cpc r23,__zero_reg__
 1492 0022 01F4      		brne .L51
 1493               	.LVL81:
 1494               	.L54:
 503:../../../os/rt/src/chevents.c ****       chSysUnlock();
 504:../../../os/rt/src/chevents.c ****       return (eventmask_t)0;
 505:../../../os/rt/src/chevents.c ****     }
 506:../../../os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 507:../../../os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 508:../../../os/rt/src/chevents.c ****       chSysUnlock();
 509:../../../os/rt/src/chevents.c ****       return (eventmask_t)0;
 510:../../../os/rt/src/chevents.c ****     }
 511:../../../os/rt/src/chevents.c ****     m = ctp->epending & events;
 512:../../../os/rt/src/chevents.c ****   }
 513:../../../os/rt/src/chevents.c ****   m ^= m & (m - (eventmask_t)1);
 514:../../../os/rt/src/chevents.c ****   ctp->epending &= ~m;
 515:../../../os/rt/src/chevents.c ****   chSysUnlock();
 1495               		.loc 1 515 3 is_stmt 1 view .LVU432
 1496               	.LBB230:
 1497               	.LBI230:
 365:../../../os/rt/include/chsys.h **** 
 1498               		.loc 2 365 20 view .LVU433
 1499               	.LBB231:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1500               		.loc 2 367 22 view .LVU434
 368:../../../os/rt/include/chsys.h **** 
 1501               		.loc 2 368 33 view .LVU435
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1502               		.loc 2 374 3 view .LVU436
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1503               		.loc 2 374 3 view .LVU437
 1504               		.loc 2 378 3 view .LVU438
 1505               	.LBB232:
 1506               	.LBI232:
 445:../../../os/common/ports/AVR/chcore.h **** 
 1507               		.loc 3 445 20 view .LVU439
 1508               	.LBB233:
 1509               		.loc 3 447 3 view .LVU440
 1510               	/* #APP */
 1511               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1512 0024 7894      		sei
 1513               	 ;  0 "" 2
 1514               	/* #NOAPP */
 1515               	.LBE233:
 1516               	.LBE232:
 1517               	.LBE231:
 1518               	.LBE230:
 516:../../../os/rt/src/chevents.c **** 
 517:../../../os/rt/src/chevents.c ****   return m;
 1519               		.loc 1 517 3 view .LVU441
 518:../../../os/rt/src/chevents.c **** }
 1520               		.loc 1 518 1 is_stmt 0 view .LVU442
 1521 0026 8C2F      		mov r24,r28
 1522               	/* epilogue start */
 1523 0028 DF91      		pop r29
 1524               	.LVL82:
 1525               		.loc 1 518 1 view .LVU443
 1526 002a CF91      		pop r28
 1527               	.LVL83:
 1528               		.loc 1 518 1 view .LVU444
 1529 002c 1F91      		pop r17
 1530 002e 0F91      		pop r16
 1531               	.LVL84:
 1532               		.loc 1 518 1 view .LVU445
 1533 0030 0895      		ret
 1534               	.LVL85:
 1535               	.L51:
 506:../../../os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1536               		.loc 1 506 5 is_stmt 1 view .LVU446
 506:../../../os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1537               		.loc 1 506 19 is_stmt 0 view .LVU447
 1538 0032 D08B      		std Z+16,r29
 507:../../../os/rt/src/chevents.c ****       chSysUnlock();
 1539               		.loc 1 507 5 is_stmt 1 view .LVU448
 507:../../../os/rt/src/chevents.c ****       chSysUnlock();
 1540               		.loc 1 507 9 is_stmt 0 view .LVU449
 1541 0034 8AE0      		ldi r24,lo8(10)
 1542 0036 0E94 0000 		call chSchGoSleepTimeoutS
 1543               	.LVL86:
 507:../../../os/rt/src/chevents.c ****       chSysUnlock();
 1544               		.loc 1 507 8 view .LVU450
 1545 003a 97FD      		sbrc r25,7
 1546 003c 00C0      		rjmp .L54
 511:../../../os/rt/src/chevents.c ****   }
 1547               		.loc 1 511 5 is_stmt 1 view .LVU451
 511:../../../os/rt/src/chevents.c ****   }
 1548               		.loc 1 511 12 is_stmt 0 view .LVU452
 1549 003e F801      		movw r30,r16
 1550 0040 808D      		ldd r24,Z+24
 511:../../../os/rt/src/chevents.c ****   }
 1551               		.loc 1 511 7 view .LVU453
 1552 0042 C82F      		mov r28,r24
 1553               	.LVL87:
 511:../../../os/rt/src/chevents.c ****   }
 1554               		.loc 1 511 7 view .LVU454
 1555 0044 CD23      		and r28,r29
 1556               	.LVL88:
 1557               	.L50:
 513:../../../os/rt/src/chevents.c ****   ctp->epending &= ~m;
 1558               		.loc 1 513 3 is_stmt 1 view .LVU455
 513:../../../os/rt/src/chevents.c ****   ctp->epending &= ~m;
 1559               		.loc 1 513 5 is_stmt 0 view .LVU456
 1560 0046 9C2F      		mov r25,r28
 1561 0048 9195      		neg r25
 1562 004a C923      		and r28,r25
 1563               	.LVL89:
 514:../../../os/rt/src/chevents.c ****   chSysUnlock();
 1564               		.loc 1 514 3 is_stmt 1 view .LVU457
 514:../../../os/rt/src/chevents.c ****   chSysUnlock();
 1565               		.loc 1 514 17 is_stmt 0 view .LVU458
 1566 004c 9C2F      		mov r25,r28
 1567 004e 9095      		com r25
 1568 0050 8923      		and r24,r25
 1569 0052 F801      		movw r30,r16
 1570 0054 808F      		std Z+24,r24
 515:../../../os/rt/src/chevents.c **** 
 1571               		.loc 1 515 3 is_stmt 1 view .LVU459
 1572               	.LBB237:
 365:../../../os/rt/include/chsys.h **** 
 1573               		.loc 2 365 20 view .LVU460
 1574               	.LBB236:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1575               		.loc 2 367 22 view .LVU461
 368:../../../os/rt/include/chsys.h **** 
 1576               		.loc 2 368 33 view .LVU462
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1577               		.loc 2 374 3 view .LVU463
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1578               		.loc 2 374 3 view .LVU464
 1579               		.loc 2 378 3 view .LVU465
 1580               	.LBB235:
 445:../../../os/common/ports/AVR/chcore.h **** 
 1581               		.loc 3 445 20 view .LVU466
 1582               	.LBB234:
 1583               		.loc 3 447 3 view .LVU467
 1584               	/* #APP */
 1585               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1586 0056 7894      		sei
 1587               	 ;  0 "" 2
 1588               	/* #NOAPP */
 1589               	.LBE234:
 1590               	.LBE235:
 1591               	.LBE236:
 1592               	.LBE237:
 517:../../../os/rt/src/chevents.c **** }
 1593               		.loc 1 517 3 view .LVU468
 1594               		.loc 1 518 1 is_stmt 0 view .LVU469
 1595 0058 8C2F      		mov r24,r28
 1596               	/* epilogue start */
 1597 005a DF91      		pop r29
 1598               	.LVL90:
 1599               		.loc 1 518 1 view .LVU470
 1600 005c CF91      		pop r28
 1601               	.LVL91:
 1602               		.loc 1 518 1 view .LVU471
 1603 005e 1F91      		pop r17
 1604 0060 0F91      		pop r16
 1605               	.LVL92:
 1606               		.loc 1 518 1 view .LVU472
 1607 0062 0895      		ret
 1608               		.cfi_endproc
 1609               	.LFE156:
 1611               		.section	.text.chEvtWaitAnyTimeout,"ax",@progbits
 1612               	.global	chEvtWaitAnyTimeout
 1614               	chEvtWaitAnyTimeout:
 1615               	.LVL93:
 1616               	.LFB157:
 519:../../../os/rt/src/chevents.c **** 
 520:../../../os/rt/src/chevents.c **** /**
 521:../../../os/rt/src/chevents.c ****  * @brief   Waits for any of the specified events.
 522:../../../os/rt/src/chevents.c ****  * @details The function waits for any event among those specified in
 523:../../../os/rt/src/chevents.c ****  *          @p events to become pending then the events are cleared and
 524:../../../os/rt/src/chevents.c ****  *          returned.
 525:../../../os/rt/src/chevents.c ****  *
 526:../../../os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 527:../../../os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 528:../../../os/rt/src/chevents.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 529:../../../os/rt/src/chevents.c ****  *                      the following special values are allowed:
 530:../../../os/rt/src/chevents.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 531:../../../os/rt/src/chevents.c ****  *                      - @a TIME_INFINITE no timeout.
 532:../../../os/rt/src/chevents.c ****  *                      .
 533:../../../os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 534:../../../os/rt/src/chevents.c ****  * @retval 0            if the operation has timed out.
 535:../../../os/rt/src/chevents.c ****  *
 536:../../../os/rt/src/chevents.c ****  * @api
 537:../../../os/rt/src/chevents.c ****  */
 538:../../../os/rt/src/chevents.c **** eventmask_t chEvtWaitAnyTimeout(eventmask_t events, sysinterval_t timeout) {
 1617               		.loc 1 538 76 is_stmt 1 view -0
 1618               		.cfi_startproc
 1619               		.loc 1 538 76 is_stmt 0 view .LVU474
 1620 0000 0F93      		push r16
 1621               	.LCFI27:
 1622               		.cfi_def_cfa_offset 3
 1623               		.cfi_offset 16, -2
 1624 0002 1F93      		push r17
 1625               	.LCFI28:
 1626               		.cfi_def_cfa_offset 4
 1627               		.cfi_offset 17, -3
 1628 0004 CF93      		push r28
 1629               	.LCFI29:
 1630               		.cfi_def_cfa_offset 5
 1631               		.cfi_offset 28, -4
 1632 0006 DF93      		push r29
 1633               	.LCFI30:
 1634               		.cfi_def_cfa_offset 6
 1635               		.cfi_offset 29, -5
 1636               	/* prologue: function */
 1637               	/* frame size = 0 */
 1638               	/* stack size = 4 */
 1639               	.L__stack_usage = 4
 1640 0008 D82F      		mov r29,r24
 539:../../../os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1641               		.loc 1 539 3 is_stmt 1 view .LVU475
 1642               		.loc 1 539 13 is_stmt 0 view .LVU476
 1643 000a 0091 0000 		lds r16,ch+11
 1644 000e 1091 0000 		lds r17,ch+11+1
 1645               	.LVL94:
 540:../../../os/rt/src/chevents.c ****   eventmask_t m;
 1646               		.loc 1 540 3 is_stmt 1 view .LVU477
 541:../../../os/rt/src/chevents.c **** 
 542:../../../os/rt/src/chevents.c ****   chSysLock();
 1647               		.loc 1 542 3 view .LVU478
 1648               	.LBB238:
 1649               	.LBI238:
 353:../../../os/rt/include/chsys.h **** 
 1650               		.loc 2 353 20 view .LVU479
 1651               	.LBE238:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1652               		.loc 2 355 3 view .LVU480
 1653               	.LBB241:
 1654               	.LBB239:
 1655               	.LBI239:
 435:../../../os/common/ports/AVR/chcore.h **** 
 1656               		.loc 3 435 20 view .LVU481
 1657               	.LBB240:
 437:../../../os/common/ports/AVR/chcore.h **** }
 1658               		.loc 3 437 3 view .LVU482
 1659               	/* #APP */
 1660               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 1661 0012 F894      		cli
 1662               	 ;  0 "" 2
 1663               	/* #NOAPP */
 1664               	.LBE240:
 1665               	.LBE239:
 1666               	.LBE241:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 1667               		.loc 2 356 34 view .LVU483
 357:../../../os/rt/include/chsys.h **** }
 1668               		.loc 2 357 20 view .LVU484
 543:../../../os/rt/src/chevents.c ****   m = ctp->epending & events;
 1669               		.loc 1 543 3 view .LVU485
 1670               		.loc 1 543 10 is_stmt 0 view .LVU486
 1671 0014 F801      		movw r30,r16
 1672 0016 808D      		ldd r24,Z+24
 1673               	.LVL95:
 1674               		.loc 1 543 5 view .LVU487
 1675 0018 C82F      		mov r28,r24
 1676 001a CD23      		and r28,r29
 1677               	.LVL96:
 544:../../../os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 1678               		.loc 1 544 3 is_stmt 1 view .LVU488
 1679               		.loc 1 544 6 is_stmt 0 view .LVU489
 1680 001c 01F4      		brne .L56
 545:../../../os/rt/src/chevents.c ****     if (TIME_IMMEDIATE == timeout) {
 1681               		.loc 1 545 5 is_stmt 1 view .LVU490
 1682               		.loc 1 545 8 is_stmt 0 view .LVU491
 1683 001e 6115      		cp r22,__zero_reg__
 1684 0020 7105      		cpc r23,__zero_reg__
 1685 0022 01F4      		brne .L57
 1686               	.LVL97:
 1687               	.L60:
 546:../../../os/rt/src/chevents.c ****       chSysUnlock();
 547:../../../os/rt/src/chevents.c ****       return (eventmask_t)0;
 548:../../../os/rt/src/chevents.c ****     }
 549:../../../os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 550:../../../os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 551:../../../os/rt/src/chevents.c ****       chSysUnlock();
 552:../../../os/rt/src/chevents.c ****       return (eventmask_t)0;
 553:../../../os/rt/src/chevents.c ****     }
 554:../../../os/rt/src/chevents.c ****     m = ctp->epending & events;
 555:../../../os/rt/src/chevents.c ****   }
 556:../../../os/rt/src/chevents.c ****   ctp->epending &= ~m;
 557:../../../os/rt/src/chevents.c ****   chSysUnlock();
 1688               		.loc 1 557 3 is_stmt 1 view .LVU492
 1689               	.LBB242:
 1690               	.LBI242:
 365:../../../os/rt/include/chsys.h **** 
 1691               		.loc 2 365 20 view .LVU493
 1692               	.LBB243:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1693               		.loc 2 367 22 view .LVU494
 368:../../../os/rt/include/chsys.h **** 
 1694               		.loc 2 368 33 view .LVU495
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1695               		.loc 2 374 3 view .LVU496
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1696               		.loc 2 374 3 view .LVU497
 1697               		.loc 2 378 3 view .LVU498
 1698               	.LBB244:
 1699               	.LBI244:
 445:../../../os/common/ports/AVR/chcore.h **** 
 1700               		.loc 3 445 20 view .LVU499
 1701               	.LBB245:
 1702               		.loc 3 447 3 view .LVU500
 1703               	/* #APP */
 1704               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1705 0024 7894      		sei
 1706               	 ;  0 "" 2
 1707               	/* #NOAPP */
 1708               	.LBE245:
 1709               	.LBE244:
 1710               	.LBE243:
 1711               	.LBE242:
 558:../../../os/rt/src/chevents.c **** 
 559:../../../os/rt/src/chevents.c ****   return m;
 1712               		.loc 1 559 3 view .LVU501
 560:../../../os/rt/src/chevents.c **** }
 1713               		.loc 1 560 1 is_stmt 0 view .LVU502
 1714 0026 8C2F      		mov r24,r28
 1715               	/* epilogue start */
 1716 0028 DF91      		pop r29
 1717               	.LVL98:
 1718               		.loc 1 560 1 view .LVU503
 1719 002a CF91      		pop r28
 1720               	.LVL99:
 1721               		.loc 1 560 1 view .LVU504
 1722 002c 1F91      		pop r17
 1723 002e 0F91      		pop r16
 1724               	.LVL100:
 1725               		.loc 1 560 1 view .LVU505
 1726 0030 0895      		ret
 1727               	.LVL101:
 1728               	.L57:
 549:../../../os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1729               		.loc 1 549 5 is_stmt 1 view .LVU506
 549:../../../os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1730               		.loc 1 549 19 is_stmt 0 view .LVU507
 1731 0032 D08B      		std Z+16,r29
 550:../../../os/rt/src/chevents.c ****       chSysUnlock();
 1732               		.loc 1 550 5 is_stmt 1 view .LVU508
 550:../../../os/rt/src/chevents.c ****       chSysUnlock();
 1733               		.loc 1 550 9 is_stmt 0 view .LVU509
 1734 0034 8AE0      		ldi r24,lo8(10)
 1735 0036 0E94 0000 		call chSchGoSleepTimeoutS
 1736               	.LVL102:
 550:../../../os/rt/src/chevents.c ****       chSysUnlock();
 1737               		.loc 1 550 8 view .LVU510
 1738 003a 97FD      		sbrc r25,7
 1739 003c 00C0      		rjmp .L60
 554:../../../os/rt/src/chevents.c ****   }
 1740               		.loc 1 554 5 is_stmt 1 view .LVU511
 554:../../../os/rt/src/chevents.c ****   }
 1741               		.loc 1 554 12 is_stmt 0 view .LVU512
 1742 003e F801      		movw r30,r16
 1743 0040 808D      		ldd r24,Z+24
 554:../../../os/rt/src/chevents.c ****   }
 1744               		.loc 1 554 7 view .LVU513
 1745 0042 C82F      		mov r28,r24
 1746               	.LVL103:
 554:../../../os/rt/src/chevents.c ****   }
 1747               		.loc 1 554 7 view .LVU514
 1748 0044 CD23      		and r28,r29
 1749               	.LVL104:
 1750               	.L56:
 556:../../../os/rt/src/chevents.c ****   chSysUnlock();
 1751               		.loc 1 556 3 is_stmt 1 view .LVU515
 556:../../../os/rt/src/chevents.c ****   chSysUnlock();
 1752               		.loc 1 556 17 is_stmt 0 view .LVU516
 1753 0046 9C2F      		mov r25,r28
 1754 0048 9095      		com r25
 1755 004a 8923      		and r24,r25
 1756 004c F801      		movw r30,r16
 1757 004e 808F      		std Z+24,r24
 557:../../../os/rt/src/chevents.c **** 
 1758               		.loc 1 557 3 is_stmt 1 view .LVU517
 1759               	.LBB249:
 365:../../../os/rt/include/chsys.h **** 
 1760               		.loc 2 365 20 view .LVU518
 1761               	.LBB248:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1762               		.loc 2 367 22 view .LVU519
 368:../../../os/rt/include/chsys.h **** 
 1763               		.loc 2 368 33 view .LVU520
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1764               		.loc 2 374 3 view .LVU521
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1765               		.loc 2 374 3 view .LVU522
 1766               		.loc 2 378 3 view .LVU523
 1767               	.LBB247:
 445:../../../os/common/ports/AVR/chcore.h **** 
 1768               		.loc 3 445 20 view .LVU524
 1769               	.LBB246:
 1770               		.loc 3 447 3 view .LVU525
 1771               	/* #APP */
 1772               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1773 0050 7894      		sei
 1774               	 ;  0 "" 2
 1775               	/* #NOAPP */
 1776               	.LBE246:
 1777               	.LBE247:
 1778               	.LBE248:
 1779               	.LBE249:
 559:../../../os/rt/src/chevents.c **** }
 1780               		.loc 1 559 3 view .LVU526
 1781               		.loc 1 560 1 is_stmt 0 view .LVU527
 1782 0052 8C2F      		mov r24,r28
 1783               	/* epilogue start */
 1784 0054 DF91      		pop r29
 1785               	.LVL105:
 1786               		.loc 1 560 1 view .LVU528
 1787 0056 CF91      		pop r28
 1788               	.LVL106:
 1789               		.loc 1 560 1 view .LVU529
 1790 0058 1F91      		pop r17
 1791 005a 0F91      		pop r16
 1792               	.LVL107:
 1793               		.loc 1 560 1 view .LVU530
 1794 005c 0895      		ret
 1795               		.cfi_endproc
 1796               	.LFE157:
 1798               		.section	.text.chEvtWaitAllTimeout,"ax",@progbits
 1799               	.global	chEvtWaitAllTimeout
 1801               	chEvtWaitAllTimeout:
 1802               	.LVL108:
 1803               	.LFB158:
 561:../../../os/rt/src/chevents.c **** 
 562:../../../os/rt/src/chevents.c **** /**
 563:../../../os/rt/src/chevents.c ****  * @brief   Waits for all the specified events.
 564:../../../os/rt/src/chevents.c ****  * @details The function waits for all the events specified in @p events to
 565:../../../os/rt/src/chevents.c ****  *          become pending then the events are cleared and returned.
 566:../../../os/rt/src/chevents.c ****  *
 567:../../../os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 568:../../../os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS requires all the events
 569:../../../os/rt/src/chevents.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 570:../../../os/rt/src/chevents.c ****  *                      the following special values are allowed:
 571:../../../os/rt/src/chevents.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 572:../../../os/rt/src/chevents.c ****  *                      - @a TIME_INFINITE no timeout.
 573:../../../os/rt/src/chevents.c ****  *                      .
 574:../../../os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 575:../../../os/rt/src/chevents.c ****  * @retval 0            if the operation has timed out.
 576:../../../os/rt/src/chevents.c ****  *
 577:../../../os/rt/src/chevents.c ****  * @api
 578:../../../os/rt/src/chevents.c ****  */
 579:../../../os/rt/src/chevents.c **** eventmask_t chEvtWaitAllTimeout(eventmask_t events, sysinterval_t timeout) {
 1804               		.loc 1 579 76 is_stmt 1 view -0
 1805               		.cfi_startproc
 1806               		.loc 1 579 76 is_stmt 0 view .LVU532
 1807 0000 0F93      		push r16
 1808               	.LCFI31:
 1809               		.cfi_def_cfa_offset 3
 1810               		.cfi_offset 16, -2
 1811 0002 1F93      		push r17
 1812               	.LCFI32:
 1813               		.cfi_def_cfa_offset 4
 1814               		.cfi_offset 17, -3
 1815 0004 CF93      		push r28
 1816               	.LCFI33:
 1817               		.cfi_def_cfa_offset 5
 1818               		.cfi_offset 28, -4
 1819               	/* prologue: function */
 1820               	/* frame size = 0 */
 1821               	/* stack size = 3 */
 1822               	.L__stack_usage = 3
 1823 0006 C82F      		mov r28,r24
 580:../../../os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1824               		.loc 1 580 3 is_stmt 1 view .LVU533
 1825               		.loc 1 580 13 is_stmt 0 view .LVU534
 1826 0008 0091 0000 		lds r16,ch+11
 1827 000c 1091 0000 		lds r17,ch+11+1
 1828               	.LVL109:
 581:../../../os/rt/src/chevents.c **** 
 582:../../../os/rt/src/chevents.c ****   chSysLock();
 1829               		.loc 1 582 3 is_stmt 1 view .LVU535
 1830               	.LBB250:
 1831               	.LBI250:
 353:../../../os/rt/include/chsys.h **** 
 1832               		.loc 2 353 20 view .LVU536
 1833               	.LBE250:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1834               		.loc 2 355 3 view .LVU537
 1835               	.LBB253:
 1836               	.LBB251:
 1837               	.LBI251:
 435:../../../os/common/ports/AVR/chcore.h **** 
 1838               		.loc 3 435 20 view .LVU538
 1839               	.LBB252:
 437:../../../os/common/ports/AVR/chcore.h **** }
 1840               		.loc 3 437 3 view .LVU539
 1841               	/* #APP */
 1842               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 1843 0010 F894      		cli
 1844               	 ;  0 "" 2
 1845               	/* #NOAPP */
 1846               	.LBE252:
 1847               	.LBE251:
 1848               	.LBE253:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 1849               		.loc 2 356 34 view .LVU540
 357:../../../os/rt/include/chsys.h **** }
 1850               		.loc 2 357 20 view .LVU541
 583:../../../os/rt/src/chevents.c ****   if ((ctp->epending & events) != events) {
 1851               		.loc 1 583 3 view .LVU542
 1852               		.loc 1 583 11 is_stmt 0 view .LVU543
 1853 0012 F801      		movw r30,r16
 1854 0014 808D      		ldd r24,Z+24
 1855               	.LVL110:
 1856               		.loc 1 583 32 view .LVU544
 1857 0016 982F      		mov r25,r24
 1858 0018 9C23      		and r25,r28
 1859               		.loc 1 583 6 view .LVU545
 1860 001a 9C17      		cp r25,r28
 1861 001c 01F0      		breq .L62
 584:../../../os/rt/src/chevents.c ****     if (TIME_IMMEDIATE == timeout) {
 1862               		.loc 1 584 5 is_stmt 1 view .LVU546
 1863               		.loc 1 584 8 is_stmt 0 view .LVU547
 1864 001e 6115      		cp r22,__zero_reg__
 1865 0020 7105      		cpc r23,__zero_reg__
 1866 0022 01F4      		brne .L63
 1867               	.LVL111:
 1868               	.L65:
 585:../../../os/rt/src/chevents.c ****       chSysUnlock();
 586:../../../os/rt/src/chevents.c ****       return (eventmask_t)0;
 587:../../../os/rt/src/chevents.c ****     }
 588:../../../os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 589:../../../os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTANDEVT, timeout) < MSG_OK) {
 590:../../../os/rt/src/chevents.c ****       chSysUnlock();
 1869               		.loc 1 590 7 is_stmt 1 view .LVU548
 1870               	.LBB254:
 1871               	.LBI254:
 365:../../../os/rt/include/chsys.h **** 
 1872               		.loc 2 365 20 view .LVU549
 1873               	.LBB255:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1874               		.loc 2 367 22 view .LVU550
 368:../../../os/rt/include/chsys.h **** 
 1875               		.loc 2 368 33 view .LVU551
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1876               		.loc 2 374 3 view .LVU552
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1877               		.loc 2 374 3 view .LVU553
 1878               		.loc 2 378 3 view .LVU554
 1879               	.LBB256:
 1880               	.LBI256:
 445:../../../os/common/ports/AVR/chcore.h **** 
 1881               		.loc 3 445 20 view .LVU555
 1882               	.LBB257:
 1883               		.loc 3 447 3 view .LVU556
 1884               	/* #APP */
 1885               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1886 0024 7894      		sei
 1887               	 ;  0 "" 2
 1888               	/* #NOAPP */
 1889               	.LBE257:
 1890               	.LBE256:
 1891               	.LBE255:
 1892               	.LBE254:
 591:../../../os/rt/src/chevents.c ****       return (eventmask_t)0;
 1893               		.loc 1 591 7 view .LVU557
 1894               		.loc 1 591 14 is_stmt 0 view .LVU558
 1895 0026 80E0      		ldi r24,0
 1896               	/* epilogue start */
 592:../../../os/rt/src/chevents.c ****     }
 593:../../../os/rt/src/chevents.c ****   }
 594:../../../os/rt/src/chevents.c ****   ctp->epending &= ~events;
 595:../../../os/rt/src/chevents.c ****   chSysUnlock();
 596:../../../os/rt/src/chevents.c **** 
 597:../../../os/rt/src/chevents.c ****   return events;
 598:../../../os/rt/src/chevents.c **** }
 1897               		.loc 1 598 1 view .LVU559
 1898 0028 CF91      		pop r28
 1899               	.LVL112:
 1900               		.loc 1 598 1 view .LVU560
 1901 002a 1F91      		pop r17
 1902 002c 0F91      		pop r16
 1903               	.LVL113:
 1904               		.loc 1 598 1 view .LVU561
 1905 002e 0895      		ret
 1906               	.LVL114:
 1907               	.L63:
 588:../../../os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTANDEVT, timeout) < MSG_OK) {
 1908               		.loc 1 588 5 is_stmt 1 view .LVU562
 588:../../../os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTANDEVT, timeout) < MSG_OK) {
 1909               		.loc 1 588 19 is_stmt 0 view .LVU563
 1910 0030 C08B      		std Z+16,r28
 589:../../../os/rt/src/chevents.c ****       chSysUnlock();
 1911               		.loc 1 589 5 is_stmt 1 view .LVU564
 589:../../../os/rt/src/chevents.c ****       chSysUnlock();
 1912               		.loc 1 589 9 is_stmt 0 view .LVU565
 1913 0032 8BE0      		ldi r24,lo8(11)
 1914 0034 0E94 0000 		call chSchGoSleepTimeoutS
 1915               	.LVL115:
 589:../../../os/rt/src/chevents.c ****       chSysUnlock();
 1916               		.loc 1 589 8 view .LVU566
 1917 0038 97FD      		sbrc r25,7
 1918 003a 00C0      		rjmp .L65
 1919 003c F801      		movw r30,r16
 1920 003e 808D      		ldd r24,Z+24
 1921               	.L62:
 594:../../../os/rt/src/chevents.c ****   chSysUnlock();
 1922               		.loc 1 594 3 is_stmt 1 view .LVU567
 594:../../../os/rt/src/chevents.c ****   chSysUnlock();
 1923               		.loc 1 594 17 is_stmt 0 view .LVU568
 1924 0040 9C2F      		mov r25,r28
 1925 0042 9095      		com r25
 1926 0044 8923      		and r24,r25
 1927 0046 F801      		movw r30,r16
 1928 0048 808F      		std Z+24,r24
 595:../../../os/rt/src/chevents.c **** 
 1929               		.loc 1 595 3 is_stmt 1 view .LVU569
 1930               	.LBB258:
 1931               	.LBI258:
 365:../../../os/rt/include/chsys.h **** 
 1932               		.loc 2 365 20 view .LVU570
 1933               	.LBB259:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1934               		.loc 2 367 22 view .LVU571
 368:../../../os/rt/include/chsys.h **** 
 1935               		.loc 2 368 33 view .LVU572
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1936               		.loc 2 374 3 view .LVU573
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1937               		.loc 2 374 3 view .LVU574
 1938               		.loc 2 378 3 view .LVU575
 1939               	.LBB260:
 1940               	.LBI260:
 445:../../../os/common/ports/AVR/chcore.h **** 
 1941               		.loc 3 445 20 view .LVU576
 1942               	.LBB261:
 1943               		.loc 3 447 3 view .LVU577
 1944               	/* #APP */
 1945               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1946 004a 7894      		sei
 1947               	 ;  0 "" 2
 1948               	/* #NOAPP */
 1949               	.LBE261:
 1950               	.LBE260:
 1951               	.LBE259:
 1952               	.LBE258:
 597:../../../os/rt/src/chevents.c **** }
 1953               		.loc 1 597 3 view .LVU578
 597:../../../os/rt/src/chevents.c **** }
 1954               		.loc 1 597 10 is_stmt 0 view .LVU579
 1955 004c 8C2F      		mov r24,r28
 1956               	/* epilogue start */
 1957               		.loc 1 598 1 view .LVU580
 1958 004e CF91      		pop r28
 1959               	.LVL116:
 1960               		.loc 1 598 1 view .LVU581
 1961 0050 1F91      		pop r17
 1962 0052 0F91      		pop r16
 1963               	.LVL117:
 1964               		.loc 1 598 1 view .LVU582
 1965 0054 0895      		ret
 1966               		.cfi_endproc
 1967               	.LFE158:
 1969               		.text
 1970               	.Letext0:
 1971               		.file 5 "/usr/local/Cellar/avr-gcc/8.2.0/avr/include/stdint.h"
 1972               		.file 6 "../../../os/common/ports/AVR/compilers/GCC/chtypes.h"
 1973               		.file 7 "../../../os/rt/include/chsystypes.h"
 1974               		.file 8 "../../../os/rt/include/chschd.h"
 1975               		.file 9 "../../../os/rt/include/chtime.h"
 1976               		.file 10 "../../../os/rt/include/chsem.h"
 1977               		.file 11 "../../../os/rt/include/chmtx.h"
 1978               		.file 12 "../../../os/rt/include/chregistry.h"
 1979               		.file 13 "../../../os/common/oslib/include/chmemcore.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chevents.c
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:4      *ABS*:000000000000003f __SREG__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:13     .text.chEvtRegisterMaskWithFlags:0000000000000000 chEvtRegisterMaskWithFlags
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:115    .text.chEvtUnregister:0000000000000000 chEvtUnregister
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:239    .text.chEvtGetAndClearEventsI:0000000000000000 chEvtGetAndClearEventsI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:275    .text.chEvtGetAndClearEvents:0000000000000000 chEvtGetAndClearEvents
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:369    .text.chEvtAddEvents:0000000000000000 chEvtAddEvents
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:456    .text.chEvtGetAndClearFlags:0000000000000000 chEvtGetAndClearFlags
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:531    .text.chEvtSignalI:0000000000000000 chEvtSignalI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:598    .text.chEvtBroadcastFlagsI:0000000000000000 chEvtBroadcastFlagsI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:700    .text.chEvtSignal:0000000000000000 chEvtSignal
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:772    .text.chEvtBroadcastFlags:0000000000000000 chEvtBroadcastFlags
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:842    .text.chEvtGetAndClearFlagsI:0000000000000000 chEvtGetAndClearFlagsI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:871    .text.chEvtDispatch:0000000000000000 chEvtDispatch
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:1035   .text.chEvtWaitOne:0000000000000000 chEvtWaitOne
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:1169   .text.chEvtWaitAny:0000000000000000 chEvtWaitAny
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:1300   .text.chEvtWaitAll:0000000000000000 chEvtWaitAll
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:1421   .text.chEvtWaitOneTimeout:0000000000000000 chEvtWaitOneTimeout
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:1614   .text.chEvtWaitAnyTimeout:0000000000000000 chEvtWaitAnyTimeout
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNm0hji.s:1801   .text.chEvtWaitAllTimeout:0000000000000000 chEvtWaitAllTimeout

UNDEFINED SYMBOLS
ch
chSchReadyI
chSchRescheduleS
chSchGoSleepS
chSchGoSleepTimeoutS
