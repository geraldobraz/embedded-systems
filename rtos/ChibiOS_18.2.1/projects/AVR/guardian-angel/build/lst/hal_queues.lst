   1               		.file	"hal_queues.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.iq_read,"ax",@progbits
  12               	iq_read:
  13               	.LVL0:
  14               	.LFB173:
  15               		.file 1 "../../../os/hal/src/hal_queues.c"
   1:../../../os/hal/src/hal_queues.c **** /*
   2:../../../os/hal/src/hal_queues.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../../os/hal/src/hal_queues.c **** 
   4:../../../os/hal/src/hal_queues.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../../os/hal/src/hal_queues.c ****     you may not use this file except in compliance with the License.
   6:../../../os/hal/src/hal_queues.c ****     You may obtain a copy of the License at
   7:../../../os/hal/src/hal_queues.c **** 
   8:../../../os/hal/src/hal_queues.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../../os/hal/src/hal_queues.c **** 
  10:../../../os/hal/src/hal_queues.c ****     Unless required by applicable law or agreed to in writing, software
  11:../../../os/hal/src/hal_queues.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../../os/hal/src/hal_queues.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../../os/hal/src/hal_queues.c ****     See the License for the specific language governing permissions and
  14:../../../os/hal/src/hal_queues.c ****     limitations under the License.
  15:../../../os/hal/src/hal_queues.c **** */
  16:../../../os/hal/src/hal_queues.c **** 
  17:../../../os/hal/src/hal_queues.c **** /**
  18:../../../os/hal/src/hal_queues.c ****  * @file    hal_queues.c
  19:../../../os/hal/src/hal_queues.c ****  * @brief   I/O Queues code.
  20:../../../os/hal/src/hal_queues.c ****  *
  21:../../../os/hal/src/hal_queues.c ****  * @addtogroup HAL_QUEUES
  22:../../../os/hal/src/hal_queues.c ****  * @details Queues are mostly used in serial-like device drivers.
  23:../../../os/hal/src/hal_queues.c ****  *          Serial device drivers are usually designed to have a lower side
  24:../../../os/hal/src/hal_queues.c ****  *          (lower driver, it is usually an interrupt service routine) and an
  25:../../../os/hal/src/hal_queues.c ****  *          upper side (upper driver, accessed by the application threads).<br>
  26:../../../os/hal/src/hal_queues.c ****  *          There are several kind of queues:<br>
  27:../../../os/hal/src/hal_queues.c ****  *          - <b>Input queue</b>, unidirectional queue where the writer is the
  28:../../../os/hal/src/hal_queues.c ****  *            lower side and the reader is the upper side.
  29:../../../os/hal/src/hal_queues.c ****  *          - <b>Output queue</b>, unidirectional queue where the writer is the
  30:../../../os/hal/src/hal_queues.c ****  *            upper side and the reader is the lower side.
  31:../../../os/hal/src/hal_queues.c ****  *          - <b>Full duplex queue</b>, bidirectional queue. Full duplex queues
  32:../../../os/hal/src/hal_queues.c ****  *            are implemented by pairing an input queue and an output queue
  33:../../../os/hal/src/hal_queues.c ****  *            together.
  34:../../../os/hal/src/hal_queues.c ****  *          .
  35:../../../os/hal/src/hal_queues.c ****  * @{
  36:../../../os/hal/src/hal_queues.c ****  */
  37:../../../os/hal/src/hal_queues.c **** 
  38:../../../os/hal/src/hal_queues.c **** #include <string.h>
  39:../../../os/hal/src/hal_queues.c **** 
  40:../../../os/hal/src/hal_queues.c **** #include "hal.h"
  41:../../../os/hal/src/hal_queues.c **** 
  42:../../../os/hal/src/hal_queues.c **** /*===========================================================================*/
  43:../../../os/hal/src/hal_queues.c **** /* Driver local definitions.                                                 */
  44:../../../os/hal/src/hal_queues.c **** /*===========================================================================*/
  45:../../../os/hal/src/hal_queues.c **** 
  46:../../../os/hal/src/hal_queues.c **** /**
  47:../../../os/hal/src/hal_queues.c ****  * @brief   Non-blocking input queue read.
  48:../../../os/hal/src/hal_queues.c ****  * @details The function reads data from an input queue into a buffer. The
  49:../../../os/hal/src/hal_queues.c ****  *          operation completes when the specified amount of data has been
  50:../../../os/hal/src/hal_queues.c ****  *          transferred or when the input queue has been emptied.
  51:../../../os/hal/src/hal_queues.c ****  *
  52:../../../os/hal/src/hal_queues.c ****  * @param[in] iqp       pointer to an @p input_queue_t structure
  53:../../../os/hal/src/hal_queues.c ****  * @param[out] bp       pointer to the data buffer
  54:../../../os/hal/src/hal_queues.c ****  * @param[in] n         the maximum amount of data to be transferred, the
  55:../../../os/hal/src/hal_queues.c ****  *                      value 0 is reserved
  56:../../../os/hal/src/hal_queues.c ****  * @return              The number of bytes effectively transferred.
  57:../../../os/hal/src/hal_queues.c ****  *
  58:../../../os/hal/src/hal_queues.c ****  * @notapi
  59:../../../os/hal/src/hal_queues.c ****  */
  60:../../../os/hal/src/hal_queues.c **** static size_t iq_read(input_queue_t *iqp, uint8_t *bp, size_t n) {
  16               		.loc 1 60 66 view -0
  17               		.cfi_startproc
  18               		.loc 1 60 66 is_stmt 0 view .LVU1
  19 0000 AF92      		push r10
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 10, -2
  23 0002 BF92      		push r11
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 11, -3
  27 0004 CF92      		push r12
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 5
  30               		.cfi_offset 12, -4
  31 0006 DF92      		push r13
  32               	.LCFI3:
  33               		.cfi_def_cfa_offset 6
  34               		.cfi_offset 13, -5
  35 0008 EF92      		push r14
  36               	.LCFI4:
  37               		.cfi_def_cfa_offset 7
  38               		.cfi_offset 14, -6
  39 000a FF92      		push r15
  40               	.LCFI5:
  41               		.cfi_def_cfa_offset 8
  42               		.cfi_offset 15, -7
  43 000c 0F93      		push r16
  44               	.LCFI6:
  45               		.cfi_def_cfa_offset 9
  46               		.cfi_offset 16, -8
  47 000e 1F93      		push r17
  48               	.LCFI7:
  49               		.cfi_def_cfa_offset 10
  50               		.cfi_offset 17, -9
  51 0010 CF93      		push r28
  52               	.LCFI8:
  53               		.cfi_def_cfa_offset 11
  54               		.cfi_offset 28, -10
  55 0012 DF93      		push r29
  56               	.LCFI9:
  57               		.cfi_def_cfa_offset 12
  58               		.cfi_offset 29, -11
  59               	/* prologue: function */
  60               	/* frame size = 0 */
  61               	/* stack size = 10 */
  62               	.L__stack_usage = 10
  63 0014 EC01      		movw r28,r24
  64 0016 6B01      		movw r12,r22
  65 0018 8A01      		movw r16,r20
  61:../../../os/hal/src/hal_queues.c ****   size_t s1, s2;
  66               		.loc 1 61 3 is_stmt 1 view .LVU2
  62:../../../os/hal/src/hal_queues.c **** 
  63:../../../os/hal/src/hal_queues.c ****   osalDbgCheck(n > 0U);
  67               		.loc 1 63 3 view .LVU3
  68               		.loc 1 63 3 view .LVU4
  64:../../../os/hal/src/hal_queues.c **** 
  65:../../../os/hal/src/hal_queues.c ****   /* Number of bytes that can be read in a single atomic operation.*/
  66:../../../os/hal/src/hal_queues.c ****   if (n > iqGetFullI(iqp)) {
  69               		.loc 1 66 3 view .LVU5
  70               		.loc 1 66 11 is_stmt 0 view .LVU6
  71 001a 8C81      		ldd r24,Y+4
  72 001c 9D81      		ldd r25,Y+5
  73               	.LVL1:
  74               		.loc 1 66 6 view .LVU7
  75 001e 8417      		cp r24,r20
  76 0020 9507      		cpc r25,r21
  77 0022 00F4      		brsh .L2
  67:../../../os/hal/src/hal_queues.c ****     n = iqGetFullI(iqp);
  78               		.loc 1 67 5 is_stmt 1 view .LVU8
  79               		.loc 1 67 7 is_stmt 0 view .LVU9
  80 0024 0C81      		ldd r16,Y+4
  81 0026 1D81      		ldd r17,Y+5
  82               	.LVL2:
  83               	.L2:
  68:../../../os/hal/src/hal_queues.c ****   }
  69:../../../os/hal/src/hal_queues.c **** 
  70:../../../os/hal/src/hal_queues.c ****   /* Number of bytes before buffer limit.*/
  71:../../../os/hal/src/hal_queues.c ****   /*lint -save -e9033 [10.8] Checked to be safe.*/
  72:../../../os/hal/src/hal_queues.c ****   s1 = (size_t)(iqp->q_top - iqp->q_rdptr);
  84               		.loc 1 72 3 is_stmt 1 view .LVU10
  85               		.loc 1 72 33 is_stmt 0 view .LVU11
  86 0028 6C85      		ldd r22,Y+12
  87 002a 7D85      		ldd r23,Y+13
  88               	.LVL3:
  89               		.loc 1 72 28 view .LVU12
  90 002c E884      		ldd r14,Y+8
  91 002e F984      		ldd r15,Y+9
  92 0030 E61A      		sub r14,r22
  93 0032 F70A      		sbc r15,r23
  94               	.LVL4:
  73:../../../os/hal/src/hal_queues.c ****   /*lint -restore*/
  74:../../../os/hal/src/hal_queues.c ****   if (n < s1) {
  95               		.loc 1 74 3 is_stmt 1 view .LVU13
  96               		.loc 1 74 6 is_stmt 0 view .LVU14
  97 0034 0E15      		cp r16,r14
  98 0036 1F05      		cpc r17,r15
  99 0038 00F0      		brlo .L7
  75:../../../os/hal/src/hal_queues.c ****     memcpy((void *)bp, (void *)iqp->q_rdptr, n);
  76:../../../os/hal/src/hal_queues.c ****     iqp->q_rdptr += n;
  77:../../../os/hal/src/hal_queues.c ****   }
  78:../../../os/hal/src/hal_queues.c ****   else if (n > s1) {
 100               		.loc 1 78 8 is_stmt 1 view .LVU15
 101               		.loc 1 78 11 is_stmt 0 view .LVU16
 102 003a E016      		cp r14,r16
 103 003c F106      		cpc r15,r17
 104 003e 00F0      		brlo .L8
  79:../../../os/hal/src/hal_queues.c ****     memcpy((void *)bp, (void *)iqp->q_rdptr, s1);
  80:../../../os/hal/src/hal_queues.c ****     bp += s1;
  81:../../../os/hal/src/hal_queues.c ****     s2 = n - s1;
  82:../../../os/hal/src/hal_queues.c ****     memcpy((void *)bp, (void *)iqp->q_buffer, s2);
  83:../../../os/hal/src/hal_queues.c ****     iqp->q_rdptr = iqp->q_buffer + s2;
  84:../../../os/hal/src/hal_queues.c ****   }
  85:../../../os/hal/src/hal_queues.c ****   else { /* n == s1 */
  86:../../../os/hal/src/hal_queues.c ****     memcpy((void *)bp, (void *)iqp->q_rdptr, n);
 105               		.loc 1 86 5 is_stmt 1 view .LVU17
 106 0040 A801      		movw r20,r16
 107 0042 C601      		movw r24,r12
 108 0044 0E94 0000 		call memcpy
 109               	.LVL5:
  87:../../../os/hal/src/hal_queues.c ****     iqp->q_rdptr = iqp->q_buffer;
 110               		.loc 1 87 5 view .LVU18
 111               		.loc 1 87 18 is_stmt 0 view .LVU19
 112 0048 8E81      		ldd r24,Y+6
 113 004a 9F81      		ldd r25,Y+7
 114 004c 9D87      		std Y+13,r25
 115 004e 8C87      		std Y+12,r24
 116               	.LVL6:
 117               	.L4:
  88:../../../os/hal/src/hal_queues.c ****   }
  89:../../../os/hal/src/hal_queues.c **** 
  90:../../../os/hal/src/hal_queues.c ****   iqp->q_counter -= n;
 118               		.loc 1 90 3 is_stmt 1 view .LVU20
 119               		.loc 1 90 18 is_stmt 0 view .LVU21
 120 0050 8C81      		ldd r24,Y+4
 121 0052 9D81      		ldd r25,Y+5
 122 0054 801B      		sub r24,r16
 123 0056 910B      		sbc r25,r17
 124 0058 9D83      		std Y+5,r25
 125 005a 8C83      		std Y+4,r24
  91:../../../os/hal/src/hal_queues.c ****   return n;
 126               		.loc 1 91 3 is_stmt 1 view .LVU22
  92:../../../os/hal/src/hal_queues.c **** }
 127               		.loc 1 92 1 is_stmt 0 view .LVU23
 128 005c C801      		movw r24,r16
 129               	/* epilogue start */
 130 005e DF91      		pop r29
 131 0060 CF91      		pop r28
 132               	.LVL7:
 133               		.loc 1 92 1 view .LVU24
 134 0062 1F91      		pop r17
 135 0064 0F91      		pop r16
 136               	.LVL8:
 137               		.loc 1 92 1 view .LVU25
 138 0066 FF90      		pop r15
 139 0068 EF90      		pop r14
 140               	.LVL9:
 141               		.loc 1 92 1 view .LVU26
 142 006a DF90      		pop r13
 143 006c CF90      		pop r12
 144 006e BF90      		pop r11
 145 0070 AF90      		pop r10
 146 0072 0895      		ret
 147               	.LVL10:
 148               	.L8:
  79:../../../os/hal/src/hal_queues.c ****     bp += s1;
 149               		.loc 1 79 5 is_stmt 1 view .LVU27
 150 0074 A701      		movw r20,r14
 151 0076 C601      		movw r24,r12
 152 0078 0E94 0000 		call memcpy
 153               	.LVL11:
  80:../../../os/hal/src/hal_queues.c ****     s2 = n - s1;
 154               		.loc 1 80 5 view .LVU28
  81:../../../os/hal/src/hal_queues.c ****     memcpy((void *)bp, (void *)iqp->q_buffer, s2);
 155               		.loc 1 81 5 view .LVU29
  81:../../../os/hal/src/hal_queues.c ****     memcpy((void *)bp, (void *)iqp->q_buffer, s2);
 156               		.loc 1 81 8 is_stmt 0 view .LVU30
 157 007c 5801      		movw r10,r16
 158 007e AE18      		sub r10,r14
 159 0080 BF08      		sbc r11,r15
 160               	.LVL12:
  82:../../../os/hal/src/hal_queues.c ****     iqp->q_rdptr = iqp->q_buffer + s2;
 161               		.loc 1 82 5 is_stmt 1 view .LVU31
 162 0082 6E81      		ldd r22,Y+6
 163 0084 7F81      		ldd r23,Y+7
 164 0086 A501      		movw r20,r10
 165 0088 C601      		movw r24,r12
 166 008a 8E0D      		add r24,r14
 167 008c 9F1D      		adc r25,r15
 168               	.LVL13:
  82:../../../os/hal/src/hal_queues.c ****     iqp->q_rdptr = iqp->q_buffer + s2;
 169               		.loc 1 82 5 is_stmt 0 view .LVU32
 170 008e 0E94 0000 		call memcpy
 171               	.LVL14:
  83:../../../os/hal/src/hal_queues.c ****   }
 172               		.loc 1 83 5 is_stmt 1 view .LVU33
  83:../../../os/hal/src/hal_queues.c ****   }
 173               		.loc 1 83 34 is_stmt 0 view .LVU34
 174 0092 4E81      		ldd r20,Y+6
 175 0094 5F81      		ldd r21,Y+7
 176 0096 4A0D      		add r20,r10
 177 0098 5B1D      		adc r21,r11
  83:../../../os/hal/src/hal_queues.c ****   }
 178               		.loc 1 83 18 view .LVU35
 179 009a 5D87      		std Y+13,r21
 180 009c 4C87      		std Y+12,r20
 181 009e 00C0      		rjmp .L4
 182               	.LVL15:
 183               	.L7:
  75:../../../os/hal/src/hal_queues.c ****     iqp->q_rdptr += n;
 184               		.loc 1 75 5 is_stmt 1 view .LVU36
 185 00a0 A801      		movw r20,r16
 186 00a2 C601      		movw r24,r12
 187 00a4 0E94 0000 		call memcpy
 188               	.LVL16:
  76:../../../os/hal/src/hal_queues.c ****   }
 189               		.loc 1 76 5 view .LVU37
  76:../../../os/hal/src/hal_queues.c ****   }
 190               		.loc 1 76 18 is_stmt 0 view .LVU38
 191 00a8 8C85      		ldd r24,Y+12
 192 00aa 9D85      		ldd r25,Y+13
 193 00ac 800F      		add r24,r16
 194 00ae 911F      		adc r25,r17
 195 00b0 9D87      		std Y+13,r25
 196 00b2 8C87      		std Y+12,r24
 197 00b4 00C0      		rjmp .L4
 198               		.cfi_endproc
 199               	.LFE173:
 201               		.section	.text.oq_write,"ax",@progbits
 203               	oq_write:
 204               	.LVL17:
 205               	.LFB174:
  93:../../../os/hal/src/hal_queues.c **** 
  94:../../../os/hal/src/hal_queues.c **** /**
  95:../../../os/hal/src/hal_queues.c ****  * @brief   Non-blocking output queue write.
  96:../../../os/hal/src/hal_queues.c ****  * @details The function writes data from a buffer to an output queue. The
  97:../../../os/hal/src/hal_queues.c ****  *          operation completes when the specified amount of data has been
  98:../../../os/hal/src/hal_queues.c ****  *          transferred or when the output queue has been filled.
  99:../../../os/hal/src/hal_queues.c ****  *
 100:../../../os/hal/src/hal_queues.c ****  * @param[in] oqp       pointer to an @p output_queue_t structure
 101:../../../os/hal/src/hal_queues.c ****  * @param[in] bp        pointer to the data buffer
 102:../../../os/hal/src/hal_queues.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 103:../../../os/hal/src/hal_queues.c ****  *                      value 0 is reserved
 104:../../../os/hal/src/hal_queues.c ****  * @return              The number of bytes effectively transferred.
 105:../../../os/hal/src/hal_queues.c ****  *
 106:../../../os/hal/src/hal_queues.c ****  * @notapi
 107:../../../os/hal/src/hal_queues.c ****  */
 108:../../../os/hal/src/hal_queues.c **** static size_t oq_write(output_queue_t *oqp, const uint8_t *bp, size_t n) {
 206               		.loc 1 108 74 is_stmt 1 view -0
 207               		.cfi_startproc
 208               		.loc 1 108 74 is_stmt 0 view .LVU40
 209 0000 AF92      		push r10
 210               	.LCFI10:
 211               		.cfi_def_cfa_offset 3
 212               		.cfi_offset 10, -2
 213 0002 BF92      		push r11
 214               	.LCFI11:
 215               		.cfi_def_cfa_offset 4
 216               		.cfi_offset 11, -3
 217 0004 CF92      		push r12
 218               	.LCFI12:
 219               		.cfi_def_cfa_offset 5
 220               		.cfi_offset 12, -4
 221 0006 DF92      		push r13
 222               	.LCFI13:
 223               		.cfi_def_cfa_offset 6
 224               		.cfi_offset 13, -5
 225 0008 EF92      		push r14
 226               	.LCFI14:
 227               		.cfi_def_cfa_offset 7
 228               		.cfi_offset 14, -6
 229 000a FF92      		push r15
 230               	.LCFI15:
 231               		.cfi_def_cfa_offset 8
 232               		.cfi_offset 15, -7
 233 000c 0F93      		push r16
 234               	.LCFI16:
 235               		.cfi_def_cfa_offset 9
 236               		.cfi_offset 16, -8
 237 000e 1F93      		push r17
 238               	.LCFI17:
 239               		.cfi_def_cfa_offset 10
 240               		.cfi_offset 17, -9
 241 0010 CF93      		push r28
 242               	.LCFI18:
 243               		.cfi_def_cfa_offset 11
 244               		.cfi_offset 28, -10
 245 0012 DF93      		push r29
 246               	.LCFI19:
 247               		.cfi_def_cfa_offset 12
 248               		.cfi_offset 29, -11
 249               	/* prologue: function */
 250               	/* frame size = 0 */
 251               	/* stack size = 10 */
 252               	.L__stack_usage = 10
 253 0014 EC01      		movw r28,r24
 254 0016 6B01      		movw r12,r22
 255 0018 8A01      		movw r16,r20
 109:../../../os/hal/src/hal_queues.c ****   size_t s1, s2;
 256               		.loc 1 109 3 is_stmt 1 view .LVU41
 110:../../../os/hal/src/hal_queues.c **** 
 111:../../../os/hal/src/hal_queues.c ****   osalDbgCheck(n > 0U);
 257               		.loc 1 111 3 view .LVU42
 258               		.loc 1 111 3 view .LVU43
 112:../../../os/hal/src/hal_queues.c **** 
 113:../../../os/hal/src/hal_queues.c ****   /* Number of bytes that can be written in a single atomic operation.*/
 114:../../../os/hal/src/hal_queues.c ****   if (n > oqGetEmptyI(oqp)) {
 259               		.loc 1 114 3 view .LVU44
 260               		.loc 1 114 11 is_stmt 0 view .LVU45
 261 001a 8C81      		ldd r24,Y+4
 262 001c 9D81      		ldd r25,Y+5
 263               	.LVL18:
 264               		.loc 1 114 6 view .LVU46
 265 001e 8417      		cp r24,r20
 266 0020 9507      		cpc r25,r21
 267 0022 00F4      		brsh .L10
 115:../../../os/hal/src/hal_queues.c ****     n = oqGetEmptyI(oqp);
 268               		.loc 1 115 5 is_stmt 1 view .LVU47
 269               		.loc 1 115 7 is_stmt 0 view .LVU48
 270 0024 0C81      		ldd r16,Y+4
 271 0026 1D81      		ldd r17,Y+5
 272               	.LVL19:
 273               	.L10:
 116:../../../os/hal/src/hal_queues.c ****   }
 117:../../../os/hal/src/hal_queues.c **** 
 118:../../../os/hal/src/hal_queues.c ****   /* Number of bytes before buffer limit.*/
 119:../../../os/hal/src/hal_queues.c ****   /*lint -save -e9033 [10.8] Checked to be safe.*/
 120:../../../os/hal/src/hal_queues.c ****   s1 = (size_t)(oqp->q_top - oqp->q_wrptr);
 274               		.loc 1 120 3 is_stmt 1 view .LVU49
 275               		.loc 1 120 33 is_stmt 0 view .LVU50
 276 0028 8A85      		ldd r24,Y+10
 277 002a 9B85      		ldd r25,Y+11
 278               		.loc 1 120 28 view .LVU51
 279 002c E884      		ldd r14,Y+8
 280 002e F984      		ldd r15,Y+9
 281 0030 E81A      		sub r14,r24
 282 0032 F90A      		sbc r15,r25
 283               	.LVL20:
 121:../../../os/hal/src/hal_queues.c ****   /*lint -restore*/
 122:../../../os/hal/src/hal_queues.c ****   if (n < s1) {
 284               		.loc 1 122 3 is_stmt 1 view .LVU52
 285               		.loc 1 122 6 is_stmt 0 view .LVU53
 286 0034 0E15      		cp r16,r14
 287 0036 1F05      		cpc r17,r15
 288 0038 00F0      		brlo .L14
 123:../../../os/hal/src/hal_queues.c ****     memcpy((void *)oqp->q_wrptr, (const void *)bp, n);
 124:../../../os/hal/src/hal_queues.c ****     oqp->q_wrptr += n;
 125:../../../os/hal/src/hal_queues.c ****   }
 126:../../../os/hal/src/hal_queues.c ****   else if (n > s1) {
 289               		.loc 1 126 8 is_stmt 1 view .LVU54
 290               		.loc 1 126 11 is_stmt 0 view .LVU55
 291 003a E016      		cp r14,r16
 292 003c F106      		cpc r15,r17
 293 003e 00F0      		brlo .L15
 127:../../../os/hal/src/hal_queues.c ****     memcpy((void *)oqp->q_wrptr, (const void *)bp, s1);
 128:../../../os/hal/src/hal_queues.c ****     bp += s1;
 129:../../../os/hal/src/hal_queues.c ****     s2 = n - s1;
 130:../../../os/hal/src/hal_queues.c ****     memcpy((void *)oqp->q_buffer, (const void *)bp, s2);
 131:../../../os/hal/src/hal_queues.c ****     oqp->q_wrptr = oqp->q_buffer + s2;
 132:../../../os/hal/src/hal_queues.c ****   }
 133:../../../os/hal/src/hal_queues.c ****   else { /* n == s1 */
 134:../../../os/hal/src/hal_queues.c ****     memcpy((void *)oqp->q_wrptr, (const void *)bp, n);
 294               		.loc 1 134 5 is_stmt 1 view .LVU56
 295 0040 A801      		movw r20,r16
 296 0042 B601      		movw r22,r12
 297               	.LVL21:
 298               		.loc 1 134 5 is_stmt 0 view .LVU57
 299 0044 0E94 0000 		call memcpy
 300               	.LVL22:
 135:../../../os/hal/src/hal_queues.c ****     oqp->q_wrptr = oqp->q_buffer;
 301               		.loc 1 135 5 is_stmt 1 view .LVU58
 302               		.loc 1 135 18 is_stmt 0 view .LVU59
 303 0048 8E81      		ldd r24,Y+6
 304 004a 9F81      		ldd r25,Y+7
 305 004c 9B87      		std Y+11,r25
 306 004e 8A87      		std Y+10,r24
 307               	.LVL23:
 308               	.L12:
 136:../../../os/hal/src/hal_queues.c ****   }
 137:../../../os/hal/src/hal_queues.c **** 
 138:../../../os/hal/src/hal_queues.c ****   oqp->q_counter -= n;
 309               		.loc 1 138 3 is_stmt 1 view .LVU60
 310               		.loc 1 138 18 is_stmt 0 view .LVU61
 311 0050 8C81      		ldd r24,Y+4
 312 0052 9D81      		ldd r25,Y+5
 313 0054 801B      		sub r24,r16
 314 0056 910B      		sbc r25,r17
 315 0058 9D83      		std Y+5,r25
 316 005a 8C83      		std Y+4,r24
 139:../../../os/hal/src/hal_queues.c ****   return n;
 317               		.loc 1 139 3 is_stmt 1 view .LVU62
 140:../../../os/hal/src/hal_queues.c **** }
 318               		.loc 1 140 1 is_stmt 0 view .LVU63
 319 005c C801      		movw r24,r16
 320               	/* epilogue start */
 321 005e DF91      		pop r29
 322 0060 CF91      		pop r28
 323               	.LVL24:
 324               		.loc 1 140 1 view .LVU64
 325 0062 1F91      		pop r17
 326 0064 0F91      		pop r16
 327               	.LVL25:
 328               		.loc 1 140 1 view .LVU65
 329 0066 FF90      		pop r15
 330 0068 EF90      		pop r14
 331               	.LVL26:
 332               		.loc 1 140 1 view .LVU66
 333 006a DF90      		pop r13
 334 006c CF90      		pop r12
 335 006e BF90      		pop r11
 336 0070 AF90      		pop r10
 337 0072 0895      		ret
 338               	.LVL27:
 339               	.L15:
 127:../../../os/hal/src/hal_queues.c ****     bp += s1;
 340               		.loc 1 127 5 is_stmt 1 view .LVU67
 341 0074 A701      		movw r20,r14
 342 0076 B601      		movw r22,r12
 343 0078 0E94 0000 		call memcpy
 344               	.LVL28:
 128:../../../os/hal/src/hal_queues.c ****     s2 = n - s1;
 345               		.loc 1 128 5 view .LVU68
 129:../../../os/hal/src/hal_queues.c ****     memcpy((void *)oqp->q_buffer, (const void *)bp, s2);
 346               		.loc 1 129 5 view .LVU69
 129:../../../os/hal/src/hal_queues.c ****     memcpy((void *)oqp->q_buffer, (const void *)bp, s2);
 347               		.loc 1 129 8 is_stmt 0 view .LVU70
 348 007c 5801      		movw r10,r16
 349 007e AE18      		sub r10,r14
 350 0080 BF08      		sbc r11,r15
 351               	.LVL29:
 130:../../../os/hal/src/hal_queues.c ****     oqp->q_wrptr = oqp->q_buffer + s2;
 352               		.loc 1 130 5 is_stmt 1 view .LVU71
 128:../../../os/hal/src/hal_queues.c ****     s2 = n - s1;
 353               		.loc 1 128 8 is_stmt 0 view .LVU72
 354 0082 B601      		movw r22,r12
 355 0084 6E0D      		add r22,r14
 356 0086 7F1D      		adc r23,r15
 357               	.LVL30:
 130:../../../os/hal/src/hal_queues.c ****     oqp->q_wrptr = oqp->q_buffer + s2;
 358               		.loc 1 130 5 view .LVU73
 359 0088 A501      		movw r20,r10
 360 008a 8E81      		ldd r24,Y+6
 361 008c 9F81      		ldd r25,Y+7
 362 008e 0E94 0000 		call memcpy
 363               	.LVL31:
 131:../../../os/hal/src/hal_queues.c ****   }
 364               		.loc 1 131 5 is_stmt 1 view .LVU74
 131:../../../os/hal/src/hal_queues.c ****   }
 365               		.loc 1 131 34 is_stmt 0 view .LVU75
 366 0092 4E81      		ldd r20,Y+6
 367 0094 5F81      		ldd r21,Y+7
 368 0096 4A0D      		add r20,r10
 369 0098 5B1D      		adc r21,r11
 131:../../../os/hal/src/hal_queues.c ****   }
 370               		.loc 1 131 18 view .LVU76
 371 009a 5B87      		std Y+11,r21
 372 009c 4A87      		std Y+10,r20
 373 009e 00C0      		rjmp .L12
 374               	.LVL32:
 375               	.L14:
 123:../../../os/hal/src/hal_queues.c ****     oqp->q_wrptr += n;
 376               		.loc 1 123 5 is_stmt 1 view .LVU77
 377 00a0 A801      		movw r20,r16
 378 00a2 B601      		movw r22,r12
 379 00a4 0E94 0000 		call memcpy
 380               	.LVL33:
 124:../../../os/hal/src/hal_queues.c ****   }
 381               		.loc 1 124 5 view .LVU78
 124:../../../os/hal/src/hal_queues.c ****   }
 382               		.loc 1 124 18 is_stmt 0 view .LVU79
 383 00a8 8A85      		ldd r24,Y+10
 384 00aa 9B85      		ldd r25,Y+11
 385 00ac 800F      		add r24,r16
 386 00ae 911F      		adc r25,r17
 387 00b0 9B87      		std Y+11,r25
 388 00b2 8A87      		std Y+10,r24
 389 00b4 00C0      		rjmp .L12
 390               		.cfi_endproc
 391               	.LFE174:
 393               		.section	.text.iqObjectInit,"ax",@progbits
 394               	.global	iqObjectInit
 396               	iqObjectInit:
 397               	.LVL34:
 398               	.LFB175:
 141:../../../os/hal/src/hal_queues.c **** 
 142:../../../os/hal/src/hal_queues.c **** /*===========================================================================*/
 143:../../../os/hal/src/hal_queues.c **** /* Driver exported variables.                                                */
 144:../../../os/hal/src/hal_queues.c **** /*===========================================================================*/
 145:../../../os/hal/src/hal_queues.c **** 
 146:../../../os/hal/src/hal_queues.c **** /*===========================================================================*/
 147:../../../os/hal/src/hal_queues.c **** /* Driver local variables and types.                                         */
 148:../../../os/hal/src/hal_queues.c **** /*===========================================================================*/
 149:../../../os/hal/src/hal_queues.c **** 
 150:../../../os/hal/src/hal_queues.c **** /*===========================================================================*/
 151:../../../os/hal/src/hal_queues.c **** /* Driver local functions.                                                   */
 152:../../../os/hal/src/hal_queues.c **** /*===========================================================================*/
 153:../../../os/hal/src/hal_queues.c **** 
 154:../../../os/hal/src/hal_queues.c **** /*===========================================================================*/
 155:../../../os/hal/src/hal_queues.c **** /* Driver interrupt handlers.                                                */
 156:../../../os/hal/src/hal_queues.c **** /*===========================================================================*/
 157:../../../os/hal/src/hal_queues.c **** 
 158:../../../os/hal/src/hal_queues.c **** /*===========================================================================*/
 159:../../../os/hal/src/hal_queues.c **** /* Driver exported functions.                                                */
 160:../../../os/hal/src/hal_queues.c **** /*===========================================================================*/
 161:../../../os/hal/src/hal_queues.c **** 
 162:../../../os/hal/src/hal_queues.c **** /**
 163:../../../os/hal/src/hal_queues.c ****  * @brief   Initializes an input queue.
 164:../../../os/hal/src/hal_queues.c ****  * @details A Semaphore is internally initialized and works as a counter of
 165:../../../os/hal/src/hal_queues.c ****  *          the bytes contained in the queue.
 166:../../../os/hal/src/hal_queues.c ****  * @note    The callback is invoked from within the S-Locked system state.
 167:../../../os/hal/src/hal_queues.c ****  *
 168:../../../os/hal/src/hal_queues.c ****  * @param[out] iqp      pointer to an @p input_queue_t structure
 169:../../../os/hal/src/hal_queues.c ****  * @param[in] bp        pointer to a memory area allocated as queue buffer
 170:../../../os/hal/src/hal_queues.c ****  * @param[in] size      size of the queue buffer
 171:../../../os/hal/src/hal_queues.c ****  * @param[in] infy      pointer to a callback function that is invoked when
 172:../../../os/hal/src/hal_queues.c ****  *                      data is read from the queue. The value can be @p NULL.
 173:../../../os/hal/src/hal_queues.c ****  * @param[in] link      application defined pointer
 174:../../../os/hal/src/hal_queues.c ****  *
 175:../../../os/hal/src/hal_queues.c ****  * @init
 176:../../../os/hal/src/hal_queues.c ****  */
 177:../../../os/hal/src/hal_queues.c **** void iqObjectInit(input_queue_t *iqp, uint8_t *bp, size_t size,
 178:../../../os/hal/src/hal_queues.c ****                   qnotify_t infy, void *link) {
 399               		.loc 1 178 47 is_stmt 1 view -0
 400               		.cfi_startproc
 401               		.loc 1 178 47 is_stmt 0 view .LVU81
 402 0000 0F93      		push r16
 403               	.LCFI20:
 404               		.cfi_def_cfa_offset 3
 405               		.cfi_offset 16, -2
 406 0002 1F93      		push r17
 407               	.LCFI21:
 408               		.cfi_def_cfa_offset 4
 409               		.cfi_offset 17, -3
 410               	/* prologue: function */
 411               	/* frame size = 0 */
 412               	/* stack size = 2 */
 413               	.L__stack_usage = 2
 414 0004 FC01      		movw r30,r24
 179:../../../os/hal/src/hal_queues.c **** 
 180:../../../os/hal/src/hal_queues.c ****   osalThreadQueueObjectInit(&iqp->q_waiting);
 415               		.loc 1 180 3 is_stmt 1 view .LVU82
 416               	.LVL35:
 417               	.LBB131:
 418               	.LBI131:
 419               		.file 2 "../../../os/hal/osal/rt/osal.h"
   1:../../../os/hal/osal/rt/osal.h **** /*
   2:../../../os/hal/osal/rt/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../../os/hal/osal/rt/osal.h **** 
   4:../../../os/hal/osal/rt/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../../os/hal/osal/rt/osal.h ****     you may not use this file except in compliance with the License.
   6:../../../os/hal/osal/rt/osal.h ****     You may obtain a copy of the License at
   7:../../../os/hal/osal/rt/osal.h **** 
   8:../../../os/hal/osal/rt/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../../os/hal/osal/rt/osal.h **** 
  10:../../../os/hal/osal/rt/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:../../../os/hal/osal/rt/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../../os/hal/osal/rt/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../../os/hal/osal/rt/osal.h ****     See the License for the specific language governing permissions and
  14:../../../os/hal/osal/rt/osal.h ****     limitations under the License.
  15:../../../os/hal/osal/rt/osal.h **** */
  16:../../../os/hal/osal/rt/osal.h **** 
  17:../../../os/hal/osal/rt/osal.h **** /**
  18:../../../os/hal/osal/rt/osal.h ****  * @file    osal.h
  19:../../../os/hal/osal/rt/osal.h ****  * @brief   OSAL module header.
  20:../../../os/hal/osal/rt/osal.h ****  *
  21:../../../os/hal/osal/rt/osal.h ****  * @addtogroup OSAL
  22:../../../os/hal/osal/rt/osal.h ****  * @{
  23:../../../os/hal/osal/rt/osal.h ****  */
  24:../../../os/hal/osal/rt/osal.h **** 
  25:../../../os/hal/osal/rt/osal.h **** #ifndef OSAL_H
  26:../../../os/hal/osal/rt/osal.h **** #define OSAL_H
  27:../../../os/hal/osal/rt/osal.h **** 
  28:../../../os/hal/osal/rt/osal.h **** #include <stddef.h>
  29:../../../os/hal/osal/rt/osal.h **** #include <stdint.h>
  30:../../../os/hal/osal/rt/osal.h **** #include <stdbool.h>
  31:../../../os/hal/osal/rt/osal.h **** 
  32:../../../os/hal/osal/rt/osal.h **** #include "ch.h"
  33:../../../os/hal/osal/rt/osal.h **** 
  34:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
  35:../../../os/hal/osal/rt/osal.h **** /* Module constants.                                                         */
  36:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
  37:../../../os/hal/osal/rt/osal.h **** 
  38:../../../os/hal/osal/rt/osal.h **** /**
  39:../../../os/hal/osal/rt/osal.h ****  * @name    Common constants
  40:../../../os/hal/osal/rt/osal.h ****  * @{
  41:../../../os/hal/osal/rt/osal.h ****  */
  42:../../../os/hal/osal/rt/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:../../../os/hal/osal/rt/osal.h **** #define FALSE                               0
  44:../../../os/hal/osal/rt/osal.h **** #endif
  45:../../../os/hal/osal/rt/osal.h **** 
  46:../../../os/hal/osal/rt/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:../../../os/hal/osal/rt/osal.h **** #define TRUE                                1
  48:../../../os/hal/osal/rt/osal.h **** #endif
  49:../../../os/hal/osal/rt/osal.h **** 
  50:../../../os/hal/osal/rt/osal.h **** #define OSAL_SUCCESS                        false
  51:../../../os/hal/osal/rt/osal.h **** #define OSAL_FAILED                         true
  52:../../../os/hal/osal/rt/osal.h **** /** @} */
  53:../../../os/hal/osal/rt/osal.h **** 
  54:../../../os/hal/osal/rt/osal.h **** #if 0
  55:../../../os/hal/osal/rt/osal.h **** /**
  56:../../../os/hal/osal/rt/osal.h ****  * @name    Messages
  57:../../../os/hal/osal/rt/osal.h ****  * @{
  58:../../../os/hal/osal/rt/osal.h ****  */
  59:../../../os/hal/osal/rt/osal.h **** #define MSG_OK                              (msg_t)0
  60:../../../os/hal/osal/rt/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:../../../os/hal/osal/rt/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:../../../os/hal/osal/rt/osal.h **** /** @} */
  63:../../../os/hal/osal/rt/osal.h **** #endif
  64:../../../os/hal/osal/rt/osal.h **** 
  65:../../../os/hal/osal/rt/osal.h **** #if 0
  66:../../../os/hal/osal/rt/osal.h **** /**
  67:../../../os/hal/osal/rt/osal.h ****  * @name    Special time constants
  68:../../../os/hal/osal/rt/osal.h ****  * @{
  69:../../../os/hal/osal/rt/osal.h ****  */
  70:../../../os/hal/osal/rt/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:../../../os/hal/osal/rt/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:../../../os/hal/osal/rt/osal.h **** /** @} */
  73:../../../os/hal/osal/rt/osal.h **** #endif
  74:../../../os/hal/osal/rt/osal.h **** 
  75:../../../os/hal/osal/rt/osal.h **** /**
  76:../../../os/hal/osal/rt/osal.h ****  * @name    Systick modes.
  77:../../../os/hal/osal/rt/osal.h ****  * @{
  78:../../../os/hal/osal/rt/osal.h ****  */
  79:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:../../../os/hal/osal/rt/osal.h **** /** @} */
  83:../../../os/hal/osal/rt/osal.h **** 
  84:../../../os/hal/osal/rt/osal.h **** /**
  85:../../../os/hal/osal/rt/osal.h ****  * @name    Systick parameters.
  86:../../../os/hal/osal/rt/osal.h ****  * @{
  87:../../../os/hal/osal/rt/osal.h ****  */
  88:../../../os/hal/osal/rt/osal.h **** /**
  89:../../../os/hal/osal/rt/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:../../../os/hal/osal/rt/osal.h ****  */
  91:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:../../../os/hal/osal/rt/osal.h **** 
  93:../../../os/hal/osal/rt/osal.h **** /**
  94:../../../os/hal/osal/rt/osal.h ****  * @brief   Required systick frequency or resolution.
  95:../../../os/hal/osal/rt/osal.h ****  */
  96:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:../../../os/hal/osal/rt/osal.h **** 
  98:../../../os/hal/osal/rt/osal.h **** /**
  99:../../../os/hal/osal/rt/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:../../../os/hal/osal/rt/osal.h ****  */
 101:../../../os/hal/osal/rt/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:../../../os/hal/osal/rt/osal.h **** #else
 104:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:../../../os/hal/osal/rt/osal.h **** #endif
 106:../../../os/hal/osal/rt/osal.h **** /** @} */
 107:../../../os/hal/osal/rt/osal.h **** 
 108:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 109:../../../os/hal/osal/rt/osal.h **** /* Module pre-compile time settings.                                         */
 110:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 111:../../../os/hal/osal/rt/osal.h **** 
 112:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 113:../../../os/hal/osal/rt/osal.h **** /* Derived constants and error checks.                                       */
 114:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 115:../../../os/hal/osal/rt/osal.h **** 
 116:../../../os/hal/osal/rt/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:../../../os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:../../../os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:../../../os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:../../../os/hal/osal/rt/osal.h **** #endif
 121:../../../os/hal/osal/rt/osal.h **** 
 122:../../../os/hal/osal/rt/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:../../../os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:../../../os/hal/osal/rt/osal.h **** #endif
 125:../../../os/hal/osal/rt/osal.h **** 
 126:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 127:../../../os/hal/osal/rt/osal.h **** /* Module data structures and types.                                         */
 128:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 129:../../../os/hal/osal/rt/osal.h **** 
 130:../../../os/hal/osal/rt/osal.h **** #if 0
 131:../../../os/hal/osal/rt/osal.h **** /**
 132:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a system status word.
 133:../../../os/hal/osal/rt/osal.h ****  */
 134:../../../os/hal/osal/rt/osal.h **** typedef uint32_t syssts_t;
 135:../../../os/hal/osal/rt/osal.h **** #endif
 136:../../../os/hal/osal/rt/osal.h **** 
 137:../../../os/hal/osal/rt/osal.h **** #if 0
 138:../../../os/hal/osal/rt/osal.h **** /**
 139:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a message.
 140:../../../os/hal/osal/rt/osal.h ****  */
 141:../../../os/hal/osal/rt/osal.h **** typedef int32_t msg_t;
 142:../../../os/hal/osal/rt/osal.h **** #endif
 143:../../../os/hal/osal/rt/osal.h **** 
 144:../../../os/hal/osal/rt/osal.h **** #if 0
 145:../../../os/hal/osal/rt/osal.h **** /**
 146:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of system time counter.
 147:../../../os/hal/osal/rt/osal.h ****  */
 148:../../../os/hal/osal/rt/osal.h **** typedef uint32_t systime_t;
 149:../../../os/hal/osal/rt/osal.h **** #endif
 150:../../../os/hal/osal/rt/osal.h **** 
 151:../../../os/hal/osal/rt/osal.h **** #if 0
 152:../../../os/hal/osal/rt/osal.h **** /**
 153:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of system time interval.
 154:../../../os/hal/osal/rt/osal.h ****  */
 155:../../../os/hal/osal/rt/osal.h **** typedef uint32_t sysinterval_t;
 156:../../../os/hal/osal/rt/osal.h **** #endif
 157:../../../os/hal/osal/rt/osal.h **** 
 158:../../../os/hal/osal/rt/osal.h **** #if 0
 159:../../../os/hal/osal/rt/osal.h **** /**
 160:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of realtime counter.
 161:../../../os/hal/osal/rt/osal.h ****  */
 162:../../../os/hal/osal/rt/osal.h **** typedef uint32_t rtcnt_t;
 163:../../../os/hal/osal/rt/osal.h **** #endif
 164:../../../os/hal/osal/rt/osal.h **** 
 165:../../../os/hal/osal/rt/osal.h **** #if 0
 166:../../../os/hal/osal/rt/osal.h **** /**
 167:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a thread reference.
 168:../../../os/hal/osal/rt/osal.h ****  */
 169:../../../os/hal/osal/rt/osal.h **** typedef thread_t * thread_reference_t;
 170:../../../os/hal/osal/rt/osal.h **** #endif
 171:../../../os/hal/osal/rt/osal.h **** 
 172:../../../os/hal/osal/rt/osal.h **** #if 0
 173:../../../os/hal/osal/rt/osal.h **** /**
 174:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags mask.
 175:../../../os/hal/osal/rt/osal.h ****  */
 176:../../../os/hal/osal/rt/osal.h **** typedef uint32_t eventflags_t;
 177:../../../os/hal/osal/rt/osal.h **** #endif
 178:../../../os/hal/osal/rt/osal.h **** 
 179:../../../os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 180:../../../os/hal/osal/rt/osal.h **** /**
 181:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags object.
 182:../../../os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 183:../../../os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 184:../../../os/hal/osal/rt/osal.h ****  *          an entirely different way.
 185:../../../os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 186:../../../os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 187:../../../os/hal/osal/rt/osal.h ****  */
 188:../../../os/hal/osal/rt/osal.h **** typedef struct event_source event_source_t;
 189:../../../os/hal/osal/rt/osal.h **** 
 190:../../../os/hal/osal/rt/osal.h **** /**
 191:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of an event source callback.
 192:../../../os/hal/osal/rt/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 193:../../../os/hal/osal/rt/osal.h ****  *          exclusively as an example and for convenience.
 194:../../../os/hal/osal/rt/osal.h ****  */
 195:../../../os/hal/osal/rt/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 196:../../../os/hal/osal/rt/osal.h **** 
 197:../../../os/hal/osal/rt/osal.h **** /**
 198:../../../os/hal/osal/rt/osal.h ****  * @brief   Events source object.
 199:../../../os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 200:../../../os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 201:../../../os/hal/osal/rt/osal.h ****  *          an entirely different way.
 202:../../../os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 203:../../../os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 204:../../../os/hal/osal/rt/osal.h ****  */
 205:../../../os/hal/osal/rt/osal.h **** struct event_source {
 206:../../../os/hal/osal/rt/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 207:../../../os/hal/osal/rt/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 208:../../../os/hal/osal/rt/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 209:../../../os/hal/osal/rt/osal.h **** };
 210:../../../os/hal/osal/rt/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 211:../../../os/hal/osal/rt/osal.h **** 
 212:../../../os/hal/osal/rt/osal.h **** /**
 213:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a mutex.
 214:../../../os/hal/osal/rt/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 215:../../../os/hal/osal/rt/osal.h ****  *          mechanism can be simulated.
 216:../../../os/hal/osal/rt/osal.h ****  */
 217:../../../os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 218:../../../os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 219:../../../os/hal/osal/rt/osal.h **** typedef semaphore_t mutex_t;
 220:../../../os/hal/osal/rt/osal.h **** #else
 221:../../../os/hal/osal/rt/osal.h **** typedef uint32_t mutex_t;
 222:../../../os/hal/osal/rt/osal.h **** #endif
 223:../../../os/hal/osal/rt/osal.h **** 
 224:../../../os/hal/osal/rt/osal.h **** #if 0
 225:../../../os/hal/osal/rt/osal.h **** /**
 226:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a thread queue.
 227:../../../os/hal/osal/rt/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 228:../../../os/hal/osal/rt/osal.h ****  *          can be dequeued one at time or all together.
 229:../../../os/hal/osal/rt/osal.h ****  * @note    In this implementation it is implemented as a single reference
 230:../../../os/hal/osal/rt/osal.h ****  *          because there are no real threads.
 231:../../../os/hal/osal/rt/osal.h ****  */
 232:../../../os/hal/osal/rt/osal.h **** typedef struct {
 233:../../../os/hal/osal/rt/osal.h ****   thread_reference_t    tr;
 234:../../../os/hal/osal/rt/osal.h **** } threads_queue_t;
 235:../../../os/hal/osal/rt/osal.h **** #endif
 236:../../../os/hal/osal/rt/osal.h **** 
 237:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 238:../../../os/hal/osal/rt/osal.h **** /* Module macros.                                                            */
 239:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 240:../../../os/hal/osal/rt/osal.h **** 
 241:../../../os/hal/osal/rt/osal.h **** /**
 242:../../../os/hal/osal/rt/osal.h ****  * @name    Debug related macros
 243:../../../os/hal/osal/rt/osal.h ****  * @{
 244:../../../os/hal/osal/rt/osal.h ****  */
 245:../../../os/hal/osal/rt/osal.h **** /**
 246:../../../os/hal/osal/rt/osal.h ****  * @brief   Condition assertion.
 247:../../../os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 248:../../../os/hal/osal/rt/osal.h ****  *          message and halts.
 249:../../../os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 250:../../../os/hal/osal/rt/osal.h ****  *          switch is enabled.
 251:../../../os/hal/osal/rt/osal.h ****  * @note    The remark string is not currently used except for putting a
 252:../../../os/hal/osal/rt/osal.h ****  *          comment in the code about the assertion.
 253:../../../os/hal/osal/rt/osal.h ****  *
 254:../../../os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 255:../../../os/hal/osal/rt/osal.h ****  * @param[in] remark    a remark string
 256:../../../os/hal/osal/rt/osal.h ****  *
 257:../../../os/hal/osal/rt/osal.h ****  * @api
 258:../../../os/hal/osal/rt/osal.h ****  */
 259:../../../os/hal/osal/rt/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 260:../../../os/hal/osal/rt/osal.h **** 
 261:../../../os/hal/osal/rt/osal.h **** /**
 262:../../../os/hal/osal/rt/osal.h ****  * @brief   Function parameters check.
 263:../../../os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 264:../../../os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 265:../../../os/hal/osal/rt/osal.h ****  *          is enabled.
 266:../../../os/hal/osal/rt/osal.h ****  *
 267:../../../os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 268:../../../os/hal/osal/rt/osal.h ****  *
 269:../../../os/hal/osal/rt/osal.h ****  * @api
 270:../../../os/hal/osal/rt/osal.h ****  */
 271:../../../os/hal/osal/rt/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 272:../../../os/hal/osal/rt/osal.h **** 
 273:../../../os/hal/osal/rt/osal.h **** /**
 274:../../../os/hal/osal/rt/osal.h ****  * @brief   I-Class state check.
 275:../../../os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 276:../../../os/hal/osal/rt/osal.h ****  */
 277:../../../os/hal/osal/rt/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 278:../../../os/hal/osal/rt/osal.h **** 
 279:../../../os/hal/osal/rt/osal.h **** /**
 280:../../../os/hal/osal/rt/osal.h ****  * @brief   S-Class state check.
 281:../../../os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 282:../../../os/hal/osal/rt/osal.h ****  */
 283:../../../os/hal/osal/rt/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 284:../../../os/hal/osal/rt/osal.h **** /** @} */
 285:../../../os/hal/osal/rt/osal.h **** 
 286:../../../os/hal/osal/rt/osal.h **** /**
 287:../../../os/hal/osal/rt/osal.h ****  * @name    IRQ service routines wrappers
 288:../../../os/hal/osal/rt/osal.h ****  * @{
 289:../../../os/hal/osal/rt/osal.h ****  */
 290:../../../os/hal/osal/rt/osal.h **** /**
 291:../../../os/hal/osal/rt/osal.h ****  * @brief   Priority level verification macro.
 292:../../../os/hal/osal/rt/osal.h ****  */
 293:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 294:../../../os/hal/osal/rt/osal.h **** 
 295:../../../os/hal/osal/rt/osal.h **** /**
 296:../../../os/hal/osal/rt/osal.h ****  * @brief   IRQ prologue code.
 297:../../../os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 298:../../../os/hal/osal/rt/osal.h ****  */
 299:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 300:../../../os/hal/osal/rt/osal.h **** 
 301:../../../os/hal/osal/rt/osal.h **** /**
 302:../../../os/hal/osal/rt/osal.h ****  * @brief   IRQ epilogue code.
 303:../../../os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 304:../../../os/hal/osal/rt/osal.h ****  */
 305:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 306:../../../os/hal/osal/rt/osal.h **** 
 307:../../../os/hal/osal/rt/osal.h **** /**
 308:../../../os/hal/osal/rt/osal.h ****  * @brief   IRQ handler function declaration.
 309:../../../os/hal/osal/rt/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 310:../../../os/hal/osal/rt/osal.h ****  *
 311:../../../os/hal/osal/rt/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 312:../../../os/hal/osal/rt/osal.h ****  */
 313:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 314:../../../os/hal/osal/rt/osal.h **** /** @} */
 315:../../../os/hal/osal/rt/osal.h **** 
 316:../../../os/hal/osal/rt/osal.h **** /**
 317:../../../os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities
 318:../../../os/hal/osal/rt/osal.h ****  * @{
 319:../../../os/hal/osal/rt/osal.h ****  */
 320:../../../os/hal/osal/rt/osal.h **** /**
 321:../../../os/hal/osal/rt/osal.h ****  * @brief   Seconds to system ticks.
 322:../../../os/hal/osal/rt/osal.h ****  * @details Converts from seconds to system ticks number.
 323:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:../../../os/hal/osal/rt/osal.h ****  *
 325:../../../os/hal/osal/rt/osal.h ****  * @param[in] secs      number of seconds
 326:../../../os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 327:../../../os/hal/osal/rt/osal.h ****  *
 328:../../../os/hal/osal/rt/osal.h ****  * @api
 329:../../../os/hal/osal/rt/osal.h ****  */
 330:../../../os/hal/osal/rt/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 331:../../../os/hal/osal/rt/osal.h **** 
 332:../../../os/hal/osal/rt/osal.h **** /**
 333:../../../os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to system ticks.
 334:../../../os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to system ticks number.
 335:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 336:../../../os/hal/osal/rt/osal.h ****  *
 337:../../../os/hal/osal/rt/osal.h ****  * @param[in] msecs     number of milliseconds
 338:../../../os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 339:../../../os/hal/osal/rt/osal.h ****  *
 340:../../../os/hal/osal/rt/osal.h ****  * @api
 341:../../../os/hal/osal/rt/osal.h ****  */
 342:../../../os/hal/osal/rt/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 343:../../../os/hal/osal/rt/osal.h **** 
 344:../../../os/hal/osal/rt/osal.h **** /**
 345:../../../os/hal/osal/rt/osal.h ****  * @brief   Microseconds to system ticks.
 346:../../../os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to system ticks number.
 347:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 348:../../../os/hal/osal/rt/osal.h ****  *
 349:../../../os/hal/osal/rt/osal.h ****  * @param[in] usecs     number of microseconds
 350:../../../os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 351:../../../os/hal/osal/rt/osal.h ****  *
 352:../../../os/hal/osal/rt/osal.h ****  * @api
 353:../../../os/hal/osal/rt/osal.h ****  */
 354:../../../os/hal/osal/rt/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 355:../../../os/hal/osal/rt/osal.h **** /** @} */
 356:../../../os/hal/osal/rt/osal.h **** 
 357:../../../os/hal/osal/rt/osal.h **** /**
 358:../../../os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities for the realtime counter
 359:../../../os/hal/osal/rt/osal.h ****  * @{
 360:../../../os/hal/osal/rt/osal.h ****  */
 361:../../../os/hal/osal/rt/osal.h **** /**
 362:../../../os/hal/osal/rt/osal.h ****  * @brief   Seconds to realtime counter.
 363:../../../os/hal/osal/rt/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 364:../../../os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 365:../../../os/hal/osal/rt/osal.h ****  *
 366:../../../os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 367:../../../os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 368:../../../os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 369:../../../os/hal/osal/rt/osal.h ****  *
 370:../../../os/hal/osal/rt/osal.h ****  * @api
 371:../../../os/hal/osal/rt/osal.h ****  */
 372:../../../os/hal/osal/rt/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 373:../../../os/hal/osal/rt/osal.h **** 
 374:../../../os/hal/osal/rt/osal.h **** /**
 375:../../../os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to realtime counter.
 376:../../../os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 377:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 378:../../../os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 379:../../../os/hal/osal/rt/osal.h ****  *
 380:../../../os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 381:../../../os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 382:../../../os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 383:../../../os/hal/osal/rt/osal.h ****  *
 384:../../../os/hal/osal/rt/osal.h ****  * @api
 385:../../../os/hal/osal/rt/osal.h ****  */
 386:../../../os/hal/osal/rt/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 387:../../../os/hal/osal/rt/osal.h **** 
 388:../../../os/hal/osal/rt/osal.h **** /**
 389:../../../os/hal/osal/rt/osal.h ****  * @brief   Microseconds to realtime counter.
 390:../../../os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 391:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 392:../../../os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 393:../../../os/hal/osal/rt/osal.h ****  *
 394:../../../os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 395:../../../os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 396:../../../os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 397:../../../os/hal/osal/rt/osal.h ****  *
 398:../../../os/hal/osal/rt/osal.h ****  * @api
 399:../../../os/hal/osal/rt/osal.h ****  */
 400:../../../os/hal/osal/rt/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 401:../../../os/hal/osal/rt/osal.h **** /** @} */
 402:../../../os/hal/osal/rt/osal.h **** 
 403:../../../os/hal/osal/rt/osal.h **** /**
 404:../../../os/hal/osal/rt/osal.h ****  * @name    Sleep macros using absolute time
 405:../../../os/hal/osal/rt/osal.h ****  * @{
 406:../../../os/hal/osal/rt/osal.h ****  */
 407:../../../os/hal/osal/rt/osal.h **** /**
 408:../../../os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 409:../../../os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 410:../../../os/hal/osal/rt/osal.h ****  *          system tick clock.
 411:../../../os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 412:../../../os/hal/osal/rt/osal.h ****  *
 413:../../../os/hal/osal/rt/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 414:../../../os/hal/osal/rt/osal.h ****  *
 415:../../../os/hal/osal/rt/osal.h ****  * @api
 416:../../../os/hal/osal/rt/osal.h ****  */
 417:../../../os/hal/osal/rt/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 418:../../../os/hal/osal/rt/osal.h **** 
 419:../../../os/hal/osal/rt/osal.h **** /**
 420:../../../os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 421:../../../os/hal/osal/rt/osal.h ****  *          milliseconds.
 422:../../../os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 423:../../../os/hal/osal/rt/osal.h ****  *          system tick clock.
 424:../../../os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 425:../../../os/hal/osal/rt/osal.h ****  *
 426:../../../os/hal/osal/rt/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 427:../../../os/hal/osal/rt/osal.h ****  *
 428:../../../os/hal/osal/rt/osal.h ****  * @api
 429:../../../os/hal/osal/rt/osal.h ****  */
 430:../../../os/hal/osal/rt/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 431:../../../os/hal/osal/rt/osal.h **** 
 432:../../../os/hal/osal/rt/osal.h **** /**
 433:../../../os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 434:../../../os/hal/osal/rt/osal.h ****  *          microseconds.
 435:../../../os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 436:../../../os/hal/osal/rt/osal.h ****  *          system tick clock.
 437:../../../os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 438:../../../os/hal/osal/rt/osal.h ****  *
 439:../../../os/hal/osal/rt/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 440:../../../os/hal/osal/rt/osal.h ****  *
 441:../../../os/hal/osal/rt/osal.h ****  * @api
 442:../../../os/hal/osal/rt/osal.h ****  */
 443:../../../os/hal/osal/rt/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 444:../../../os/hal/osal/rt/osal.h **** /** @} */
 445:../../../os/hal/osal/rt/osal.h **** 
 446:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 447:../../../os/hal/osal/rt/osal.h **** /* External declarations.                                                    */
 448:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 449:../../../os/hal/osal/rt/osal.h **** 
 450:../../../os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 451:../../../os/hal/osal/rt/osal.h **** extern "C" {
 452:../../../os/hal/osal/rt/osal.h **** #endif
 453:../../../os/hal/osal/rt/osal.h **** 
 454:../../../os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 455:../../../os/hal/osal/rt/osal.h **** }
 456:../../../os/hal/osal/rt/osal.h **** #endif
 457:../../../os/hal/osal/rt/osal.h **** 
 458:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 459:../../../os/hal/osal/rt/osal.h **** /* Module inline functions.                                                  */
 460:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 461:../../../os/hal/osal/rt/osal.h **** 
 462:../../../os/hal/osal/rt/osal.h **** /**
 463:../../../os/hal/osal/rt/osal.h ****  * @brief   OSAL module initialization.
 464:../../../os/hal/osal/rt/osal.h ****  *
 465:../../../os/hal/osal/rt/osal.h ****  * @api
 466:../../../os/hal/osal/rt/osal.h ****  */
 467:../../../os/hal/osal/rt/osal.h **** static inline void osalInit(void) {
 468:../../../os/hal/osal/rt/osal.h **** 
 469:../../../os/hal/osal/rt/osal.h **** }
 470:../../../os/hal/osal/rt/osal.h **** 
 471:../../../os/hal/osal/rt/osal.h **** /**
 472:../../../os/hal/osal/rt/osal.h ****  * @brief   System halt with error message.
 473:../../../os/hal/osal/rt/osal.h ****  *
 474:../../../os/hal/osal/rt/osal.h ****  * @param[in] reason    the halt message pointer
 475:../../../os/hal/osal/rt/osal.h ****  *
 476:../../../os/hal/osal/rt/osal.h ****  * @api
 477:../../../os/hal/osal/rt/osal.h ****  */
 478:../../../os/hal/osal/rt/osal.h **** static inline void osalSysHalt(const char *reason) {
 479:../../../os/hal/osal/rt/osal.h **** 
 480:../../../os/hal/osal/rt/osal.h ****   chSysHalt(reason);
 481:../../../os/hal/osal/rt/osal.h **** }
 482:../../../os/hal/osal/rt/osal.h **** 
 483:../../../os/hal/osal/rt/osal.h **** /**
 484:../../../os/hal/osal/rt/osal.h ****  * @brief   Disables interrupts globally.
 485:../../../os/hal/osal/rt/osal.h ****  *
 486:../../../os/hal/osal/rt/osal.h ****  * @special
 487:../../../os/hal/osal/rt/osal.h ****  */
 488:../../../os/hal/osal/rt/osal.h **** static inline void osalSysDisable(void) {
 489:../../../os/hal/osal/rt/osal.h **** 
 490:../../../os/hal/osal/rt/osal.h ****   chSysDisable();
 491:../../../os/hal/osal/rt/osal.h **** }
 492:../../../os/hal/osal/rt/osal.h **** 
 493:../../../os/hal/osal/rt/osal.h **** /**
 494:../../../os/hal/osal/rt/osal.h ****  * @brief   Enables interrupts globally.
 495:../../../os/hal/osal/rt/osal.h ****  *
 496:../../../os/hal/osal/rt/osal.h ****  * @special
 497:../../../os/hal/osal/rt/osal.h ****  */
 498:../../../os/hal/osal/rt/osal.h **** static inline void osalSysEnable(void) {
 499:../../../os/hal/osal/rt/osal.h **** 
 500:../../../os/hal/osal/rt/osal.h ****   chSysEnable();
 501:../../../os/hal/osal/rt/osal.h **** }
 502:../../../os/hal/osal/rt/osal.h **** 
 503:../../../os/hal/osal/rt/osal.h **** /**
 504:../../../os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from thread context.
 505:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 506:../../../os/hal/osal/rt/osal.h ****  *
 507:../../../os/hal/osal/rt/osal.h ****  * @special
 508:../../../os/hal/osal/rt/osal.h ****  */
 509:../../../os/hal/osal/rt/osal.h **** static inline void osalSysLock(void) {
 510:../../../os/hal/osal/rt/osal.h **** 
 511:../../../os/hal/osal/rt/osal.h ****   chSysLock();
 512:../../../os/hal/osal/rt/osal.h **** }
 513:../../../os/hal/osal/rt/osal.h **** 
 514:../../../os/hal/osal/rt/osal.h **** /**
 515:../../../os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from thread context.
 516:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 517:../../../os/hal/osal/rt/osal.h ****  *
 518:../../../os/hal/osal/rt/osal.h ****  * @special
 519:../../../os/hal/osal/rt/osal.h ****  */
 520:../../../os/hal/osal/rt/osal.h **** static inline void osalSysUnlock(void) {
 521:../../../os/hal/osal/rt/osal.h **** 
 522:../../../os/hal/osal/rt/osal.h ****   chSysUnlock();
 523:../../../os/hal/osal/rt/osal.h **** }
 524:../../../os/hal/osal/rt/osal.h **** 
 525:../../../os/hal/osal/rt/osal.h **** /**
 526:../../../os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from ISR context.
 527:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 528:../../../os/hal/osal/rt/osal.h ****  *
 529:../../../os/hal/osal/rt/osal.h ****  * @special
 530:../../../os/hal/osal/rt/osal.h ****  */
 531:../../../os/hal/osal/rt/osal.h **** static inline void osalSysLockFromISR(void) {
 532:../../../os/hal/osal/rt/osal.h **** 
 533:../../../os/hal/osal/rt/osal.h ****   chSysLockFromISR();
 534:../../../os/hal/osal/rt/osal.h **** }
 535:../../../os/hal/osal/rt/osal.h **** 
 536:../../../os/hal/osal/rt/osal.h **** /**
 537:../../../os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 538:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 539:../../../os/hal/osal/rt/osal.h ****  *
 540:../../../os/hal/osal/rt/osal.h ****  * @special
 541:../../../os/hal/osal/rt/osal.h ****  */
 542:../../../os/hal/osal/rt/osal.h **** static inline void osalSysUnlockFromISR(void) {
 543:../../../os/hal/osal/rt/osal.h **** 
 544:../../../os/hal/osal/rt/osal.h ****   chSysUnlockFromISR();
 545:../../../os/hal/osal/rt/osal.h **** }
 546:../../../os/hal/osal/rt/osal.h **** 
 547:../../../os/hal/osal/rt/osal.h **** /**
 548:../../../os/hal/osal/rt/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 549:../../../os/hal/osal/rt/osal.h ****  * @details This functions enters into a critical zone and can be called
 550:../../../os/hal/osal/rt/osal.h ****  *          from any context. Because its flexibility it is less efficient
 551:../../../os/hal/osal/rt/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 552:../../../os/hal/osal/rt/osal.h ****  *          is known.
 553:../../../os/hal/osal/rt/osal.h ****  * @post    The system is in a critical zone.
 554:../../../os/hal/osal/rt/osal.h ****  *
 555:../../../os/hal/osal/rt/osal.h ****  * @return              The previous system status, the encoding of this
 556:../../../os/hal/osal/rt/osal.h ****  *                      status word is architecture-dependent and opaque.
 557:../../../os/hal/osal/rt/osal.h ****  *
 558:../../../os/hal/osal/rt/osal.h ****  * @xclass
 559:../../../os/hal/osal/rt/osal.h ****  */
 560:../../../os/hal/osal/rt/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 561:../../../os/hal/osal/rt/osal.h **** 
 562:../../../os/hal/osal/rt/osal.h ****   return chSysGetStatusAndLockX();
 563:../../../os/hal/osal/rt/osal.h **** }
 564:../../../os/hal/osal/rt/osal.h **** 
 565:../../../os/hal/osal/rt/osal.h **** /**
 566:../../../os/hal/osal/rt/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 567:../../../os/hal/osal/rt/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 568:../../../os/hal/osal/rt/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 569:../../../os/hal/osal/rt/osal.h ****  *
 570:../../../os/hal/osal/rt/osal.h ****  * @param[in] sts       the system status to be restored.
 571:../../../os/hal/osal/rt/osal.h ****  *
 572:../../../os/hal/osal/rt/osal.h ****  * @xclass
 573:../../../os/hal/osal/rt/osal.h ****  */
 574:../../../os/hal/osal/rt/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 575:../../../os/hal/osal/rt/osal.h **** 
 576:../../../os/hal/osal/rt/osal.h ****   chSysRestoreStatusX(sts);
 577:../../../os/hal/osal/rt/osal.h **** }
 578:../../../os/hal/osal/rt/osal.h **** 
 579:../../../os/hal/osal/rt/osal.h **** /**
 580:../../../os/hal/osal/rt/osal.h ****  * @brief   Polled delay.
 581:../../../os/hal/osal/rt/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 582:../../../os/hal/osal/rt/osal.h ****  *          value.
 583:../../../os/hal/osal/rt/osal.h ****  *
 584:../../../os/hal/osal/rt/osal.h ****  * @param[in] cycles    number of cycles
 585:../../../os/hal/osal/rt/osal.h ****  *
 586:../../../os/hal/osal/rt/osal.h ****  * @xclass
 587:../../../os/hal/osal/rt/osal.h ****  */
 588:../../../os/hal/osal/rt/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 589:../../../os/hal/osal/rt/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 590:../../../os/hal/osal/rt/osal.h **** 
 591:../../../os/hal/osal/rt/osal.h ****   chSysPolledDelayX(cycles);
 592:../../../os/hal/osal/rt/osal.h **** }
 593:../../../os/hal/osal/rt/osal.h **** #endif
 594:../../../os/hal/osal/rt/osal.h **** 
 595:../../../os/hal/osal/rt/osal.h **** /**
 596:../../../os/hal/osal/rt/osal.h ****  * @brief   Systick callback for the underlying OS.
 597:../../../os/hal/osal/rt/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 598:../../../os/hal/osal/rt/osal.h ****  *          service from the HAL.
 599:../../../os/hal/osal/rt/osal.h ****  */
 600:../../../os/hal/osal/rt/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 601:../../../os/hal/osal/rt/osal.h **** static inline void osalOsTimerHandlerI(void) {
 602:../../../os/hal/osal/rt/osal.h **** 
 603:../../../os/hal/osal/rt/osal.h ****   chSysTimerHandlerI();
 604:../../../os/hal/osal/rt/osal.h **** }
 605:../../../os/hal/osal/rt/osal.h **** #endif
 606:../../../os/hal/osal/rt/osal.h **** 
 607:../../../os/hal/osal/rt/osal.h **** /**
 608:../../../os/hal/osal/rt/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 609:../../../os/hal/osal/rt/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 610:../../../os/hal/osal/rt/osal.h ****  *          by themselves, an explicit reschedule using this function is
 611:../../../os/hal/osal/rt/osal.h ****  *          required in this scenario.
 612:../../../os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 613:../../../os/hal/osal/rt/osal.h ****  *
 614:../../../os/hal/osal/rt/osal.h ****  * @sclass
 615:../../../os/hal/osal/rt/osal.h ****  */
 616:../../../os/hal/osal/rt/osal.h **** static inline void osalOsRescheduleS(void) {
 617:../../../os/hal/osal/rt/osal.h **** 
 618:../../../os/hal/osal/rt/osal.h ****   chSchRescheduleS();
 619:../../../os/hal/osal/rt/osal.h **** }
 620:../../../os/hal/osal/rt/osal.h **** 
 621:../../../os/hal/osal/rt/osal.h **** /**
 622:../../../os/hal/osal/rt/osal.h ****  * @brief   Current system time.
 623:../../../os/hal/osal/rt/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 624:../../../os/hal/osal/rt/osal.h ****  *          invocation.
 625:../../../os/hal/osal/rt/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 626:../../../os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context but its atomicity
 627:../../../os/hal/osal/rt/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 628:../../../os/hal/osal/rt/osal.h ****  *          @p systime_t size.
 629:../../../os/hal/osal/rt/osal.h ****  *
 630:../../../os/hal/osal/rt/osal.h ****  * @return              The system time in ticks.
 631:../../../os/hal/osal/rt/osal.h ****  *
 632:../../../os/hal/osal/rt/osal.h ****  * @xclass
 633:../../../os/hal/osal/rt/osal.h ****  */
 634:../../../os/hal/osal/rt/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 635:../../../os/hal/osal/rt/osal.h **** 
 636:../../../os/hal/osal/rt/osal.h ****   return chVTGetSystemTimeX();
 637:../../../os/hal/osal/rt/osal.h **** }
 638:../../../os/hal/osal/rt/osal.h **** 
 639:../../../os/hal/osal/rt/osal.h **** /**
 640:../../../os/hal/osal/rt/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 641:../../../os/hal/osal/rt/osal.h ****  *
 642:../../../os/hal/osal/rt/osal.h ****  * @param[in] systime   base system time
 643:../../../os/hal/osal/rt/osal.h ****  * @param[in] interval  interval to be added
 644:../../../os/hal/osal/rt/osal.h ****  * @return              The new system time.
 645:../../../os/hal/osal/rt/osal.h ****  *
 646:../../../os/hal/osal/rt/osal.h ****  * @xclass
 647:../../../os/hal/osal/rt/osal.h ****  */
 648:../../../os/hal/osal/rt/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 649:../../../os/hal/osal/rt/osal.h ****                                      sysinterval_t interval) {
 650:../../../os/hal/osal/rt/osal.h **** 
 651:../../../os/hal/osal/rt/osal.h ****   return chTimeAddX(systime, interval);
 652:../../../os/hal/osal/rt/osal.h **** }
 653:../../../os/hal/osal/rt/osal.h **** 
 654:../../../os/hal/osal/rt/osal.h **** /**
 655:../../../os/hal/osal/rt/osal.h ****  * @brief   Subtracts two system times returning an interval.
 656:../../../os/hal/osal/rt/osal.h ****  *
 657:../../../os/hal/osal/rt/osal.h ****  * @param[in] start     first system time
 658:../../../os/hal/osal/rt/osal.h ****  * @param[in] end       second system time
 659:../../../os/hal/osal/rt/osal.h ****  * @return              The interval representing the time difference.
 660:../../../os/hal/osal/rt/osal.h ****  *
 661:../../../os/hal/osal/rt/osal.h ****  * @xclass
 662:../../../os/hal/osal/rt/osal.h ****  */
 663:../../../os/hal/osal/rt/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 664:../../../os/hal/osal/rt/osal.h **** 
 665:../../../os/hal/osal/rt/osal.h ****   return chTimeDiffX(start, end);
 666:../../../os/hal/osal/rt/osal.h **** }
 667:../../../os/hal/osal/rt/osal.h **** 
 668:../../../os/hal/osal/rt/osal.h **** /**
 669:../../../os/hal/osal/rt/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 670:../../../os/hal/osal/rt/osal.h ****  * @note    When start==end then the function returns always true because the
 671:../../../os/hal/osal/rt/osal.h ****  *          whole time range is specified.
 672:../../../os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context.
 673:../../../os/hal/osal/rt/osal.h ****  *
 674:../../../os/hal/osal/rt/osal.h ****  * @param[in] time      the time to be verified
 675:../../../os/hal/osal/rt/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 676:../../../os/hal/osal/rt/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 677:../../../os/hal/osal/rt/osal.h ****  * @retval true         current time within the specified time window.
 678:../../../os/hal/osal/rt/osal.h ****  * @retval false        current time not within the specified time window.
 679:../../../os/hal/osal/rt/osal.h ****  *
 680:../../../os/hal/osal/rt/osal.h ****  * @xclass
 681:../../../os/hal/osal/rt/osal.h ****  */
 682:../../../os/hal/osal/rt/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 683:../../../os/hal/osal/rt/osal.h ****                                       systime_t start,
 684:../../../os/hal/osal/rt/osal.h ****                                       systime_t end) {
 685:../../../os/hal/osal/rt/osal.h **** 
 686:../../../os/hal/osal/rt/osal.h ****   return chTimeIsInRangeX(time, start, end);
 687:../../../os/hal/osal/rt/osal.h **** }
 688:../../../os/hal/osal/rt/osal.h **** 
 689:../../../os/hal/osal/rt/osal.h **** /**
 690:../../../os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 691:../../../os/hal/osal/rt/osal.h ****  *
 692:../../../os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 693:../../../os/hal/osal/rt/osal.h ****  *                      handled as follow:
 694:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 695:../../../os/hal/osal/rt/osal.h ****  *                        normal time specification.
 696:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 697:../../../os/hal/osal/rt/osal.h ****  *                      .
 698:../../../os/hal/osal/rt/osal.h ****  *
 699:../../../os/hal/osal/rt/osal.h ****  * @sclass
 700:../../../os/hal/osal/rt/osal.h ****  */
 701:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 702:../../../os/hal/osal/rt/osal.h **** 
 703:../../../os/hal/osal/rt/osal.h ****   chThdSleepS(delay);
 704:../../../os/hal/osal/rt/osal.h **** }
 705:../../../os/hal/osal/rt/osal.h **** 
 706:../../../os/hal/osal/rt/osal.h **** /**
 707:../../../os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 708:../../../os/hal/osal/rt/osal.h ****  *
 709:../../../os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 710:../../../os/hal/osal/rt/osal.h ****  *                      handled as follow:
 711:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 712:../../../os/hal/osal/rt/osal.h ****  *                        normal time specification.
 713:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 714:../../../os/hal/osal/rt/osal.h ****  *                      .
 715:../../../os/hal/osal/rt/osal.h ****  *
 716:../../../os/hal/osal/rt/osal.h ****  * @api
 717:../../../os/hal/osal/rt/osal.h ****  */
 718:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 719:../../../os/hal/osal/rt/osal.h **** 
 720:../../../os/hal/osal/rt/osal.h ****   chThdSleep(delay);
 721:../../../os/hal/osal/rt/osal.h **** }
 722:../../../os/hal/osal/rt/osal.h **** 
 723:../../../os/hal/osal/rt/osal.h **** /**
 724:../../../os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 725:../../../os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 726:../../../os/hal/osal/rt/osal.h ****  *          context.
 727:../../../os/hal/osal/rt/osal.h ****  *
 728:../../../os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 729:../../../os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 730:../../../os/hal/osal/rt/osal.h ****  *
 731:../../../os/hal/osal/rt/osal.h ****  * @sclass
 732:../../../os/hal/osal/rt/osal.h ****  */
 733:../../../os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 734:../../../os/hal/osal/rt/osal.h **** 
 735:../../../os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 736:../../../os/hal/osal/rt/osal.h **** }
 737:../../../os/hal/osal/rt/osal.h **** 
 738:../../../os/hal/osal/rt/osal.h **** /**
 739:../../../os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 740:../../../os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 741:../../../os/hal/osal/rt/osal.h ****  *          context.
 742:../../../os/hal/osal/rt/osal.h ****  *
 743:../../../os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 744:../../../os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 745:../../../os/hal/osal/rt/osal.h ****  *                      handled as follow:
 746:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 747:../../../os/hal/osal/rt/osal.h ****  *                        state.
 748:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 749:../../../os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 750:../../../os/hal/osal/rt/osal.h ****  *                        occurred.
 751:../../../os/hal/osal/rt/osal.h ****  *                      .
 752:../../../os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 753:../../../os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 754:../../../os/hal/osal/rt/osal.h ****  *
 755:../../../os/hal/osal/rt/osal.h ****  * @sclass
 756:../../../os/hal/osal/rt/osal.h ****  */
 757:../../../os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 758:../../../os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 759:../../../os/hal/osal/rt/osal.h **** 
 760:../../../os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 761:../../../os/hal/osal/rt/osal.h **** }
 762:../../../os/hal/osal/rt/osal.h **** 
 763:../../../os/hal/osal/rt/osal.h **** /**
 764:../../../os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 765:../../../os/hal/osal/rt/osal.h ****  * @note    This function must not reschedule because it can be called from
 766:../../../os/hal/osal/rt/osal.h ****  *          ISR context.
 767:../../../os/hal/osal/rt/osal.h ****  *
 768:../../../os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 769:../../../os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 770:../../../os/hal/osal/rt/osal.h ****  *
 771:../../../os/hal/osal/rt/osal.h ****  * @iclass
 772:../../../os/hal/osal/rt/osal.h ****  */
 773:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 774:../../../os/hal/osal/rt/osal.h **** 
 775:../../../os/hal/osal/rt/osal.h ****   chThdResumeI(trp, msg);
 776:../../../os/hal/osal/rt/osal.h **** }
 777:../../../os/hal/osal/rt/osal.h **** 
 778:../../../os/hal/osal/rt/osal.h **** /**
 779:../../../os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 780:../../../os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 781:../../../os/hal/osal/rt/osal.h ****  *          context.
 782:../../../os/hal/osal/rt/osal.h ****  *
 783:../../../os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 784:../../../os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 785:../../../os/hal/osal/rt/osal.h ****  *
 786:../../../os/hal/osal/rt/osal.h ****  * @iclass
 787:../../../os/hal/osal/rt/osal.h ****  */
 788:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadResumeS(thread_reference_t *trp, msg_t msg) {
 789:../../../os/hal/osal/rt/osal.h **** 
 790:../../../os/hal/osal/rt/osal.h ****   chThdResumeS(trp, msg);
 791:../../../os/hal/osal/rt/osal.h **** }
 792:../../../os/hal/osal/rt/osal.h **** 
 793:../../../os/hal/osal/rt/osal.h **** /**
 794:../../../os/hal/osal/rt/osal.h ****  * @brief   Initializes a threads queue object.
 795:../../../os/hal/osal/rt/osal.h ****  *
 796:../../../os/hal/osal/rt/osal.h ****  * @param[out] tqp      pointer to the threads queue object
 797:../../../os/hal/osal/rt/osal.h ****  *
 798:../../../os/hal/osal/rt/osal.h ****  * @init
 799:../../../os/hal/osal/rt/osal.h ****  */
 800:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadQueueObjectInit(threads_queue_t *tqp) {
 420               		.loc 2 800 20 view .LVU83
 421               	.LBE131:
 801:../../../os/hal/osal/rt/osal.h **** 
 802:../../../os/hal/osal/rt/osal.h ****   chThdQueueObjectInit(tqp);
 422               		.loc 2 802 3 view .LVU84
 423               	.LBB136:
 424               	.LBB132:
 425               	.LBI132:
 426               		.file 3 "../../../os/rt/include/chthreads.h"
   1:../../../os/rt/include/chthreads.h **** /*
   2:../../../os/rt/include/chthreads.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/rt/include/chthreads.h **** 
   4:../../../os/rt/include/chthreads.h ****     This file is part of ChibiOS.
   5:../../../os/rt/include/chthreads.h **** 
   6:../../../os/rt/include/chthreads.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/rt/include/chthreads.h ****     it under the terms of the GNU General Public License as published by
   8:../../../os/rt/include/chthreads.h ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/rt/include/chthreads.h ****     (at your option) any later version.
  10:../../../os/rt/include/chthreads.h **** 
  11:../../../os/rt/include/chthreads.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/rt/include/chthreads.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/rt/include/chthreads.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/rt/include/chthreads.h ****     GNU General Public License for more details.
  15:../../../os/rt/include/chthreads.h **** 
  16:../../../os/rt/include/chthreads.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/rt/include/chthreads.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/rt/include/chthreads.h **** */
  19:../../../os/rt/include/chthreads.h **** 
  20:../../../os/rt/include/chthreads.h **** /**
  21:../../../os/rt/include/chthreads.h ****  * @file    chthreads.h
  22:../../../os/rt/include/chthreads.h ****  * @brief   Threads module macros and structures.
  23:../../../os/rt/include/chthreads.h ****  *
  24:../../../os/rt/include/chthreads.h ****  * @addtogroup threads
  25:../../../os/rt/include/chthreads.h ****  * @{
  26:../../../os/rt/include/chthreads.h ****  */
  27:../../../os/rt/include/chthreads.h **** 
  28:../../../os/rt/include/chthreads.h **** #ifndef CHTHREADS_H
  29:../../../os/rt/include/chthreads.h **** #define CHTHREADS_H
  30:../../../os/rt/include/chthreads.h **** 
  31:../../../os/rt/include/chthreads.h **** /*lint -sem(chThdExit, r_no) -sem(chThdExitS, r_no)*/
  32:../../../os/rt/include/chthreads.h **** 
  33:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  34:../../../os/rt/include/chthreads.h **** /* Module constants.                                                         */
  35:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  36:../../../os/rt/include/chthreads.h **** 
  37:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  38:../../../os/rt/include/chthreads.h **** /* Module pre-compile time settings.                                         */
  39:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  40:../../../os/rt/include/chthreads.h **** 
  41:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  42:../../../os/rt/include/chthreads.h **** /* Derived constants and error checks.                                       */
  43:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  44:../../../os/rt/include/chthreads.h **** 
  45:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  46:../../../os/rt/include/chthreads.h **** /* Module data structures and types.                                         */
  47:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  48:../../../os/rt/include/chthreads.h **** 
  49:../../../os/rt/include/chthreads.h **** /**
  50:../../../os/rt/include/chthreads.h ****  * @brief   Thread function.
  51:../../../os/rt/include/chthreads.h ****  */
  52:../../../os/rt/include/chthreads.h **** typedef void (*tfunc_t)(void *p);
  53:../../../os/rt/include/chthreads.h **** 
  54:../../../os/rt/include/chthreads.h **** /**
  55:../../../os/rt/include/chthreads.h ****  * @brief   Type of a thread descriptor.
  56:../../../os/rt/include/chthreads.h ****  */
  57:../../../os/rt/include/chthreads.h **** typedef struct {
  58:../../../os/rt/include/chthreads.h ****   /**
  59:../../../os/rt/include/chthreads.h ****    * @brief   Thread name.
  60:../../../os/rt/include/chthreads.h ****    */
  61:../../../os/rt/include/chthreads.h ****   const char        *name;
  62:../../../os/rt/include/chthreads.h ****   /**
  63:../../../os/rt/include/chthreads.h ****    * @brief   Pointer to the working area base.
  64:../../../os/rt/include/chthreads.h ****    */
  65:../../../os/rt/include/chthreads.h ****   stkalign_t        *wbase;
  66:../../../os/rt/include/chthreads.h ****   /**
  67:../../../os/rt/include/chthreads.h ****    * @brief   End of the working area.
  68:../../../os/rt/include/chthreads.h ****    */
  69:../../../os/rt/include/chthreads.h ****   stkalign_t        *wend;
  70:../../../os/rt/include/chthreads.h ****   /**
  71:../../../os/rt/include/chthreads.h ****    * @brief   Thread priority.
  72:../../../os/rt/include/chthreads.h ****    */
  73:../../../os/rt/include/chthreads.h ****   tprio_t           prio;
  74:../../../os/rt/include/chthreads.h ****   /**
  75:../../../os/rt/include/chthreads.h ****    * @brief   Thread function pointer.
  76:../../../os/rt/include/chthreads.h ****    */
  77:../../../os/rt/include/chthreads.h ****   tfunc_t           funcp;
  78:../../../os/rt/include/chthreads.h ****   /**
  79:../../../os/rt/include/chthreads.h ****    * @brief   Thread argument.
  80:../../../os/rt/include/chthreads.h ****    */
  81:../../../os/rt/include/chthreads.h ****   void              *arg;
  82:../../../os/rt/include/chthreads.h **** } thread_descriptor_t;
  83:../../../os/rt/include/chthreads.h **** 
  84:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  85:../../../os/rt/include/chthreads.h **** /* Module macros.                                                            */
  86:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  87:../../../os/rt/include/chthreads.h **** 
  88:../../../os/rt/include/chthreads.h **** /**
  89:../../../os/rt/include/chthreads.h ****  * @name    Threads queues
  90:../../../os/rt/include/chthreads.h ****  */
  91:../../../os/rt/include/chthreads.h **** /**
  92:../../../os/rt/include/chthreads.h ****  * @brief   Data part of a static threads queue object initializer.
  93:../../../os/rt/include/chthreads.h ****  * @details This macro should be used when statically initializing a threads
  94:../../../os/rt/include/chthreads.h ****  *          queue that is part of a bigger structure.
  95:../../../os/rt/include/chthreads.h ****  *
  96:../../../os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
  97:../../../os/rt/include/chthreads.h ****  */
  98:../../../os/rt/include/chthreads.h **** #define _THREADS_QUEUE_DATA(name) {(thread_t *)&name, (thread_t *)&name}
  99:../../../os/rt/include/chthreads.h **** 
 100:../../../os/rt/include/chthreads.h **** /**
 101:../../../os/rt/include/chthreads.h ****  * @brief   Static threads queue object initializer.
 102:../../../os/rt/include/chthreads.h ****  * @details Statically initialized threads queues require no explicit
 103:../../../os/rt/include/chthreads.h ****  *          initialization using @p queue_init().
 104:../../../os/rt/include/chthreads.h ****  *
 105:../../../os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
 106:../../../os/rt/include/chthreads.h ****  */
 107:../../../os/rt/include/chthreads.h **** #define _THREADS_QUEUE_DECL(name)                                           \
 108:../../../os/rt/include/chthreads.h ****   threads_queue_t name = _THREADS_QUEUE_DATA(name)
 109:../../../os/rt/include/chthreads.h **** /** @} */
 110:../../../os/rt/include/chthreads.h **** 
 111:../../../os/rt/include/chthreads.h **** /**
 112:../../../os/rt/include/chthreads.h ****  * @name    Working Areas
 113:../../../os/rt/include/chthreads.h ****  */
 114:../../../os/rt/include/chthreads.h **** /**
 115:../../../os/rt/include/chthreads.h ****  * @brief   Calculates the total Working Area size.
 116:../../../os/rt/include/chthreads.h ****  *
 117:../../../os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 118:../../../os/rt/include/chthreads.h ****  * @return              The total used memory in bytes.
 119:../../../os/rt/include/chthreads.h ****  *
 120:../../../os/rt/include/chthreads.h ****  * @api
 121:../../../os/rt/include/chthreads.h ****  */
 122:../../../os/rt/include/chthreads.h **** #define THD_WORKING_AREA_SIZE(n)                                            \
 123:../../../os/rt/include/chthreads.h ****   MEM_ALIGN_NEXT(sizeof(thread_t) + PORT_WA_SIZE(n), PORT_STACK_ALIGN)
 124:../../../os/rt/include/chthreads.h **** 
 125:../../../os/rt/include/chthreads.h **** /**
 126:../../../os/rt/include/chthreads.h ****  * @brief   Static working area allocation.
 127:../../../os/rt/include/chthreads.h ****  * @details This macro is used to allocate a static thread working area
 128:../../../os/rt/include/chthreads.h ****  *          aligned as both position and size.
 129:../../../os/rt/include/chthreads.h ****  *
 130:../../../os/rt/include/chthreads.h ****  * @param[in] s         the name to be assigned to the stack array
 131:../../../os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 132:../../../os/rt/include/chthreads.h ****  *
 133:../../../os/rt/include/chthreads.h ****  * @api
 134:../../../os/rt/include/chthreads.h ****  */
 135:../../../os/rt/include/chthreads.h **** #define THD_WORKING_AREA(s, n) PORT_WORKING_AREA(s, n)
 136:../../../os/rt/include/chthreads.h **** 
 137:../../../os/rt/include/chthreads.h **** /**
 138:../../../os/rt/include/chthreads.h ****  * @brief   Base of a working area casted to the correct type.
 139:../../../os/rt/include/chthreads.h ****  *
 140:../../../os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 141:../../../os/rt/include/chthreads.h ****  */
 142:../../../os/rt/include/chthreads.h **** #define THD_WORKING_AREA_BASE(s) ((stkalign_t *)(s))
 143:../../../os/rt/include/chthreads.h **** 
 144:../../../os/rt/include/chthreads.h **** /**
 145:../../../os/rt/include/chthreads.h ****  * @brief   End of a working area casted to the correct type.
 146:../../../os/rt/include/chthreads.h ****  *
 147:../../../os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 148:../../../os/rt/include/chthreads.h ****  */
 149:../../../os/rt/include/chthreads.h **** #define THD_WORKING_AREA_END(s) (THD_WORKING_AREA_BASE(s) +                 \
 150:../../../os/rt/include/chthreads.h ****                                  (sizeof (s) / sizeof (stkalign_t)))
 151:../../../os/rt/include/chthreads.h **** /** @} */
 152:../../../os/rt/include/chthreads.h **** 
 153:../../../os/rt/include/chthreads.h **** /**
 154:../../../os/rt/include/chthreads.h ****  * @name    Threads abstraction macros
 155:../../../os/rt/include/chthreads.h ****  */
 156:../../../os/rt/include/chthreads.h **** /**
 157:../../../os/rt/include/chthreads.h ****  * @brief   Thread declaration macro.
 158:../../../os/rt/include/chthreads.h ****  * @note    Thread declarations should be performed using this macro because
 159:../../../os/rt/include/chthreads.h ****  *          the port layer could define optimizations for thread functions.
 160:../../../os/rt/include/chthreads.h ****  */
 161:../../../os/rt/include/chthreads.h **** #define THD_FUNCTION(tname, arg) PORT_THD_FUNCTION(tname, arg)
 162:../../../os/rt/include/chthreads.h **** /** @} */
 163:../../../os/rt/include/chthreads.h **** 
 164:../../../os/rt/include/chthreads.h **** /**
 165:../../../os/rt/include/chthreads.h ****  * @name    Macro Functions
 166:../../../os/rt/include/chthreads.h ****  * @{
 167:../../../os/rt/include/chthreads.h ****  */
 168:../../../os/rt/include/chthreads.h **** /**
 169:../../../os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 170:../../../os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 171:../../../os/rt/include/chthreads.h ****  *          system tick clock.
 172:../../../os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 173:../../../os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 174:../../../os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 175:../../../os/rt/include/chthreads.h ****  *          converted.
 176:../../../os/rt/include/chthreads.h ****  *
 177:../../../os/rt/include/chthreads.h ****  * @param[in] sec       time in seconds, must be different from zero
 178:../../../os/rt/include/chthreads.h ****  *
 179:../../../os/rt/include/chthreads.h ****  * @api
 180:../../../os/rt/include/chthreads.h ****  */
 181:../../../os/rt/include/chthreads.h **** #define chThdSleepSeconds(sec) chThdSleep(TIME_S2I(sec))
 182:../../../os/rt/include/chthreads.h **** 
 183:../../../os/rt/include/chthreads.h **** /**
 184:../../../os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 185:../../../os/rt/include/chthreads.h ****  *          milliseconds.
 186:../../../os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 187:../../../os/rt/include/chthreads.h ****  *          system tick clock.
 188:../../../os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 189:../../../os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 190:../../../os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 191:../../../os/rt/include/chthreads.h ****  *          converted.
 192:../../../os/rt/include/chthreads.h ****  *
 193:../../../os/rt/include/chthreads.h ****  * @param[in] msec      time in milliseconds, must be different from zero
 194:../../../os/rt/include/chthreads.h ****  *
 195:../../../os/rt/include/chthreads.h ****  * @api
 196:../../../os/rt/include/chthreads.h ****  */
 197:../../../os/rt/include/chthreads.h **** #define chThdSleepMilliseconds(msec) chThdSleep(TIME_MS2I(msec))
 198:../../../os/rt/include/chthreads.h **** 
 199:../../../os/rt/include/chthreads.h **** /**
 200:../../../os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 201:../../../os/rt/include/chthreads.h ****  *          microseconds.
 202:../../../os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 203:../../../os/rt/include/chthreads.h ****  *          system tick clock.
 204:../../../os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 205:../../../os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 206:../../../os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 207:../../../os/rt/include/chthreads.h ****  *          converted.
 208:../../../os/rt/include/chthreads.h ****  *
 209:../../../os/rt/include/chthreads.h ****  * @param[in] usec      time in microseconds, must be different from zero
 210:../../../os/rt/include/chthreads.h ****  *
 211:../../../os/rt/include/chthreads.h ****  * @api
 212:../../../os/rt/include/chthreads.h ****  */
 213:../../../os/rt/include/chthreads.h **** #define chThdSleepMicroseconds(usec) chThdSleep(TIME_US2I(usec))
 214:../../../os/rt/include/chthreads.h **** /** @} */
 215:../../../os/rt/include/chthreads.h **** 
 216:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
 217:../../../os/rt/include/chthreads.h **** /* External declarations.                                                    */
 218:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
 219:../../../os/rt/include/chthreads.h **** 
 220:../../../os/rt/include/chthreads.h **** #ifdef __cplusplus
 221:../../../os/rt/include/chthreads.h **** extern "C" {
 222:../../../os/rt/include/chthreads.h **** #endif
 223:../../../os/rt/include/chthreads.h ****    thread_t *_thread_init(thread_t *tp, const char *name, tprio_t prio);
 224:../../../os/rt/include/chthreads.h **** #if CH_DBG_FILL_THREADS == TRUE
 225:../../../os/rt/include/chthreads.h ****   void _thread_memfill(uint8_t *startp, uint8_t *endp, uint8_t v);
 226:../../../os/rt/include/chthreads.h **** #endif
 227:../../../os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspendedI(const thread_descriptor_t *tdp);
 228:../../../os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspended(const thread_descriptor_t *tdp);
 229:../../../os/rt/include/chthreads.h ****   thread_t *chThdCreateI(const thread_descriptor_t *tdp);
 230:../../../os/rt/include/chthreads.h ****   thread_t *chThdCreate(const thread_descriptor_t *tdp);
 231:../../../os/rt/include/chthreads.h ****   thread_t *chThdCreateStatic(void *wsp, size_t size,
 232:../../../os/rt/include/chthreads.h ****                               tprio_t prio, tfunc_t pf, void *arg);
 233:../../../os/rt/include/chthreads.h ****   thread_t *chThdStart(thread_t *tp);
 234:../../../os/rt/include/chthreads.h **** #if CH_CFG_USE_REGISTRY == TRUE
 235:../../../os/rt/include/chthreads.h ****   thread_t *chThdAddRef(thread_t *tp);
 236:../../../os/rt/include/chthreads.h ****   void chThdRelease(thread_t *tp);
 237:../../../os/rt/include/chthreads.h **** #endif
 238:../../../os/rt/include/chthreads.h ****   void chThdExit(msg_t msg);
 239:../../../os/rt/include/chthreads.h ****   void chThdExitS(msg_t msg);
 240:../../../os/rt/include/chthreads.h **** #if CH_CFG_USE_WAITEXIT == TRUE
 241:../../../os/rt/include/chthreads.h ****   msg_t chThdWait(thread_t *tp);
 242:../../../os/rt/include/chthreads.h **** #endif
 243:../../../os/rt/include/chthreads.h ****   tprio_t chThdSetPriority(tprio_t newprio);
 244:../../../os/rt/include/chthreads.h ****   void chThdTerminate(thread_t *tp);
 245:../../../os/rt/include/chthreads.h ****   msg_t chThdSuspendS(thread_reference_t *trp);
 246:../../../os/rt/include/chthreads.h ****   msg_t chThdSuspendTimeoutS(thread_reference_t *trp, sysinterval_t timeout);
 247:../../../os/rt/include/chthreads.h ****   void chThdResumeI(thread_reference_t *trp, msg_t msg);
 248:../../../os/rt/include/chthreads.h ****   void chThdResumeS(thread_reference_t *trp, msg_t msg);
 249:../../../os/rt/include/chthreads.h ****   void chThdResume(thread_reference_t *trp, msg_t msg);
 250:../../../os/rt/include/chthreads.h ****   msg_t chThdEnqueueTimeoutS(threads_queue_t *tqp, sysinterval_t timeout);
 251:../../../os/rt/include/chthreads.h ****   void chThdDequeueNextI(threads_queue_t *tqp, msg_t msg);
 252:../../../os/rt/include/chthreads.h ****   void chThdDequeueAllI(threads_queue_t *tqp, msg_t msg);
 253:../../../os/rt/include/chthreads.h ****   void chThdSleep(sysinterval_t time);
 254:../../../os/rt/include/chthreads.h ****   void chThdSleepUntil(systime_t time);
 255:../../../os/rt/include/chthreads.h ****   systime_t chThdSleepUntilWindowed(systime_t prev, systime_t next);
 256:../../../os/rt/include/chthreads.h ****   void chThdYield(void);
 257:../../../os/rt/include/chthreads.h **** #ifdef __cplusplus
 258:../../../os/rt/include/chthreads.h **** }
 259:../../../os/rt/include/chthreads.h **** #endif
 260:../../../os/rt/include/chthreads.h **** 
 261:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
 262:../../../os/rt/include/chthreads.h **** /* Module inline functions.                                                  */
 263:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
 264:../../../os/rt/include/chthreads.h **** 
 265:../../../os/rt/include/chthreads.h ****  /**
 266:../../../os/rt/include/chthreads.h ****   * @brief   Returns a pointer to the current @p thread_t.
 267:../../../os/rt/include/chthreads.h ****   *
 268:../../../os/rt/include/chthreads.h ****   * @return             A pointer to the current thread.
 269:../../../os/rt/include/chthreads.h ****   *
 270:../../../os/rt/include/chthreads.h ****   * @xclass
 271:../../../os/rt/include/chthreads.h ****   */
 272:../../../os/rt/include/chthreads.h **** static inline thread_t *chThdGetSelfX(void) {
 273:../../../os/rt/include/chthreads.h **** 
 274:../../../os/rt/include/chthreads.h ****   return ch.rlist.current;
 275:../../../os/rt/include/chthreads.h **** }
 276:../../../os/rt/include/chthreads.h **** 
 277:../../../os/rt/include/chthreads.h **** /**
 278:../../../os/rt/include/chthreads.h ****  * @brief   Returns the current thread priority.
 279:../../../os/rt/include/chthreads.h ****  * @note    Can be invoked in any context.
 280:../../../os/rt/include/chthreads.h ****  *
 281:../../../os/rt/include/chthreads.h ****  * @return              The current thread priority.
 282:../../../os/rt/include/chthreads.h ****  *
 283:../../../os/rt/include/chthreads.h ****  * @xclass
 284:../../../os/rt/include/chthreads.h ****  */
 285:../../../os/rt/include/chthreads.h **** static inline tprio_t chThdGetPriorityX(void) {
 286:../../../os/rt/include/chthreads.h **** 
 287:../../../os/rt/include/chthreads.h ****   return chThdGetSelfX()->prio;
 288:../../../os/rt/include/chthreads.h **** }
 289:../../../os/rt/include/chthreads.h **** 
 290:../../../os/rt/include/chthreads.h **** /**
 291:../../../os/rt/include/chthreads.h ****  * @brief   Returns the number of ticks consumed by the specified thread.
 292:../../../os/rt/include/chthreads.h ****  * @note    This function is only available when the
 293:../../../os/rt/include/chthreads.h ****  *          @p CH_DBG_THREADS_PROFILING configuration option is enabled.
 294:../../../os/rt/include/chthreads.h ****  *
 295:../../../os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 296:../../../os/rt/include/chthreads.h ****  * @return              The number of consumed system ticks.
 297:../../../os/rt/include/chthreads.h ****  *
 298:../../../os/rt/include/chthreads.h ****  * @xclass
 299:../../../os/rt/include/chthreads.h ****  */
 300:../../../os/rt/include/chthreads.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 301:../../../os/rt/include/chthreads.h **** static inline systime_t chThdGetTicksX(thread_t *tp) {
 302:../../../os/rt/include/chthreads.h **** 
 303:../../../os/rt/include/chthreads.h ****   return tp->time;
 304:../../../os/rt/include/chthreads.h **** }
 305:../../../os/rt/include/chthreads.h **** #endif
 306:../../../os/rt/include/chthreads.h **** 
 307:../../../os/rt/include/chthreads.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 308:../../../os/rt/include/chthreads.h ****     defined(__DOXYGEN__)
 309:../../../os/rt/include/chthreads.h **** /**
 310:../../../os/rt/include/chthreads.h ****  * @brief   Returns the working area base of the specified thread.
 311:../../../os/rt/include/chthreads.h ****  *
 312:../../../os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 313:../../../os/rt/include/chthreads.h ****  * @return              The working area base pointer.
 314:../../../os/rt/include/chthreads.h ****  *
 315:../../../os/rt/include/chthreads.h ****  * @xclass
 316:../../../os/rt/include/chthreads.h ****  */
 317:../../../os/rt/include/chthreads.h **** static inline stkalign_t *chThdGetWorkingAreaX(thread_t *tp) {
 318:../../../os/rt/include/chthreads.h **** 
 319:../../../os/rt/include/chthreads.h ****   return tp->wabase;
 320:../../../os/rt/include/chthreads.h **** }
 321:../../../os/rt/include/chthreads.h **** #endif /* CH_DBG_ENABLE_STACK_CHECK == TRUE */
 322:../../../os/rt/include/chthreads.h **** 
 323:../../../os/rt/include/chthreads.h **** /**
 324:../../../os/rt/include/chthreads.h ****  * @brief   Verifies if the specified thread is in the @p CH_STATE_FINAL state.
 325:../../../os/rt/include/chthreads.h ****  *
 326:../../../os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 327:../../../os/rt/include/chthreads.h ****  * @retval true         thread terminated.
 328:../../../os/rt/include/chthreads.h ****  * @retval false        thread not terminated.
 329:../../../os/rt/include/chthreads.h ****  *
 330:../../../os/rt/include/chthreads.h ****  * @xclass
 331:../../../os/rt/include/chthreads.h ****  */
 332:../../../os/rt/include/chthreads.h **** static inline bool chThdTerminatedX(thread_t *tp) {
 333:../../../os/rt/include/chthreads.h **** 
 334:../../../os/rt/include/chthreads.h ****   return (bool)(tp->state == CH_STATE_FINAL);
 335:../../../os/rt/include/chthreads.h **** }
 336:../../../os/rt/include/chthreads.h **** 
 337:../../../os/rt/include/chthreads.h **** /**
 338:../../../os/rt/include/chthreads.h ****  * @brief   Verifies if the current thread has a termination request pending.
 339:../../../os/rt/include/chthreads.h ****  *
 340:../../../os/rt/include/chthreads.h ****  * @retval true         termination request pending.
 341:../../../os/rt/include/chthreads.h ****  * @retval false        termination request not pending.
 342:../../../os/rt/include/chthreads.h ****  *
 343:../../../os/rt/include/chthreads.h ****  * @xclass
 344:../../../os/rt/include/chthreads.h ****  */
 345:../../../os/rt/include/chthreads.h **** static inline bool chThdShouldTerminateX(void) {
 346:../../../os/rt/include/chthreads.h **** 
 347:../../../os/rt/include/chthreads.h ****   return (bool)((chThdGetSelfX()->flags & CH_FLAG_TERMINATE) != (tmode_t)0);
 348:../../../os/rt/include/chthreads.h **** }
 349:../../../os/rt/include/chthreads.h **** 
 350:../../../os/rt/include/chthreads.h **** /**
 351:../../../os/rt/include/chthreads.h ****  * @brief   Resumes a thread created with @p chThdCreateI().
 352:../../../os/rt/include/chthreads.h ****  *
 353:../../../os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 354:../../../os/rt/include/chthreads.h ****  * @return              The pointer to the @p thread_t structure allocated for
 355:../../../os/rt/include/chthreads.h ****  *                      the thread into the working space area.
 356:../../../os/rt/include/chthreads.h ****  *
 357:../../../os/rt/include/chthreads.h ****  * @iclass
 358:../../../os/rt/include/chthreads.h ****  */
 359:../../../os/rt/include/chthreads.h **** static inline thread_t *chThdStartI(thread_t *tp) {
 360:../../../os/rt/include/chthreads.h **** 
 361:../../../os/rt/include/chthreads.h ****   chDbgAssert(tp->state == CH_STATE_WTSTART, "wrong state");
 362:../../../os/rt/include/chthreads.h **** 
 363:../../../os/rt/include/chthreads.h ****   return chSchReadyI(tp);
 364:../../../os/rt/include/chthreads.h **** }
 365:../../../os/rt/include/chthreads.h **** 
 366:../../../os/rt/include/chthreads.h **** /**
 367:../../../os/rt/include/chthreads.h ****  * @brief   Suspends the invoking thread for the specified number of ticks.
 368:../../../os/rt/include/chthreads.h ****  *
 369:../../../os/rt/include/chthreads.h ****  * @param[in] ticks     the delay in system ticks, the special values are
 370:../../../os/rt/include/chthreads.h ****  *                      handled as follow:
 371:../../../os/rt/include/chthreads.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 372:../../../os/rt/include/chthreads.h ****  *                        state.
 373:../../../os/rt/include/chthreads.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 374:../../../os/rt/include/chthreads.h ****  *                      .
 375:../../../os/rt/include/chthreads.h ****  *
 376:../../../os/rt/include/chthreads.h ****  * @sclass
 377:../../../os/rt/include/chthreads.h ****  */
 378:../../../os/rt/include/chthreads.h **** static inline void chThdSleepS(sysinterval_t ticks) {
 379:../../../os/rt/include/chthreads.h **** 
 380:../../../os/rt/include/chthreads.h ****   chDbgCheck(ticks != TIME_IMMEDIATE);
 381:../../../os/rt/include/chthreads.h **** 
 382:../../../os/rt/include/chthreads.h ****   (void) chSchGoSleepTimeoutS(CH_STATE_SLEEPING, ticks);
 383:../../../os/rt/include/chthreads.h **** }
 384:../../../os/rt/include/chthreads.h **** 
 385:../../../os/rt/include/chthreads.h **** /**
 386:../../../os/rt/include/chthreads.h ****  * @brief   Initializes a threads queue object.
 387:../../../os/rt/include/chthreads.h ****  *
 388:../../../os/rt/include/chthreads.h ****  * @param[out] tqp      pointer to the threads queue object
 389:../../../os/rt/include/chthreads.h ****  *
 390:../../../os/rt/include/chthreads.h ****  * @init
 391:../../../os/rt/include/chthreads.h ****  */
 392:../../../os/rt/include/chthreads.h **** static inline void chThdQueueObjectInit(threads_queue_t *tqp) {
 427               		.loc 3 392 20 view .LVU85
 428               	.LBE132:
 429               	.LBE136:
 393:../../../os/rt/include/chthreads.h **** 
 394:../../../os/rt/include/chthreads.h ****   queue_init(tqp);
 430               		.loc 3 394 3 view .LVU86
 431               	.LBB137:
 432               	.LBB135:
 433               	.LBB133:
 434               	.LBI133:
 435               		.file 4 "../../../os/rt/include/chschd.h"
   1:../../../os/rt/include/chschd.h **** /*
   2:../../../os/rt/include/chschd.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/rt/include/chschd.h **** 
   4:../../../os/rt/include/chschd.h ****     This file is part of ChibiOS.
   5:../../../os/rt/include/chschd.h **** 
   6:../../../os/rt/include/chschd.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/rt/include/chschd.h ****     it under the terms of the GNU General Public License as published by
   8:../../../os/rt/include/chschd.h ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/rt/include/chschd.h ****     (at your option) any later version.
  10:../../../os/rt/include/chschd.h **** 
  11:../../../os/rt/include/chschd.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/rt/include/chschd.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/rt/include/chschd.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/rt/include/chschd.h ****     GNU General Public License for more details.
  15:../../../os/rt/include/chschd.h **** 
  16:../../../os/rt/include/chschd.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/rt/include/chschd.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/rt/include/chschd.h **** */
  19:../../../os/rt/include/chschd.h **** 
  20:../../../os/rt/include/chschd.h **** /**
  21:../../../os/rt/include/chschd.h ****  * @file    chschd.h
  22:../../../os/rt/include/chschd.h ****  * @brief   Scheduler macros and structures.
  23:../../../os/rt/include/chschd.h ****  *
  24:../../../os/rt/include/chschd.h ****  * @addtogroup scheduler
  25:../../../os/rt/include/chschd.h ****  * @{
  26:../../../os/rt/include/chschd.h ****  */
  27:../../../os/rt/include/chschd.h **** 
  28:../../../os/rt/include/chschd.h **** #ifndef CHSCHD_H
  29:../../../os/rt/include/chschd.h **** #define CHSCHD_H
  30:../../../os/rt/include/chschd.h **** 
  31:../../../os/rt/include/chschd.h **** /*===========================================================================*/
  32:../../../os/rt/include/chschd.h **** /* Module constants.                                                         */
  33:../../../os/rt/include/chschd.h **** /*===========================================================================*/
  34:../../../os/rt/include/chschd.h **** 
  35:../../../os/rt/include/chschd.h **** /**
  36:../../../os/rt/include/chschd.h ****  * @name    Wakeup status codes
  37:../../../os/rt/include/chschd.h ****  * @{
  38:../../../os/rt/include/chschd.h ****  */
  39:../../../os/rt/include/chschd.h **** #define MSG_OK              (msg_t)0    /**< @brief Normal wakeup message.  */
  40:../../../os/rt/include/chschd.h **** #define MSG_TIMEOUT         (msg_t)-1   /**< @brief Wakeup caused by a timeout
  41:../../../os/rt/include/chschd.h ****                                              condition.                     */
  42:../../../os/rt/include/chschd.h **** #define MSG_RESET           (msg_t)-2   /**< @brief Wakeup caused by a reset
  43:../../../os/rt/include/chschd.h ****                                              condition.                     */
  44:../../../os/rt/include/chschd.h **** /** @} */
  45:../../../os/rt/include/chschd.h **** 
  46:../../../os/rt/include/chschd.h **** /**
  47:../../../os/rt/include/chschd.h ****  * @name    Priority constants
  48:../../../os/rt/include/chschd.h ****  * @{
  49:../../../os/rt/include/chschd.h ****  */
  50:../../../os/rt/include/chschd.h **** #define NOPRIO              (tprio_t)0      /**< @brief Ready list header
  51:../../../os/rt/include/chschd.h ****                                                  priority.                  */
  52:../../../os/rt/include/chschd.h **** #define IDLEPRIO            (tprio_t)1      /**< @brief Idle priority.      */
  53:../../../os/rt/include/chschd.h **** #define LOWPRIO             (tprio_t)2      /**< @brief Lowest priority.    */
  54:../../../os/rt/include/chschd.h **** #define NORMALPRIO          (tprio_t)128    /**< @brief Normal priority.    */
  55:../../../os/rt/include/chschd.h **** #define HIGHPRIO            (tprio_t)255    /**< @brief Highest priority.   */
  56:../../../os/rt/include/chschd.h **** /** @} */
  57:../../../os/rt/include/chschd.h **** 
  58:../../../os/rt/include/chschd.h **** /**
  59:../../../os/rt/include/chschd.h ****  * @name    Thread states
  60:../../../os/rt/include/chschd.h ****  * @{
  61:../../../os/rt/include/chschd.h ****  */
  62:../../../os/rt/include/chschd.h **** #define CH_STATE_READY      (tstate_t)0      /**< @brief Waiting on the
  63:../../../os/rt/include/chschd.h ****                                                   ready list.               */
  64:../../../os/rt/include/chschd.h **** #define CH_STATE_CURRENT    (tstate_t)1      /**< @brief Currently running. */
  65:../../../os/rt/include/chschd.h **** #define CH_STATE_WTSTART    (tstate_t)2      /**< @brief Just created.      */
  66:../../../os/rt/include/chschd.h **** #define CH_STATE_SUSPENDED  (tstate_t)3      /**< @brief Suspended state.   */
  67:../../../os/rt/include/chschd.h **** #define CH_STATE_QUEUED     (tstate_t)4      /**< @brief On an I/O queue.   */
  68:../../../os/rt/include/chschd.h **** #define CH_STATE_WTSEM      (tstate_t)5      /**< @brief On a semaphore.    */
  69:../../../os/rt/include/chschd.h **** #define CH_STATE_WTMTX      (tstate_t)6      /**< @brief On a mutex.        */
  70:../../../os/rt/include/chschd.h **** #define CH_STATE_WTCOND     (tstate_t)7      /**< @brief On a cond.variable.*/
  71:../../../os/rt/include/chschd.h **** #define CH_STATE_SLEEPING   (tstate_t)8      /**< @brief Sleeping.          */
  72:../../../os/rt/include/chschd.h **** #define CH_STATE_WTEXIT     (tstate_t)9      /**< @brief Waiting a thread.  */
  73:../../../os/rt/include/chschd.h **** #define CH_STATE_WTOREVT    (tstate_t)10     /**< @brief One event.         */
  74:../../../os/rt/include/chschd.h **** #define CH_STATE_WTANDEVT   (tstate_t)11     /**< @brief Several events.    */
  75:../../../os/rt/include/chschd.h **** #define CH_STATE_SNDMSGQ    (tstate_t)12     /**< @brief Sending a message,
  76:../../../os/rt/include/chschd.h ****                                                   in queue.                 */
  77:../../../os/rt/include/chschd.h **** #define CH_STATE_SNDMSG     (tstate_t)13     /**< @brief Sent a message,
  78:../../../os/rt/include/chschd.h ****                                                   waiting answer.           */
  79:../../../os/rt/include/chschd.h **** #define CH_STATE_WTMSG      (tstate_t)14     /**< @brief Waiting for a
  80:../../../os/rt/include/chschd.h ****                                                   message.                  */
  81:../../../os/rt/include/chschd.h **** #define CH_STATE_FINAL      (tstate_t)15     /**< @brief Thread terminated. */
  82:../../../os/rt/include/chschd.h **** 
  83:../../../os/rt/include/chschd.h **** /**
  84:../../../os/rt/include/chschd.h ****  * @brief   Thread states as array of strings.
  85:../../../os/rt/include/chschd.h ****  * @details Each element in an array initialized with this macro can be
  86:../../../os/rt/include/chschd.h ****  *          indexed using the numeric thread state values.
  87:../../../os/rt/include/chschd.h ****  */
  88:../../../os/rt/include/chschd.h **** #define CH_STATE_NAMES                                                     \
  89:../../../os/rt/include/chschd.h ****   "READY", "CURRENT", "WTSTART", "SUSPENDED", "QUEUED", "WTSEM", "WTMTX",  \
  90:../../../os/rt/include/chschd.h ****   "WTCOND", "SLEEPING", "WTEXIT", "WTOREVT", "WTANDEVT", "SNDMSGQ",        \
  91:../../../os/rt/include/chschd.h ****   "SNDMSG", "WTMSG", "FINAL"
  92:../../../os/rt/include/chschd.h **** /** @} */
  93:../../../os/rt/include/chschd.h **** 
  94:../../../os/rt/include/chschd.h **** /**
  95:../../../os/rt/include/chschd.h ****  * @name    Thread flags and attributes
  96:../../../os/rt/include/chschd.h ****  * @{
  97:../../../os/rt/include/chschd.h ****  */
  98:../../../os/rt/include/chschd.h **** #define CH_FLAG_MODE_MASK   (tmode_t)3U     /**< @brief Thread memory mode
  99:../../../os/rt/include/chschd.h ****                                                  mask.                      */
 100:../../../os/rt/include/chschd.h **** #define CH_FLAG_MODE_STATIC (tmode_t)0U     /**< @brief Static thread.      */
 101:../../../os/rt/include/chschd.h **** #define CH_FLAG_MODE_HEAP   (tmode_t)1U     /**< @brief Thread allocated
 102:../../../os/rt/include/chschd.h ****                                                  from a Memory Heap.        */
 103:../../../os/rt/include/chschd.h **** #define CH_FLAG_MODE_MPOOL  (tmode_t)2U     /**< @brief Thread allocated
 104:../../../os/rt/include/chschd.h ****                                                  from a Memory Pool.        */
 105:../../../os/rt/include/chschd.h **** #define CH_FLAG_TERMINATE   (tmode_t)4U     /**< @brief Termination requested
 106:../../../os/rt/include/chschd.h ****                                                  flag.                      */
 107:../../../os/rt/include/chschd.h **** /** @} */
 108:../../../os/rt/include/chschd.h **** 
 109:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 110:../../../os/rt/include/chschd.h **** /* Module pre-compile time settings.                                         */
 111:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 112:../../../os/rt/include/chschd.h **** 
 113:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 114:../../../os/rt/include/chschd.h **** /* Derived constants and error checks.                                       */
 115:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 116:../../../os/rt/include/chschd.h **** 
 117:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 118:../../../os/rt/include/chschd.h **** /* Module data structures and types.                                         */
 119:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 120:../../../os/rt/include/chschd.h **** 
 121:../../../os/rt/include/chschd.h **** /**
 122:../../../os/rt/include/chschd.h ****  * @brief   Generic threads single link list, it works like a stack.
 123:../../../os/rt/include/chschd.h ****  */
 124:../../../os/rt/include/chschd.h **** struct ch_threads_list {
 125:../../../os/rt/include/chschd.h ****   thread_t              *next;      /**< @brief Next in the list/queue.     */
 126:../../../os/rt/include/chschd.h **** };
 127:../../../os/rt/include/chschd.h **** 
 128:../../../os/rt/include/chschd.h **** /**
 129:../../../os/rt/include/chschd.h ****  * @brief   Generic threads bidirectional linked list header and element.
 130:../../../os/rt/include/chschd.h ****  */
 131:../../../os/rt/include/chschd.h **** struct ch_threads_queue {
 132:../../../os/rt/include/chschd.h ****   thread_t              *next;      /**< @brief Next in the list/queue.     */
 133:../../../os/rt/include/chschd.h ****   thread_t              *prev;      /**< @brief Previous in the queue.      */
 134:../../../os/rt/include/chschd.h **** };
 135:../../../os/rt/include/chschd.h **** 
 136:../../../os/rt/include/chschd.h **** /**
 137:../../../os/rt/include/chschd.h ****  * @brief   Structure representing a thread.
 138:../../../os/rt/include/chschd.h ****  * @note    Not all the listed fields are always needed, by switching off some
 139:../../../os/rt/include/chschd.h ****  *          not needed ChibiOS/RT subsystems it is possible to save RAM space
 140:../../../os/rt/include/chschd.h ****  *          by shrinking this structure.
 141:../../../os/rt/include/chschd.h ****  */
 142:../../../os/rt/include/chschd.h **** struct ch_thread {
 143:../../../os/rt/include/chschd.h ****   threads_queue_t       queue;      /**< @brief Threads queue header.       */
 144:../../../os/rt/include/chschd.h ****   tprio_t               prio;       /**< @brief Thread priority.            */
 145:../../../os/rt/include/chschd.h ****   struct port_context   ctx;        /**< @brief Processor context.          */
 146:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 147:../../../os/rt/include/chschd.h ****   thread_t              *newer;     /**< @brief Newer registry element.     */
 148:../../../os/rt/include/chschd.h ****   thread_t              *older;     /**< @brief Older registry element.     */
 149:../../../os/rt/include/chschd.h **** #endif
 150:../../../os/rt/include/chschd.h ****   /* End of the fields shared with the ReadyList structure. */
 151:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 152:../../../os/rt/include/chschd.h ****   /**
 153:../../../os/rt/include/chschd.h ****    * @brief   Thread name or @p NULL.
 154:../../../os/rt/include/chschd.h ****    */
 155:../../../os/rt/include/chschd.h ****   const char            *name;
 156:../../../os/rt/include/chschd.h **** #endif
 157:../../../os/rt/include/chschd.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 158:../../../os/rt/include/chschd.h ****     defined(__DOXYGEN__)
 159:../../../os/rt/include/chschd.h ****   /**
 160:../../../os/rt/include/chschd.h ****    * @brief   Working area base address.
 161:../../../os/rt/include/chschd.h ****    * @note    This pointer is used for stack overflow checks and for
 162:../../../os/rt/include/chschd.h ****    *          dynamic threading.
 163:../../../os/rt/include/chschd.h ****    */
 164:../../../os/rt/include/chschd.h ****   stkalign_t            *wabase;
 165:../../../os/rt/include/chschd.h **** #endif
 166:../../../os/rt/include/chschd.h ****   /**
 167:../../../os/rt/include/chschd.h ****    * @brief   Current thread state.
 168:../../../os/rt/include/chschd.h ****    */
 169:../../../os/rt/include/chschd.h ****   tstate_t              state;
 170:../../../os/rt/include/chschd.h ****   /**
 171:../../../os/rt/include/chschd.h ****    * @brief   Various thread flags.
 172:../../../os/rt/include/chschd.h ****    */
 173:../../../os/rt/include/chschd.h ****   tmode_t               flags;
 174:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 175:../../../os/rt/include/chschd.h ****   /**
 176:../../../os/rt/include/chschd.h ****    * @brief   References to this thread.
 177:../../../os/rt/include/chschd.h ****    */
 178:../../../os/rt/include/chschd.h ****   trefs_t               refs;
 179:../../../os/rt/include/chschd.h **** #endif
 180:../../../os/rt/include/chschd.h ****   /**
 181:../../../os/rt/include/chschd.h ****    * @brief   Number of ticks remaining to this thread.
 182:../../../os/rt/include/chschd.h ****    */
 183:../../../os/rt/include/chschd.h **** #if (CH_CFG_TIME_QUANTUM > 0) || defined(__DOXYGEN__)
 184:../../../os/rt/include/chschd.h ****   tslices_t             ticks;
 185:../../../os/rt/include/chschd.h **** #endif
 186:../../../os/rt/include/chschd.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 187:../../../os/rt/include/chschd.h ****   /**
 188:../../../os/rt/include/chschd.h ****    * @brief   Thread consumed time in ticks.
 189:../../../os/rt/include/chschd.h ****    * @note    This field can overflow.
 190:../../../os/rt/include/chschd.h ****    */
 191:../../../os/rt/include/chschd.h ****   volatile systime_t    time;
 192:../../../os/rt/include/chschd.h **** #endif
 193:../../../os/rt/include/chschd.h ****   /**
 194:../../../os/rt/include/chschd.h ****    * @brief   State-specific fields.
 195:../../../os/rt/include/chschd.h ****    * @note    All the fields declared in this union are only valid in the
 196:../../../os/rt/include/chschd.h ****    *          specified state or condition and are thus volatile.
 197:../../../os/rt/include/chschd.h ****    */
 198:../../../os/rt/include/chschd.h ****   union {
 199:../../../os/rt/include/chschd.h ****     /**
 200:../../../os/rt/include/chschd.h ****      * @brief   Thread wakeup code.
 201:../../../os/rt/include/chschd.h ****      * @note    This field contains the low level message sent to the thread
 202:../../../os/rt/include/chschd.h ****      *          by the waking thread or interrupt handler. The value is valid
 203:../../../os/rt/include/chschd.h ****      *          after exiting the @p chSchWakeupS() function.
 204:../../../os/rt/include/chschd.h ****      */
 205:../../../os/rt/include/chschd.h ****     msg_t               rdymsg;
 206:../../../os/rt/include/chschd.h ****     /**
 207:../../../os/rt/include/chschd.h ****      * @brief   Thread exit code.
 208:../../../os/rt/include/chschd.h ****      * @note    The thread termination code is stored in this field in order
 209:../../../os/rt/include/chschd.h ****      *          to be retrieved by the thread performing a @p chThdWait() on
 210:../../../os/rt/include/chschd.h ****      *          this thread.
 211:../../../os/rt/include/chschd.h ****      */
 212:../../../os/rt/include/chschd.h ****     msg_t               exitcode;
 213:../../../os/rt/include/chschd.h ****     /**
 214:../../../os/rt/include/chschd.h ****      * @brief   Pointer to a generic "wait" object.
 215:../../../os/rt/include/chschd.h ****      * @note    This field is used to get a generic pointer to a synchronization
 216:../../../os/rt/include/chschd.h ****      *          object and is valid when the thread is in one of the wait
 217:../../../os/rt/include/chschd.h ****      *          states.
 218:../../../os/rt/include/chschd.h ****      */
 219:../../../os/rt/include/chschd.h ****     void                *wtobjp;
 220:../../../os/rt/include/chschd.h ****     /**
 221:../../../os/rt/include/chschd.h ****      * @brief   Pointer to a generic thread reference object.
 222:../../../os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 223:../../../os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_SUSPENDED
 224:../../../os/rt/include/chschd.h ****      *          state.
 225:../../../os/rt/include/chschd.h ****      */
 226:../../../os/rt/include/chschd.h ****     thread_reference_t  *wttrp;
 227:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_MESSAGES == TRUE) || defined(__DOXYGEN__)
 228:../../../os/rt/include/chschd.h ****     /**
 229:../../../os/rt/include/chschd.h ****      * @brief   Thread sent message.
 230:../../../os/rt/include/chschd.h ****      */
 231:../../../os/rt/include/chschd.h ****     msg_t               sentmsg;
 232:../../../os/rt/include/chschd.h **** #endif
 233:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_SEMAPHORES == TRUE) || defined(__DOXYGEN__)
 234:../../../os/rt/include/chschd.h ****     /**
 235:../../../os/rt/include/chschd.h ****      * @brief   Pointer to a generic semaphore object.
 236:../../../os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 237:../../../os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_WTSEM
 238:../../../os/rt/include/chschd.h ****      *          state.
 239:../../../os/rt/include/chschd.h ****      */
 240:../../../os/rt/include/chschd.h ****     struct ch_semaphore *wtsemp;
 241:../../../os/rt/include/chschd.h **** #endif
 242:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
 243:../../../os/rt/include/chschd.h ****     /**
 244:../../../os/rt/include/chschd.h ****      * @brief   Pointer to a generic mutex object.
 245:../../../os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 246:../../../os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_WTMTX
 247:../../../os/rt/include/chschd.h ****      *          state.
 248:../../../os/rt/include/chschd.h ****      */
 249:../../../os/rt/include/chschd.h ****     struct ch_mutex     *wtmtxp;
 250:../../../os/rt/include/chschd.h **** #endif
 251:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 252:../../../os/rt/include/chschd.h ****     /**
 253:../../../os/rt/include/chschd.h ****      * @brief   Enabled events mask.
 254:../../../os/rt/include/chschd.h ****      * @note    This field is only valid while the thread is in the
 255:../../../os/rt/include/chschd.h ****      *          @p CH_STATE_WTOREVT or @p CH_STATE_WTANDEVT states.
 256:../../../os/rt/include/chschd.h ****      */
 257:../../../os/rt/include/chschd.h ****     eventmask_t         ewmask;
 258:../../../os/rt/include/chschd.h **** #endif
 259:../../../os/rt/include/chschd.h ****   }                     u;
 260:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_WAITEXIT == TRUE) || defined(__DOXYGEN__)
 261:../../../os/rt/include/chschd.h ****   /**
 262:../../../os/rt/include/chschd.h ****    * @brief   Termination waiting list.
 263:../../../os/rt/include/chschd.h ****    */
 264:../../../os/rt/include/chschd.h ****   threads_list_t        waiting;
 265:../../../os/rt/include/chschd.h **** #endif
 266:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_MESSAGES == TRUE) || defined(__DOXYGEN__)
 267:../../../os/rt/include/chschd.h ****   /**
 268:../../../os/rt/include/chschd.h ****    * @brief   Messages queue.
 269:../../../os/rt/include/chschd.h ****    */
 270:../../../os/rt/include/chschd.h ****   threads_queue_t       msgqueue;
 271:../../../os/rt/include/chschd.h **** #endif
 272:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 273:../../../os/rt/include/chschd.h ****   /**
 274:../../../os/rt/include/chschd.h ****    * @brief   Pending events mask.
 275:../../../os/rt/include/chschd.h ****    */
 276:../../../os/rt/include/chschd.h ****   eventmask_t           epending;
 277:../../../os/rt/include/chschd.h **** #endif
 278:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
 279:../../../os/rt/include/chschd.h ****   /**
 280:../../../os/rt/include/chschd.h ****    * @brief   List of the mutexes owned by this thread.
 281:../../../os/rt/include/chschd.h ****    * @note    The list is terminated by a @p NULL in this field.
 282:../../../os/rt/include/chschd.h ****    */
 283:../../../os/rt/include/chschd.h ****   struct ch_mutex       *mtxlist;
 284:../../../os/rt/include/chschd.h ****   /**
 285:../../../os/rt/include/chschd.h ****    * @brief   Thread's own, non-inherited, priority.
 286:../../../os/rt/include/chschd.h ****    */
 287:../../../os/rt/include/chschd.h ****   tprio_t               realprio;
 288:../../../os/rt/include/chschd.h **** #endif
 289:../../../os/rt/include/chschd.h **** #if ((CH_CFG_USE_DYNAMIC == TRUE) && (CH_CFG_USE_MEMPOOLS == TRUE)) ||      \
 290:../../../os/rt/include/chschd.h ****     defined(__DOXYGEN__)
 291:../../../os/rt/include/chschd.h ****   /**
 292:../../../os/rt/include/chschd.h ****    * @brief   Memory Pool where the thread workspace is returned.
 293:../../../os/rt/include/chschd.h ****    */
 294:../../../os/rt/include/chschd.h ****   void                  *mpool;
 295:../../../os/rt/include/chschd.h **** #endif
 296:../../../os/rt/include/chschd.h **** #if (CH_DBG_STATISTICS == TRUE) || defined(__DOXYGEN__)
 297:../../../os/rt/include/chschd.h ****   /**
 298:../../../os/rt/include/chschd.h ****    * @brief   Thread statistics.
 299:../../../os/rt/include/chschd.h ****    */
 300:../../../os/rt/include/chschd.h ****   time_measurement_t    stats;
 301:../../../os/rt/include/chschd.h **** #endif
 302:../../../os/rt/include/chschd.h **** #if defined(CH_CFG_THREAD_EXTRA_FIELDS)
 303:../../../os/rt/include/chschd.h ****   /* Extra fields defined in chconf.h.*/
 304:../../../os/rt/include/chschd.h ****   CH_CFG_THREAD_EXTRA_FIELDS
 305:../../../os/rt/include/chschd.h **** #endif
 306:../../../os/rt/include/chschd.h **** };
 307:../../../os/rt/include/chschd.h **** 
 308:../../../os/rt/include/chschd.h **** /**
 309:../../../os/rt/include/chschd.h ****  * @extends virtual_timers_list_t
 310:../../../os/rt/include/chschd.h ****  *
 311:../../../os/rt/include/chschd.h ****  * @brief   Virtual Timer descriptor structure.
 312:../../../os/rt/include/chschd.h ****  */
 313:../../../os/rt/include/chschd.h **** struct ch_virtual_timer {
 314:../../../os/rt/include/chschd.h ****   virtual_timer_t       *next;      /**< @brief Next timer in the list.     */
 315:../../../os/rt/include/chschd.h ****   virtual_timer_t       *prev;      /**< @brief Previous timer in the list. */
 316:../../../os/rt/include/chschd.h ****   sysinterval_t         delta;      /**< @brief Time delta before timeout.  */
 317:../../../os/rt/include/chschd.h ****   vtfunc_t              func;       /**< @brief Timer callback function
 318:../../../os/rt/include/chschd.h ****                                                 pointer.                    */
 319:../../../os/rt/include/chschd.h ****   void                  *par;       /**< @brief Timer callback function
 320:../../../os/rt/include/chschd.h ****                                                 parameter.                  */
 321:../../../os/rt/include/chschd.h **** };
 322:../../../os/rt/include/chschd.h **** 
 323:../../../os/rt/include/chschd.h **** /**
 324:../../../os/rt/include/chschd.h ****  * @brief   Virtual timers list header.
 325:../../../os/rt/include/chschd.h ****  * @note    The timers list is implemented as a double link bidirectional list
 326:../../../os/rt/include/chschd.h ****  *          in order to make the unlink time constant, the reset of a virtual
 327:../../../os/rt/include/chschd.h ****  *          timer is often used in the code.
 328:../../../os/rt/include/chschd.h ****  */
 329:../../../os/rt/include/chschd.h **** struct ch_virtual_timers_list {
 330:../../../os/rt/include/chschd.h ****   virtual_timer_t       *next;      /**< @brief Next timer in the delta
 331:../../../os/rt/include/chschd.h ****                                                 list.                       */
 332:../../../os/rt/include/chschd.h ****   virtual_timer_t       *prev;      /**< @brief Last timer in the delta
 333:../../../os/rt/include/chschd.h ****                                                 list.                       */
 334:../../../os/rt/include/chschd.h ****   sysinterval_t         delta;      /**< @brief Must be initialized to -1.  */
 335:../../../os/rt/include/chschd.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 336:../../../os/rt/include/chschd.h ****   volatile systime_t    systime;    /**< @brief System Time counter.        */
 337:../../../os/rt/include/chschd.h **** #endif
 338:../../../os/rt/include/chschd.h **** #if (CH_CFG_ST_TIMEDELTA > 0) || defined(__DOXYGEN__)
 339:../../../os/rt/include/chschd.h ****   /**
 340:../../../os/rt/include/chschd.h ****    * @brief   System time of the last tick event.
 341:../../../os/rt/include/chschd.h ****    */
 342:../../../os/rt/include/chschd.h ****   systime_t             lasttime;   /**< @brief System time of the last
 343:../../../os/rt/include/chschd.h ****                                                 tick event.                 */
 344:../../../os/rt/include/chschd.h **** #endif
 345:../../../os/rt/include/chschd.h **** };
 346:../../../os/rt/include/chschd.h **** 
 347:../../../os/rt/include/chschd.h **** /**
 348:../../../os/rt/include/chschd.h ****  * @extends threads_queue_t
 349:../../../os/rt/include/chschd.h ****  */
 350:../../../os/rt/include/chschd.h **** struct ch_ready_list {
 351:../../../os/rt/include/chschd.h ****   threads_queue_t       queue;      /**< @brief Threads queue.              */
 352:../../../os/rt/include/chschd.h ****   tprio_t               prio;       /**< @brief This field must be
 353:../../../os/rt/include/chschd.h ****                                                 initialized to zero.        */
 354:../../../os/rt/include/chschd.h ****   struct port_context   ctx;        /**< @brief Not used, present because
 355:../../../os/rt/include/chschd.h ****                                                 offsets.                    */
 356:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 357:../../../os/rt/include/chschd.h ****   thread_t              *newer;     /**< @brief Newer registry element.     */
 358:../../../os/rt/include/chschd.h ****   thread_t              *older;     /**< @brief Older registry element.     */
 359:../../../os/rt/include/chschd.h **** #endif
 360:../../../os/rt/include/chschd.h ****   /* End of the fields shared with the thread_t structure.*/
 361:../../../os/rt/include/chschd.h ****   thread_t              *current;   /**< @brief The currently running
 362:../../../os/rt/include/chschd.h ****                                                 thread.                     */
 363:../../../os/rt/include/chschd.h **** };
 364:../../../os/rt/include/chschd.h **** 
 365:../../../os/rt/include/chschd.h **** /**
 366:../../../os/rt/include/chschd.h ****  * @brief   System debug data structure.
 367:../../../os/rt/include/chschd.h ****  */
 368:../../../os/rt/include/chschd.h **** struct ch_system_debug {
 369:../../../os/rt/include/chschd.h ****   /**
 370:../../../os/rt/include/chschd.h ****    * @brief   Pointer to the panic message.
 371:../../../os/rt/include/chschd.h ****    * @details This pointer is meant to be accessed through the debugger, it is
 372:../../../os/rt/include/chschd.h ****    *          written once and then the system is halted.
 373:../../../os/rt/include/chschd.h ****    * @note    Accesses to this pointer must never be optimized out so the
 374:../../../os/rt/include/chschd.h ****    *          field itself is declared volatile.
 375:../../../os/rt/include/chschd.h ****    */
 376:../../../os/rt/include/chschd.h ****   const char            * volatile panic_msg;
 377:../../../os/rt/include/chschd.h **** #if (CH_DBG_SYSTEM_STATE_CHECK == TRUE) || defined(__DOXYGEN__)
 378:../../../os/rt/include/chschd.h ****   /**
 379:../../../os/rt/include/chschd.h ****    * @brief   ISR nesting level.
 380:../../../os/rt/include/chschd.h ****    */
 381:../../../os/rt/include/chschd.h ****   cnt_t                 isr_cnt;
 382:../../../os/rt/include/chschd.h ****   /**
 383:../../../os/rt/include/chschd.h ****    * @brief   Lock nesting level.
 384:../../../os/rt/include/chschd.h ****    */
 385:../../../os/rt/include/chschd.h ****   cnt_t                 lock_cnt;
 386:../../../os/rt/include/chschd.h **** #endif
 387:../../../os/rt/include/chschd.h **** #if (CH_DBG_TRACE_MASK != CH_DBG_TRACE_MASK_DISABLED) || defined(__DOXYGEN__)
 388:../../../os/rt/include/chschd.h ****   /**
 389:../../../os/rt/include/chschd.h ****    * @brief   Public trace buffer.
 390:../../../os/rt/include/chschd.h ****    */
 391:../../../os/rt/include/chschd.h ****   ch_trace_buffer_t     trace_buffer;
 392:../../../os/rt/include/chschd.h **** #endif
 393:../../../os/rt/include/chschd.h **** };
 394:../../../os/rt/include/chschd.h **** 
 395:../../../os/rt/include/chschd.h **** /**
 396:../../../os/rt/include/chschd.h ****  * @brief   System data structure.
 397:../../../os/rt/include/chschd.h ****  * @note    This structure contain all the data areas used by the OS except
 398:../../../os/rt/include/chschd.h ****  *          stacks.
 399:../../../os/rt/include/chschd.h ****  */
 400:../../../os/rt/include/chschd.h **** struct ch_system {
 401:../../../os/rt/include/chschd.h ****   /**
 402:../../../os/rt/include/chschd.h ****    * @brief   Ready list header.
 403:../../../os/rt/include/chschd.h ****    */
 404:../../../os/rt/include/chschd.h ****   ready_list_t          rlist;
 405:../../../os/rt/include/chschd.h ****   /**
 406:../../../os/rt/include/chschd.h ****    * @brief   Virtual timers delta list header.
 407:../../../os/rt/include/chschd.h ****    */
 408:../../../os/rt/include/chschd.h ****   virtual_timers_list_t vtlist;
 409:../../../os/rt/include/chschd.h ****   /**
 410:../../../os/rt/include/chschd.h ****    * @brief   System debug.
 411:../../../os/rt/include/chschd.h ****    */
 412:../../../os/rt/include/chschd.h ****   system_debug_t        dbg;
 413:../../../os/rt/include/chschd.h ****   /**
 414:../../../os/rt/include/chschd.h ****    * @brief   Main thread descriptor.
 415:../../../os/rt/include/chschd.h ****    */
 416:../../../os/rt/include/chschd.h ****   thread_t              mainthread;
 417:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_TM == TRUE) || defined(__DOXYGEN__)
 418:../../../os/rt/include/chschd.h ****   /**
 419:../../../os/rt/include/chschd.h ****    * @brief   Time measurement calibration data.
 420:../../../os/rt/include/chschd.h ****    */
 421:../../../os/rt/include/chschd.h ****   tm_calibration_t      tm;
 422:../../../os/rt/include/chschd.h **** #endif
 423:../../../os/rt/include/chschd.h **** #if (CH_DBG_STATISTICS == TRUE) || defined(__DOXYGEN__)
 424:../../../os/rt/include/chschd.h ****   /**
 425:../../../os/rt/include/chschd.h ****    * @brief   Global kernel statistics.
 426:../../../os/rt/include/chschd.h ****    */
 427:../../../os/rt/include/chschd.h ****   kernel_stats_t        kernel_stats;
 428:../../../os/rt/include/chschd.h **** #endif
 429:../../../os/rt/include/chschd.h ****   CH_CFG_SYSTEM_EXTRA_FIELDS
 430:../../../os/rt/include/chschd.h **** };
 431:../../../os/rt/include/chschd.h **** 
 432:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 433:../../../os/rt/include/chschd.h **** /* Module macros.                                                            */
 434:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 435:../../../os/rt/include/chschd.h **** 
 436:../../../os/rt/include/chschd.h **** /**
 437:../../../os/rt/include/chschd.h ****  * @brief   Returns the priority of the first thread on the given ready list.
 438:../../../os/rt/include/chschd.h ****  *
 439:../../../os/rt/include/chschd.h ****  * @notapi
 440:../../../os/rt/include/chschd.h ****  */
 441:../../../os/rt/include/chschd.h **** #define firstprio(rlp)  ((rlp)->next->prio)
 442:../../../os/rt/include/chschd.h **** 
 443:../../../os/rt/include/chschd.h **** /**
 444:../../../os/rt/include/chschd.h ****  * @brief   Current thread pointer access macro.
 445:../../../os/rt/include/chschd.h ****  * @note    This macro is not meant to be used in the application code but
 446:../../../os/rt/include/chschd.h ****  *          only from within the kernel, use @p chThdGetSelfX() instead.
 447:../../../os/rt/include/chschd.h ****  */
 448:../../../os/rt/include/chschd.h **** #define currp ch.rlist.current
 449:../../../os/rt/include/chschd.h **** 
 450:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 451:../../../os/rt/include/chschd.h **** /* External declarations.                                                    */
 452:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 453:../../../os/rt/include/chschd.h **** 
 454:../../../os/rt/include/chschd.h **** #if !defined(__DOXYGEN__)
 455:../../../os/rt/include/chschd.h **** extern ch_system_t ch;
 456:../../../os/rt/include/chschd.h **** #endif
 457:../../../os/rt/include/chschd.h **** 
 458:../../../os/rt/include/chschd.h **** /*
 459:../../../os/rt/include/chschd.h ****  * Scheduler APIs.
 460:../../../os/rt/include/chschd.h ****  */
 461:../../../os/rt/include/chschd.h **** #ifdef __cplusplus
 462:../../../os/rt/include/chschd.h **** extern "C" {
 463:../../../os/rt/include/chschd.h **** #endif
 464:../../../os/rt/include/chschd.h ****   void _scheduler_init(void);
 465:../../../os/rt/include/chschd.h ****   thread_t *chSchReadyI(thread_t *tp);
 466:../../../os/rt/include/chschd.h ****   thread_t *chSchReadyAheadI(thread_t *tp);
 467:../../../os/rt/include/chschd.h ****   void chSchGoSleepS(tstate_t newstate);
 468:../../../os/rt/include/chschd.h ****   msg_t chSchGoSleepTimeoutS(tstate_t newstate, sysinterval_t timeout);
 469:../../../os/rt/include/chschd.h ****   void chSchWakeupS(thread_t *ntp, msg_t msg);
 470:../../../os/rt/include/chschd.h ****   void chSchRescheduleS(void);
 471:../../../os/rt/include/chschd.h ****   bool chSchIsPreemptionRequired(void);
 472:../../../os/rt/include/chschd.h ****   void chSchDoRescheduleBehind(void);
 473:../../../os/rt/include/chschd.h ****   void chSchDoRescheduleAhead(void);
 474:../../../os/rt/include/chschd.h ****   void chSchDoReschedule(void);
 475:../../../os/rt/include/chschd.h **** #if CH_CFG_OPTIMIZE_SPEED == FALSE
 476:../../../os/rt/include/chschd.h ****   void queue_prio_insert(thread_t *tp, threads_queue_t *tqp);
 477:../../../os/rt/include/chschd.h ****   void queue_insert(thread_t *tp, threads_queue_t *tqp);
 478:../../../os/rt/include/chschd.h ****   thread_t *queue_fifo_remove(threads_queue_t *tqp);
 479:../../../os/rt/include/chschd.h ****   thread_t *queue_lifo_remove(threads_queue_t *tqp);
 480:../../../os/rt/include/chschd.h ****   thread_t *queue_dequeue(thread_t *tp);
 481:../../../os/rt/include/chschd.h ****   void list_insert(thread_t *tp, threads_list_t *tlp);
 482:../../../os/rt/include/chschd.h ****   thread_t *list_remove(threads_list_t *tlp);
 483:../../../os/rt/include/chschd.h **** #endif /* CH_CFG_OPTIMIZE_SPEED == FALSE */
 484:../../../os/rt/include/chschd.h **** #ifdef __cplusplus
 485:../../../os/rt/include/chschd.h **** }
 486:../../../os/rt/include/chschd.h **** #endif
 487:../../../os/rt/include/chschd.h **** 
 488:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 489:../../../os/rt/include/chschd.h **** /* Module inline functions.                                                  */
 490:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 491:../../../os/rt/include/chschd.h **** 
 492:../../../os/rt/include/chschd.h **** /**
 493:../../../os/rt/include/chschd.h ****  * @brief   Threads list initialization.
 494:../../../os/rt/include/chschd.h ****  *
 495:../../../os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 496:../../../os/rt/include/chschd.h ****  *
 497:../../../os/rt/include/chschd.h ****  * @notapi
 498:../../../os/rt/include/chschd.h ****  */
 499:../../../os/rt/include/chschd.h **** static inline void list_init(threads_list_t *tlp) {
 500:../../../os/rt/include/chschd.h **** 
 501:../../../os/rt/include/chschd.h ****   tlp->next = (thread_t *)tlp;
 502:../../../os/rt/include/chschd.h **** }
 503:../../../os/rt/include/chschd.h **** 
 504:../../../os/rt/include/chschd.h **** /**
 505:../../../os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads list is empty.
 506:../../../os/rt/include/chschd.h ****  *
 507:../../../os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 508:../../../os/rt/include/chschd.h ****  * @return              The status of the list.
 509:../../../os/rt/include/chschd.h ****  *
 510:../../../os/rt/include/chschd.h ****  * @notapi
 511:../../../os/rt/include/chschd.h ****  */
 512:../../../os/rt/include/chschd.h **** static inline bool list_isempty(threads_list_t *tlp) {
 513:../../../os/rt/include/chschd.h **** 
 514:../../../os/rt/include/chschd.h ****   return (bool)(tlp->next == (thread_t *)tlp);
 515:../../../os/rt/include/chschd.h **** }
 516:../../../os/rt/include/chschd.h **** 
 517:../../../os/rt/include/chschd.h **** /**
 518:../../../os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads list is not empty.
 519:../../../os/rt/include/chschd.h ****  *
 520:../../../os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 521:../../../os/rt/include/chschd.h ****  * @return              The status of the list.
 522:../../../os/rt/include/chschd.h ****  *
 523:../../../os/rt/include/chschd.h ****  * @notapi
 524:../../../os/rt/include/chschd.h ****  */
 525:../../../os/rt/include/chschd.h **** static inline bool list_notempty(threads_list_t *tlp) {
 526:../../../os/rt/include/chschd.h **** 
 527:../../../os/rt/include/chschd.h ****   return (bool)(tlp->next != (thread_t *)tlp);
 528:../../../os/rt/include/chschd.h **** }
 529:../../../os/rt/include/chschd.h **** 
 530:../../../os/rt/include/chschd.h **** /**
 531:../../../os/rt/include/chschd.h ****  * @brief   Threads queue initialization.
 532:../../../os/rt/include/chschd.h ****  *
 533:../../../os/rt/include/chschd.h ****  * @param[in] tqp       pointer to the threads queue object
 534:../../../os/rt/include/chschd.h ****  *
 535:../../../os/rt/include/chschd.h ****  * @notapi
 536:../../../os/rt/include/chschd.h ****  */
 537:../../../os/rt/include/chschd.h **** static inline void queue_init(threads_queue_t *tqp) {
 436               		.loc 4 537 20 view .LVU87
 437               	.LBB134:
 538:../../../os/rt/include/chschd.h **** 
 539:../../../os/rt/include/chschd.h ****   tqp->next = (thread_t *)tqp;
 438               		.loc 4 539 3 view .LVU88
 439               		.loc 4 539 13 is_stmt 0 view .LVU89
 440 0006 9183      		std Z+1,r25
 441 0008 8083      		st Z,r24
 540:../../../os/rt/include/chschd.h ****   tqp->prev = (thread_t *)tqp;
 442               		.loc 4 540 3 is_stmt 1 view .LVU90
 443               		.loc 4 540 13 is_stmt 0 view .LVU91
 444 000a 9383      		std Z+3,r25
 445 000c 8283      		std Z+2,r24
 446               	.LVL36:
 447               		.loc 4 540 13 view .LVU92
 448               	.LBE134:
 449               	.LBE133:
 450               	.LBE135:
 451               	.LBE137:
 181:../../../os/hal/src/hal_queues.c ****   iqp->q_counter = 0;
 452               		.loc 1 181 3 is_stmt 1 view .LVU93
 453               		.loc 1 181 18 is_stmt 0 view .LVU94
 454 000e 1582      		std Z+5,__zero_reg__
 455 0010 1482      		std Z+4,__zero_reg__
 182:../../../os/hal/src/hal_queues.c ****   iqp->q_buffer  = bp;
 456               		.loc 1 182 3 is_stmt 1 view .LVU95
 457               		.loc 1 182 18 is_stmt 0 view .LVU96
 458 0012 7783      		std Z+7,r23
 459 0014 6683      		std Z+6,r22
 183:../../../os/hal/src/hal_queues.c ****   iqp->q_rdptr   = bp;
 460               		.loc 1 183 3 is_stmt 1 view .LVU97
 461               		.loc 1 183 18 is_stmt 0 view .LVU98
 462 0016 7587      		std Z+13,r23
 463 0018 6487      		std Z+12,r22
 184:../../../os/hal/src/hal_queues.c ****   iqp->q_wrptr   = bp;
 464               		.loc 1 184 3 is_stmt 1 view .LVU99
 465               		.loc 1 184 18 is_stmt 0 view .LVU100
 466 001a 7387      		std Z+11,r23
 467 001c 6287      		std Z+10,r22
 185:../../../os/hal/src/hal_queues.c ****   iqp->q_top     = bp + size;
 468               		.loc 1 185 3 is_stmt 1 view .LVU101
 469               		.loc 1 185 23 is_stmt 0 view .LVU102
 470 001e 640F      		add r22,r20
 471 0020 751F      		adc r23,r21
 472               	.LVL37:
 473               		.loc 1 185 18 view .LVU103
 474 0022 7187      		std Z+9,r23
 475 0024 6087      		std Z+8,r22
 186:../../../os/hal/src/hal_queues.c ****   iqp->q_notify  = infy;
 476               		.loc 1 186 3 is_stmt 1 view .LVU104
 477               		.loc 1 186 18 is_stmt 0 view .LVU105
 478 0026 3787      		std Z+15,r19
 479 0028 2687      		std Z+14,r18
 187:../../../os/hal/src/hal_queues.c ****   iqp->q_link    = link;
 480               		.loc 1 187 3 is_stmt 1 view .LVU106
 481               		.loc 1 187 18 is_stmt 0 view .LVU107
 482 002a 118B      		std Z+17,r17
 483 002c 008B      		std Z+16,r16
 484               	/* epilogue start */
 188:../../../os/hal/src/hal_queues.c **** }
 485               		.loc 1 188 1 view .LVU108
 486 002e 1F91      		pop r17
 487 0030 0F91      		pop r16
 488               	.LVL38:
 489               		.loc 1 188 1 view .LVU109
 490 0032 0895      		ret
 491               		.cfi_endproc
 492               	.LFE175:
 494               		.section	.text.iqResetI,"ax",@progbits
 495               	.global	iqResetI
 497               	iqResetI:
 498               	.LVL39:
 499               	.LFB176:
 189:../../../os/hal/src/hal_queues.c **** 
 190:../../../os/hal/src/hal_queues.c **** /**
 191:../../../os/hal/src/hal_queues.c ****  * @brief   Resets an input queue.
 192:../../../os/hal/src/hal_queues.c ****  * @details All the data in the input queue is erased and lost, any waiting
 193:../../../os/hal/src/hal_queues.c ****  *          thread is resumed with status @p MSG_RESET.
 194:../../../os/hal/src/hal_queues.c ****  * @note    A reset operation can be used by a low level driver in order to
 195:../../../os/hal/src/hal_queues.c ****  *          obtain immediate attention from the high level layers.
 196:../../../os/hal/src/hal_queues.c ****  *
 197:../../../os/hal/src/hal_queues.c ****  * @param[in] iqp       pointer to an @p input_queue_t structure
 198:../../../os/hal/src/hal_queues.c ****  *
 199:../../../os/hal/src/hal_queues.c ****  * @iclass
 200:../../../os/hal/src/hal_queues.c ****  */
 201:../../../os/hal/src/hal_queues.c **** void iqResetI(input_queue_t *iqp) {
 500               		.loc 1 201 35 is_stmt 1 view -0
 501               		.cfi_startproc
 502               	/* prologue: function */
 503               	/* frame size = 0 */
 504               	/* stack size = 0 */
 505               	.L__stack_usage = 0
 202:../../../os/hal/src/hal_queues.c **** 
 203:../../../os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 506               		.loc 1 203 23 view .LVU111
 204:../../../os/hal/src/hal_queues.c **** 
 205:../../../os/hal/src/hal_queues.c ****   iqp->q_rdptr = iqp->q_buffer;
 507               		.loc 1 205 3 view .LVU112
 508               		.loc 1 205 21 is_stmt 0 view .LVU113
 509 0000 FC01      		movw r30,r24
 510 0002 2681      		ldd r18,Z+6
 511 0004 3781      		ldd r19,Z+7
 512               		.loc 1 205 16 view .LVU114
 513 0006 3587      		std Z+13,r19
 514 0008 2487      		std Z+12,r18
 206:../../../os/hal/src/hal_queues.c ****   iqp->q_wrptr = iqp->q_buffer;
 515               		.loc 1 206 3 is_stmt 1 view .LVU115
 516               		.loc 1 206 16 is_stmt 0 view .LVU116
 517 000a 3387      		std Z+11,r19
 518 000c 2287      		std Z+10,r18
 207:../../../os/hal/src/hal_queues.c ****   iqp->q_counter = 0;
 519               		.loc 1 207 3 is_stmt 1 view .LVU117
 520               		.loc 1 207 18 is_stmt 0 view .LVU118
 521 000e 1582      		std Z+5,__zero_reg__
 522 0010 1482      		std Z+4,__zero_reg__
 208:../../../os/hal/src/hal_queues.c ****   osalThreadDequeueAllI(&iqp->q_waiting, MSG_RESET);
 523               		.loc 1 208 3 is_stmt 1 view .LVU119
 524               	.LVL40:
 525               	.LBB138:
 526               	.LBI138:
 803:../../../os/hal/osal/rt/osal.h **** }
 804:../../../os/hal/osal/rt/osal.h **** 
 805:../../../os/hal/osal/rt/osal.h **** /**
 806:../../../os/hal/osal/rt/osal.h ****  * @brief   Enqueues the caller thread.
 807:../../../os/hal/osal/rt/osal.h ****  * @details The caller thread is enqueued and put to sleep until it is
 808:../../../os/hal/osal/rt/osal.h ****  *          dequeued or the specified timeouts expires.
 809:../../../os/hal/osal/rt/osal.h ****  *
 810:../../../os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 811:../../../os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 812:../../../os/hal/osal/rt/osal.h ****  *                      handled as follow:
 813:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 814:../../../os/hal/osal/rt/osal.h ****  *                        state.
 815:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 816:../../../os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 817:../../../os/hal/osal/rt/osal.h ****  *                        occurred.
 818:../../../os/hal/osal/rt/osal.h ****  *                      .
 819:../../../os/hal/osal/rt/osal.h ****  * @return              The message from @p osalQueueWakeupOneI() or
 820:../../../os/hal/osal/rt/osal.h ****  *                      @p osalQueueWakeupAllI() functions.
 821:../../../os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the thread has not been dequeued within the
 822:../../../os/hal/osal/rt/osal.h ****  *                      specified timeout or if the function has been
 823:../../../os/hal/osal/rt/osal.h ****  *                      invoked with @p TIME_IMMEDIATE as timeout
 824:../../../os/hal/osal/rt/osal.h ****  *                      specification.
 825:../../../os/hal/osal/rt/osal.h ****  *
 826:../../../os/hal/osal/rt/osal.h ****  * @sclass
 827:../../../os/hal/osal/rt/osal.h ****  */
 828:../../../os/hal/osal/rt/osal.h **** static inline msg_t osalThreadEnqueueTimeoutS(threads_queue_t *tqp,
 829:../../../os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 830:../../../os/hal/osal/rt/osal.h **** 
 831:../../../os/hal/osal/rt/osal.h ****   return chThdEnqueueTimeoutS(tqp, timeout);
 832:../../../os/hal/osal/rt/osal.h **** }
 833:../../../os/hal/osal/rt/osal.h **** 
 834:../../../os/hal/osal/rt/osal.h **** /**
 835:../../../os/hal/osal/rt/osal.h ****  * @brief   Dequeues and wakes up one thread from the queue, if any.
 836:../../../os/hal/osal/rt/osal.h ****  *
 837:../../../os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 838:../../../os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 839:../../../os/hal/osal/rt/osal.h ****  *
 840:../../../os/hal/osal/rt/osal.h ****  * @iclass
 841:../../../os/hal/osal/rt/osal.h ****  */
 842:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 843:../../../os/hal/osal/rt/osal.h **** 
 844:../../../os/hal/osal/rt/osal.h ****   chThdDequeueNextI(tqp, msg);
 845:../../../os/hal/osal/rt/osal.h **** }
 846:../../../os/hal/osal/rt/osal.h **** 
 847:../../../os/hal/osal/rt/osal.h **** /**
 848:../../../os/hal/osal/rt/osal.h ****  * @brief   Dequeues and wakes up all threads from the queue.
 849:../../../os/hal/osal/rt/osal.h ****  *
 850:../../../os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 851:../../../os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 852:../../../os/hal/osal/rt/osal.h ****  *
 853:../../../os/hal/osal/rt/osal.h ****  * @iclass
 854:../../../os/hal/osal/rt/osal.h ****  */
 855:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadDequeueAllI(threads_queue_t *tqp, msg_t msg) {
 527               		.loc 2 855 20 view .LVU120
 528               	.LBB139:
 856:../../../os/hal/osal/rt/osal.h **** 
 857:../../../os/hal/osal/rt/osal.h ****   chThdDequeueAllI(tqp, msg);
 529               		.loc 2 857 3 view .LVU121
 530 0012 6EEF      		ldi r22,lo8(-2)
 531 0014 7FEF      		ldi r23,lo8(-1)
 532 0016 0C94 0000 		jmp chThdDequeueAllI
 533               	.LVL41:
 534               		.loc 2 857 3 is_stmt 0 view .LVU122
 535               	.LBE139:
 536               	.LBE138:
 537               		.cfi_endproc
 538               	.LFE176:
 540               		.section	.text.iqPutI,"ax",@progbits
 541               	.global	iqPutI
 543               	iqPutI:
 544               	.LVL42:
 545               	.LFB177:
 209:../../../os/hal/src/hal_queues.c **** }
 210:../../../os/hal/src/hal_queues.c **** 
 211:../../../os/hal/src/hal_queues.c **** /**
 212:../../../os/hal/src/hal_queues.c ****  * @brief   Input queue write.
 213:../../../os/hal/src/hal_queues.c ****  * @details A byte value is written into the low end of an input queue. The
 214:../../../os/hal/src/hal_queues.c ****  *          operation completes immediately.
 215:../../../os/hal/src/hal_queues.c ****  *
 216:../../../os/hal/src/hal_queues.c ****  * @param[in] iqp       pointer to an @p input_queue_t structure
 217:../../../os/hal/src/hal_queues.c ****  * @param[in] b         the byte value to be written in the queue
 218:../../../os/hal/src/hal_queues.c ****  * @return              The operation status.
 219:../../../os/hal/src/hal_queues.c ****  * @retval MSG_OK       if the operation has been completed with success.
 220:../../../os/hal/src/hal_queues.c ****  * @retval MSG_TIMEOUT  if the queue is full.
 221:../../../os/hal/src/hal_queues.c ****  *
 222:../../../os/hal/src/hal_queues.c ****  * @iclass
 223:../../../os/hal/src/hal_queues.c ****  */
 224:../../../os/hal/src/hal_queues.c **** msg_t iqPutI(input_queue_t *iqp, uint8_t b) {
 546               		.loc 1 224 45 is_stmt 1 view -0
 547               		.cfi_startproc
 548               	/* prologue: function */
 549               	/* frame size = 0 */
 550               	/* stack size = 0 */
 551               	.L__stack_usage = 0
 552               		.loc 1 224 45 is_stmt 0 view .LVU124
 553 0000 FC01      		movw r30,r24
 225:../../../os/hal/src/hal_queues.c **** 
 226:../../../os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 554               		.loc 1 226 23 is_stmt 1 view .LVU125
 227:../../../os/hal/src/hal_queues.c **** 
 228:../../../os/hal/src/hal_queues.c ****   /* Queue space check.*/
 229:../../../os/hal/src/hal_queues.c ****   if (!iqIsFullI(iqp)) {
 555               		.loc 1 229 3 view .LVU126
 556               		.loc 1 229 8 is_stmt 0 view .LVU127
 557 0002 A285      		ldd r26,Z+10
 558 0004 B385      		ldd r27,Z+11
 559 0006 8485      		ldd r24,Z+12
 560 0008 9585      		ldd r25,Z+13
 561               	.LVL43:
 562               		.loc 1 229 8 view .LVU128
 563 000a A817      		cp r26,r24
 564 000c B907      		cpc r27,r25
 565 000e 01F0      		breq .L24
 566               	.L19:
 230:../../../os/hal/src/hal_queues.c ****     iqp->q_counter++;
 567               		.loc 1 230 5 is_stmt 1 view .LVU129
 568               		.loc 1 230 8 is_stmt 0 view .LVU130
 569 0010 8481      		ldd r24,Z+4
 570 0012 9581      		ldd r25,Z+5
 571               		.loc 1 230 19 view .LVU131
 572 0014 0196      		adiw r24,1
 573 0016 9583      		std Z+5,r25
 574 0018 8483      		std Z+4,r24
 231:../../../os/hal/src/hal_queues.c ****     *iqp->q_wrptr++ = b;
 575               		.loc 1 231 5 is_stmt 1 view .LVU132
 576               		.loc 1 231 18 is_stmt 0 view .LVU133
 577 001a CD01      		movw r24,r26
 578 001c 0196      		adiw r24,1
 579 001e 9387      		std Z+11,r25
 580 0020 8287      		std Z+10,r24
 581               		.loc 1 231 21 view .LVU134
 582 0022 6C93      		st X,r22
 232:../../../os/hal/src/hal_queues.c ****     if (iqp->q_wrptr >= iqp->q_top) {
 583               		.loc 1 232 5 is_stmt 1 view .LVU135
 584               		.loc 1 232 8 is_stmt 0 view .LVU136
 585 0024 2285      		ldd r18,Z+10
 586 0026 3385      		ldd r19,Z+11
 587 0028 8085      		ldd r24,Z+8
 588 002a 9185      		ldd r25,Z+9
 589 002c 2817      		cp r18,r24
 590 002e 3907      		cpc r19,r25
 591 0030 00F0      		brlo .L22
 233:../../../os/hal/src/hal_queues.c ****       iqp->q_wrptr = iqp->q_buffer;
 592               		.loc 1 233 7 is_stmt 1 view .LVU137
 593               		.loc 1 233 20 is_stmt 0 view .LVU138
 594 0032 8681      		ldd r24,Z+6
 595 0034 9781      		ldd r25,Z+7
 596 0036 9387      		std Z+11,r25
 597 0038 8287      		std Z+10,r24
 598               	.L22:
 234:../../../os/hal/src/hal_queues.c ****     }
 235:../../../os/hal/src/hal_queues.c **** 
 236:../../../os/hal/src/hal_queues.c ****     osalThreadDequeueNextI(&iqp->q_waiting, MSG_OK);
 599               		.loc 1 236 5 is_stmt 1 view .LVU139
 600               	.LVL44:
 601               	.LBB140:
 602               	.LBI140:
 842:../../../os/hal/osal/rt/osal.h **** 
 603               		.loc 2 842 20 view .LVU140
 604               	.LBB141:
 844:../../../os/hal/osal/rt/osal.h **** }
 605               		.loc 2 844 3 view .LVU141
 606 003a 70E0      		ldi r23,0
 607 003c 60E0      		ldi r22,0
 608               	.LVL45:
 844:../../../os/hal/osal/rt/osal.h **** }
 609               		.loc 2 844 3 is_stmt 0 view .LVU142
 610 003e CF01      		movw r24,r30
 611 0040 0E94 0000 		call chThdDequeueNextI
 612               	.LVL46:
 844:../../../os/hal/osal/rt/osal.h **** }
 613               		.loc 2 844 3 view .LVU143
 614               	.LBE141:
 615               	.LBE140:
 237:../../../os/hal/src/hal_queues.c **** 
 238:../../../os/hal/src/hal_queues.c ****     return MSG_OK;
 616               		.loc 1 238 5 is_stmt 1 view .LVU144
 617               		.loc 1 238 12 is_stmt 0 view .LVU145
 618 0044 90E0      		ldi r25,0
 619 0046 80E0      		ldi r24,0
 620 0048 0895      		ret
 621               	.LVL47:
 622               	.L24:
 229:../../../os/hal/src/hal_queues.c ****     iqp->q_counter++;
 623               		.loc 1 229 8 discriminator 1 view .LVU146
 624 004a 8481      		ldd r24,Z+4
 625 004c 9581      		ldd r25,Z+5
 626 004e 892B      		or r24,r25
 627 0050 01F0      		breq .L19
 239:../../../os/hal/src/hal_queues.c ****   }
 240:../../../os/hal/src/hal_queues.c **** 
 241:../../../os/hal/src/hal_queues.c ****   return MSG_TIMEOUT;
 628               		.loc 1 241 10 view .LVU147
 629 0052 8FEF      		ldi r24,lo8(-1)
 630 0054 9FEF      		ldi r25,lo8(-1)
 631               	/* epilogue start */
 242:../../../os/hal/src/hal_queues.c **** }
 632               		.loc 1 242 1 view .LVU148
 633 0056 0895      		ret
 634               		.cfi_endproc
 635               	.LFE177:
 637               		.section	.text.iqGetI,"ax",@progbits
 638               	.global	iqGetI
 640               	iqGetI:
 641               	.LVL48:
 642               	.LFB178:
 243:../../../os/hal/src/hal_queues.c **** 
 244:../../../os/hal/src/hal_queues.c **** /**
 245:../../../os/hal/src/hal_queues.c ****  * @brief   Input queue non-blocking read.
 246:../../../os/hal/src/hal_queues.c ****  * @details This function reads a byte value from an input queue. The
 247:../../../os/hal/src/hal_queues.c ****  *          operation completes immediately.
 248:../../../os/hal/src/hal_queues.c ****  * @note    The callback is invoked after removing a character from the
 249:../../../os/hal/src/hal_queues.c ****  *          queue.
 250:../../../os/hal/src/hal_queues.c ****  *
 251:../../../os/hal/src/hal_queues.c ****  * @param[in] iqp       pointer to an @p input_queue_t structure
 252:../../../os/hal/src/hal_queues.c ****  * @return              A byte value from the queue.
 253:../../../os/hal/src/hal_queues.c ****  * @retval MSG_TIMEOUT  if the queue is empty.
 254:../../../os/hal/src/hal_queues.c ****  * @retval MSG_RESET    if the queue has been reset.
 255:../../../os/hal/src/hal_queues.c ****  *
 256:../../../os/hal/src/hal_queues.c ****  * @iclass
 257:../../../os/hal/src/hal_queues.c ****  */
 258:../../../os/hal/src/hal_queues.c **** msg_t iqGetI(input_queue_t *iqp) {
 643               		.loc 1 258 34 is_stmt 1 view -0
 644               		.cfi_startproc
 645               		.loc 1 258 34 is_stmt 0 view .LVU150
 646 0000 CF93      		push r28
 647               	.LCFI22:
 648               		.cfi_def_cfa_offset 3
 649               		.cfi_offset 28, -2
 650               	/* prologue: function */
 651               	/* frame size = 0 */
 652               	/* stack size = 1 */
 653               	.L__stack_usage = 1
 654 0002 DC01      		movw r26,r24
 259:../../../os/hal/src/hal_queues.c **** 
 260:../../../os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 655               		.loc 1 260 23 is_stmt 1 view .LVU151
 261:../../../os/hal/src/hal_queues.c **** 
 262:../../../os/hal/src/hal_queues.c ****   /* Queue data check.*/
 263:../../../os/hal/src/hal_queues.c ****   if (!iqIsEmptyI(iqp)) {
 656               		.loc 1 263 3 view .LVU152
 657               		.loc 1 263 8 is_stmt 0 view .LVU153
 658 0004 1496      		adiw r26,4
 659 0006 8D91      		ld r24,X+
 660 0008 9C91      		ld r25,X
 661 000a 1597      		sbiw r26,4+1
 662               	.LVL49:
 663               		.loc 1 263 6 view .LVU154
 664 000c 892B      		or r24,r25
 665 000e 01F0      		breq .L29
 666               	.LBB142:
 264:../../../os/hal/src/hal_queues.c ****     uint8_t b;
 667               		.loc 1 264 5 is_stmt 1 view .LVU155
 265:../../../os/hal/src/hal_queues.c **** 
 266:../../../os/hal/src/hal_queues.c ****     /* Getting the character from the queue.*/
 267:../../../os/hal/src/hal_queues.c ****     iqp->q_counter--;
 668               		.loc 1 267 5 view .LVU156
 669               		.loc 1 267 8 is_stmt 0 view .LVU157
 670 0010 1496      		adiw r26,4
 671 0012 8D91      		ld r24,X+
 672 0014 9C91      		ld r25,X
 673 0016 1597      		sbiw r26,4+1
 674               		.loc 1 267 19 view .LVU158
 675 0018 0197      		sbiw r24,1
 676 001a 1596      		adiw r26,4+1
 677 001c 9C93      		st X,r25
 678 001e 8E93      		st -X,r24
 679 0020 1497      		sbiw r26,4
 268:../../../os/hal/src/hal_queues.c ****     b = *iqp->q_rdptr++;
 680               		.loc 1 268 5 is_stmt 1 view .LVU159
 681               		.loc 1 268 13 is_stmt 0 view .LVU160
 682 0022 1C96      		adiw r26,12
 683 0024 ED91      		ld r30,X+
 684 0026 FC91      		ld r31,X
 685 0028 1D97      		sbiw r26,12+1
 686               		.loc 1 268 22 view .LVU161
 687 002a CF01      		movw r24,r30
 688 002c 0196      		adiw r24,1
 689 002e 1D96      		adiw r26,12+1
 690 0030 9C93      		st X,r25
 691 0032 8E93      		st -X,r24
 692 0034 1C97      		sbiw r26,12
 693               		.loc 1 268 7 view .LVU162
 694 0036 C081      		ld r28,Z
 695               	.LVL50:
 269:../../../os/hal/src/hal_queues.c ****     if (iqp->q_rdptr >= iqp->q_top) {
 696               		.loc 1 269 5 is_stmt 1 view .LVU163
 697               		.loc 1 269 8 is_stmt 0 view .LVU164
 698 0038 1896      		adiw r26,8
 699 003a 2D91      		ld r18,X+
 700 003c 3C91      		ld r19,X
 701 003e 1997      		sbiw r26,8+1
 702 0040 8217      		cp r24,r18
 703 0042 9307      		cpc r25,r19
 704 0044 00F4      		brsh .L33
 705               	.L27:
 270:../../../os/hal/src/hal_queues.c ****       iqp->q_rdptr = iqp->q_buffer;
 271:../../../os/hal/src/hal_queues.c ****     }
 272:../../../os/hal/src/hal_queues.c **** 
 273:../../../os/hal/src/hal_queues.c ****     /* Inform the low side that the queue has at least one slot available.*/
 274:../../../os/hal/src/hal_queues.c ****     if (iqp->q_notify != NULL) {
 706               		.loc 1 274 5 is_stmt 1 view .LVU165
 707               		.loc 1 274 12 is_stmt 0 view .LVU166
 708 0046 1E96      		adiw r26,14
 709 0048 ED91      		ld r30,X+
 710 004a FC91      		ld r31,X
 711 004c 1F97      		sbiw r26,14+1
 712               		.loc 1 274 8 view .LVU167
 713 004e 3097      		sbiw r30,0
 714 0050 01F0      		breq .L28
 275:../../../os/hal/src/hal_queues.c ****       iqp->q_notify(iqp);
 715               		.loc 1 275 7 is_stmt 1 view .LVU168
 716 0052 CD01      		movw r24,r26
 717 0054 0995      		icall
 718               	.LVL51:
 719               	.L28:
 276:../../../os/hal/src/hal_queues.c ****     }
 277:../../../os/hal/src/hal_queues.c **** 
 278:../../../os/hal/src/hal_queues.c ****     return (msg_t)b;
 720               		.loc 1 278 5 view .LVU169
 721               		.loc 1 278 12 is_stmt 0 view .LVU170
 722 0056 8C2F      		mov r24,r28
 723 0058 90E0      		ldi r25,0
 724               	.LVL52:
 725               	.L25:
 726               	/* epilogue start */
 727               		.loc 1 278 12 view .LVU171
 728               	.LBE142:
 279:../../../os/hal/src/hal_queues.c ****   }
 280:../../../os/hal/src/hal_queues.c **** 
 281:../../../os/hal/src/hal_queues.c ****   return MSG_TIMEOUT;
 282:../../../os/hal/src/hal_queues.c **** }
 729               		.loc 1 282 1 view .LVU172
 730 005a CF91      		pop r28
 731 005c 0895      		ret
 732               	.LVL53:
 733               	.L33:
 734               	.LBB143:
 270:../../../os/hal/src/hal_queues.c ****     }
 735               		.loc 1 270 7 is_stmt 1 view .LVU173
 270:../../../os/hal/src/hal_queues.c ****     }
 736               		.loc 1 270 20 is_stmt 0 view .LVU174
 737 005e 1696      		adiw r26,6
 738 0060 8D91      		ld r24,X+
 739 0062 9C91      		ld r25,X
 740 0064 1797      		sbiw r26,6+1
 741 0066 1D96      		adiw r26,12+1
 742 0068 9C93      		st X,r25
 743 006a 8E93      		st -X,r24
 744 006c 1C97      		sbiw r26,12
 745 006e 00C0      		rjmp .L27
 746               	.LVL54:
 747               	.L29:
 270:../../../os/hal/src/hal_queues.c ****     }
 748               		.loc 1 270 20 view .LVU175
 749               	.LBE143:
 281:../../../os/hal/src/hal_queues.c **** }
 750               		.loc 1 281 10 view .LVU176
 751 0070 8FEF      		ldi r24,lo8(-1)
 752 0072 9FEF      		ldi r25,lo8(-1)
 753 0074 00C0      		rjmp .L25
 754               		.cfi_endproc
 755               	.LFE178:
 757               		.section	.text.iqGetTimeout,"ax",@progbits
 758               	.global	iqGetTimeout
 760               	iqGetTimeout:
 761               	.LVL55:
 762               	.LFB179:
 283:../../../os/hal/src/hal_queues.c **** 
 284:../../../os/hal/src/hal_queues.c **** /**
 285:../../../os/hal/src/hal_queues.c ****  * @brief   Input queue read with timeout.
 286:../../../os/hal/src/hal_queues.c ****  * @details This function reads a byte value from an input queue. If the queue
 287:../../../os/hal/src/hal_queues.c ****  *          is empty then the calling thread is suspended until a byte arrives
 288:../../../os/hal/src/hal_queues.c ****  *          in the queue or a timeout occurs.
 289:../../../os/hal/src/hal_queues.c ****  * @note    The callback is invoked after removing a character from the
 290:../../../os/hal/src/hal_queues.c ****  *          queue.
 291:../../../os/hal/src/hal_queues.c ****  *
 292:../../../os/hal/src/hal_queues.c ****  * @param[in] iqp       pointer to an @p input_queue_t structure
 293:../../../os/hal/src/hal_queues.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 294:../../../os/hal/src/hal_queues.c ****  *                      the following special values are allowed:
 295:../../../os/hal/src/hal_queues.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 296:../../../os/hal/src/hal_queues.c ****  *                      - @a TIME_INFINITE no timeout.
 297:../../../os/hal/src/hal_queues.c ****  *                      .
 298:../../../os/hal/src/hal_queues.c ****  * @return              A byte value from the queue.
 299:../../../os/hal/src/hal_queues.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 300:../../../os/hal/src/hal_queues.c ****  * @retval MSG_RESET    if the queue has been reset.
 301:../../../os/hal/src/hal_queues.c ****  *
 302:../../../os/hal/src/hal_queues.c ****  * @api
 303:../../../os/hal/src/hal_queues.c ****  */
 304:../../../os/hal/src/hal_queues.c **** msg_t iqGetTimeout(input_queue_t *iqp, sysinterval_t timeout) {
 763               		.loc 1 304 63 is_stmt 1 view -0
 764               		.cfi_startproc
 765               		.loc 1 304 63 is_stmt 0 view .LVU178
 766 0000 0F93      		push r16
 767               	.LCFI23:
 768               		.cfi_def_cfa_offset 3
 769               		.cfi_offset 16, -2
 770 0002 1F93      		push r17
 771               	.LCFI24:
 772               		.cfi_def_cfa_offset 4
 773               		.cfi_offset 17, -3
 774 0004 CF93      		push r28
 775               	.LCFI25:
 776               		.cfi_def_cfa_offset 5
 777               		.cfi_offset 28, -4
 778 0006 DF93      		push r29
 779               	.LCFI26:
 780               		.cfi_def_cfa_offset 6
 781               		.cfi_offset 29, -5
 782               	/* prologue: function */
 783               	/* frame size = 0 */
 784               	/* stack size = 4 */
 785               	.L__stack_usage = 4
 786 0008 EC01      		movw r28,r24
 787 000a 8B01      		movw r16,r22
 305:../../../os/hal/src/hal_queues.c ****   uint8_t b;
 788               		.loc 1 305 3 is_stmt 1 view .LVU179
 306:../../../os/hal/src/hal_queues.c **** 
 307:../../../os/hal/src/hal_queues.c ****   osalSysLock();
 789               		.loc 1 307 3 view .LVU180
 790               	.LBB144:
 791               	.LBI144:
 509:../../../os/hal/osal/rt/osal.h **** 
 792               		.loc 2 509 20 view .LVU181
 793               	.LBE144:
 511:../../../os/hal/osal/rt/osal.h **** }
 794               		.loc 2 511 3 view .LVU182
 795               	.LBB149:
 796               	.LBB145:
 797               	.LBI145:
 798               		.file 5 "../../../os/rt/include/chsys.h"
   1:../../../os/rt/include/chsys.h **** /*
   2:../../../os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/rt/include/chsys.h **** 
   4:../../../os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:../../../os/rt/include/chsys.h **** 
   6:../../../os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:../../../os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/rt/include/chsys.h ****     (at your option) any later version.
  10:../../../os/rt/include/chsys.h **** 
  11:../../../os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:../../../os/rt/include/chsys.h **** 
  16:../../../os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/rt/include/chsys.h **** */
  19:../../../os/rt/include/chsys.h **** 
  20:../../../os/rt/include/chsys.h **** /**
  21:../../../os/rt/include/chsys.h ****  * @file    chsys.h
  22:../../../os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:../../../os/rt/include/chsys.h ****  *
  24:../../../os/rt/include/chsys.h ****  * @addtogroup system
  25:../../../os/rt/include/chsys.h ****  * @{
  26:../../../os/rt/include/chsys.h ****  */
  27:../../../os/rt/include/chsys.h **** 
  28:../../../os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:../../../os/rt/include/chsys.h **** #define CHSYS_H
  30:../../../os/rt/include/chsys.h **** 
  31:../../../os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:../../../os/rt/include/chsys.h **** 
  33:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  34:../../../os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  36:../../../os/rt/include/chsys.h **** 
  37:../../../os/rt/include/chsys.h **** /**
  38:../../../os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:../../../os/rt/include/chsys.h ****  * @{
  40:../../../os/rt/include/chsys.h ****  */
  41:../../../os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:../../../os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:../../../os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:../../../os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:../../../os/rt/include/chsys.h **** /** @} */
  46:../../../os/rt/include/chsys.h **** 
  47:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  48:../../../os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  50:../../../os/rt/include/chsys.h **** 
  51:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  52:../../../os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  54:../../../os/rt/include/chsys.h **** 
  55:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  56:../../../os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  58:../../../os/rt/include/chsys.h **** 
  59:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  60:../../../os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  62:../../../os/rt/include/chsys.h **** 
  63:../../../os/rt/include/chsys.h **** /**
  64:../../../os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:../../../os/rt/include/chsys.h ****  */
  66:../../../os/rt/include/chsys.h **** /**
  67:../../../os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:../../../os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:../../../os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:../../../os/rt/include/chsys.h ****  *
  71:../../../os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:../../../os/rt/include/chsys.h ****  * @return              Priority range result.
  73:../../../os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:../../../os/rt/include/chsys.h ****  *                      does not support priorities.
  75:../../../os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:../../../os/rt/include/chsys.h ****  */
  77:../../../os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:../../../os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:../../../os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:../../../os/rt/include/chsys.h **** #else
  81:../../../os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:../../../os/rt/include/chsys.h **** #endif
  83:../../../os/rt/include/chsys.h **** 
  84:../../../os/rt/include/chsys.h **** /**
  85:../../../os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:../../../os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:../../../os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:../../../os/rt/include/chsys.h ****  *
  89:../../../os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:../../../os/rt/include/chsys.h ****  * @return              Priority range result.
  91:../../../os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:../../../os/rt/include/chsys.h ****  *                      does not support priorities.
  93:../../../os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:../../../os/rt/include/chsys.h ****  */
  95:../../../os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:../../../os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:../../../os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:../../../os/rt/include/chsys.h **** #else
  99:../../../os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:../../../os/rt/include/chsys.h **** #endif
 101:../../../os/rt/include/chsys.h **** 
 102:../../../os/rt/include/chsys.h **** /**
 103:../../../os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:../../../os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:../../../os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:../../../os/rt/include/chsys.h ****  *
 107:../../../os/rt/include/chsys.h ****  * @special
 108:../../../os/rt/include/chsys.h ****  */
 109:../../../os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:../../../os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:../../../os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:../../../os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:../../../os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:../../../os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:../../../os/rt/include/chsys.h **** 
 116:../../../os/rt/include/chsys.h **** /**
 117:../../../os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:../../../os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:../../../os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:../../../os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:../../../os/rt/include/chsys.h ****  *
 122:../../../os/rt/include/chsys.h ****  * @special
 123:../../../os/rt/include/chsys.h ****  */
 124:../../../os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:../../../os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:../../../os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:../../../os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:../../../os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:../../../os/rt/include/chsys.h **** 
 130:../../../os/rt/include/chsys.h **** /**
 131:../../../os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:../../../os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:../../../os/rt/include/chsys.h ****  *          port implementation.
 134:../../../os/rt/include/chsys.h ****  *
 135:../../../os/rt/include/chsys.h ****  * @special
 136:../../../os/rt/include/chsys.h ****  */
 137:../../../os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:../../../os/rt/include/chsys.h **** /** @} */
 139:../../../os/rt/include/chsys.h **** 
 140:../../../os/rt/include/chsys.h **** /**
 141:../../../os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:../../../os/rt/include/chsys.h ****  */
 143:../../../os/rt/include/chsys.h **** /**
 144:../../../os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:../../../os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:../../../os/rt/include/chsys.h ****  *          port implementation.
 147:../../../os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:../../../os/rt/include/chsys.h ****  *
 149:../../../os/rt/include/chsys.h ****  * @special
 150:../../../os/rt/include/chsys.h ****  */
 151:../../../os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:../../../os/rt/include/chsys.h **** /** @} */
 153:../../../os/rt/include/chsys.h **** 
 154:../../../os/rt/include/chsys.h **** /**
 155:../../../os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:../../../os/rt/include/chsys.h ****  * @{
 157:../../../os/rt/include/chsys.h ****  */
 158:../../../os/rt/include/chsys.h **** /**
 159:../../../os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:../../../os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:../../../os/rt/include/chsys.h ****  *
 163:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:../../../os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:../../../os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:../../../os/rt/include/chsys.h ****  *
 167:../../../os/rt/include/chsys.h ****  * @api
 168:../../../os/rt/include/chsys.h ****  */
 169:../../../os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:../../../os/rt/include/chsys.h **** 
 171:../../../os/rt/include/chsys.h **** /**
 172:../../../os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:../../../os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:../../../os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:../../../os/rt/include/chsys.h ****  *
 177:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:../../../os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:../../../os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:../../../os/rt/include/chsys.h ****  *
 181:../../../os/rt/include/chsys.h ****  * @api
 182:../../../os/rt/include/chsys.h ****  */
 183:../../../os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:../../../os/rt/include/chsys.h **** 
 185:../../../os/rt/include/chsys.h **** /**
 186:../../../os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:../../../os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:../../../os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:../../../os/rt/include/chsys.h ****  *
 191:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:../../../os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:../../../os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:../../../os/rt/include/chsys.h ****  *
 195:../../../os/rt/include/chsys.h ****  * @api
 196:../../../os/rt/include/chsys.h ****  */
 197:../../../os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:../../../os/rt/include/chsys.h **** 
 199:../../../os/rt/include/chsys.h **** /**
 200:../../../os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:../../../os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:../../../os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:../../../os/rt/include/chsys.h ****  *
 205:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:../../../os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:../../../os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:../../../os/rt/include/chsys.h ****  *
 209:../../../os/rt/include/chsys.h ****  * @api
 210:../../../os/rt/include/chsys.h ****  */
 211:../../../os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:../../../os/rt/include/chsys.h **** 
 213:../../../os/rt/include/chsys.h **** /**
 214:../../../os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:../../../os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:../../../os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:../../../os/rt/include/chsys.h ****  *
 219:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:../../../os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:../../../os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:../../../os/rt/include/chsys.h ****  *
 223:../../../os/rt/include/chsys.h ****  * @api
 224:../../../os/rt/include/chsys.h ****  */
 225:../../../os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:../../../os/rt/include/chsys.h **** 
 227:../../../os/rt/include/chsys.h **** /**
 228:../../../os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:../../../os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:../../../os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:../../../os/rt/include/chsys.h ****  *
 233:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:../../../os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:../../../os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:../../../os/rt/include/chsys.h ****  *
 237:../../../os/rt/include/chsys.h ****  * @api
 238:../../../os/rt/include/chsys.h ****  */
 239:../../../os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:../../../os/rt/include/chsys.h **** /** @} */
 241:../../../os/rt/include/chsys.h **** 
 242:../../../os/rt/include/chsys.h **** /**
 243:../../../os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:../../../os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:../../../os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:../../../os/rt/include/chsys.h ****  *
 247:../../../os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:../../../os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:../../../os/rt/include/chsys.h ****  *
 250:../../../os/rt/include/chsys.h ****  * @xclass
 251:../../../os/rt/include/chsys.h ****  */
 252:../../../os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:../../../os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:../../../os/rt/include/chsys.h **** #endif
 255:../../../os/rt/include/chsys.h **** 
 256:../../../os/rt/include/chsys.h **** /**
 257:../../../os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:../../../os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:../../../os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:../../../os/rt/include/chsys.h ****  *
 261:../../../os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:../../../os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:../../../os/rt/include/chsys.h ****  *
 264:../../../os/rt/include/chsys.h ****  * @special
 265:../../../os/rt/include/chsys.h ****  */
 266:../../../os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:../../../os/rt/include/chsys.h ****                                                                             \
 268:../../../os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:../../../os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:../../../os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:../../../os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:../../../os/rt/include/chsys.h **** }
 273:../../../os/rt/include/chsys.h **** 
 274:../../../os/rt/include/chsys.h **** /*===========================================================================*/
 275:../../../os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:../../../os/rt/include/chsys.h **** /*===========================================================================*/
 277:../../../os/rt/include/chsys.h **** 
 278:../../../os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:../../../os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:../../../os/rt/include/chsys.h **** #endif
 281:../../../os/rt/include/chsys.h **** 
 282:../../../os/rt/include/chsys.h **** #ifdef __cplusplus
 283:../../../os/rt/include/chsys.h **** extern "C" {
 284:../../../os/rt/include/chsys.h **** #endif
 285:../../../os/rt/include/chsys.h ****   void chSysInit(void);
 286:../../../os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:../../../os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:../../../os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:../../../os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:../../../os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:../../../os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:../../../os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:../../../os/rt/include/chsys.h **** #endif
 294:../../../os/rt/include/chsys.h **** #ifdef __cplusplus
 295:../../../os/rt/include/chsys.h **** }
 296:../../../os/rt/include/chsys.h **** #endif
 297:../../../os/rt/include/chsys.h **** 
 298:../../../os/rt/include/chsys.h **** /*===========================================================================*/
 299:../../../os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:../../../os/rt/include/chsys.h **** /*===========================================================================*/
 301:../../../os/rt/include/chsys.h **** 
 302:../../../os/rt/include/chsys.h **** /**
 303:../../../os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:../../../os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:../../../os/rt/include/chsys.h ****  *          hardware priority.
 306:../../../os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:../../../os/rt/include/chsys.h ****  *
 308:../../../os/rt/include/chsys.h ****  * @special
 309:../../../os/rt/include/chsys.h ****  */
 310:../../../os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:../../../os/rt/include/chsys.h **** 
 312:../../../os/rt/include/chsys.h ****   port_disable();
 313:../../../os/rt/include/chsys.h ****   _dbg_check_disable();
 314:../../../os/rt/include/chsys.h **** }
 315:../../../os/rt/include/chsys.h **** 
 316:../../../os/rt/include/chsys.h **** /**
 317:../../../os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:../../../os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:../../../os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:../../../os/rt/include/chsys.h ****  *          enabled.
 321:../../../os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:../../../os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:../../../os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:../../../os/rt/include/chsys.h ****  *
 325:../../../os/rt/include/chsys.h ****  * @special
 326:../../../os/rt/include/chsys.h ****  */
 327:../../../os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:../../../os/rt/include/chsys.h **** 
 329:../../../os/rt/include/chsys.h ****   port_suspend();
 330:../../../os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:../../../os/rt/include/chsys.h **** }
 332:../../../os/rt/include/chsys.h **** 
 333:../../../os/rt/include/chsys.h **** /**
 334:../../../os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:../../../os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:../../../os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:../../../os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:../../../os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:../../../os/rt/include/chsys.h ****  *
 340:../../../os/rt/include/chsys.h ****  * @special
 341:../../../os/rt/include/chsys.h ****  */
 342:../../../os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:../../../os/rt/include/chsys.h **** 
 344:../../../os/rt/include/chsys.h ****   _dbg_check_enable();
 345:../../../os/rt/include/chsys.h ****   port_enable();
 346:../../../os/rt/include/chsys.h **** }
 347:../../../os/rt/include/chsys.h **** 
 348:../../../os/rt/include/chsys.h **** /**
 349:../../../os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:../../../os/rt/include/chsys.h ****  *
 351:../../../os/rt/include/chsys.h ****  * @special
 352:../../../os/rt/include/chsys.h ****  */
 353:../../../os/rt/include/chsys.h **** static inline void chSysLock(void) {
 799               		.loc 5 353 20 view .LVU183
 800               	.LBE145:
 801               	.LBE149:
 354:../../../os/rt/include/chsys.h **** 
 355:../../../os/rt/include/chsys.h ****   port_lock();
 802               		.loc 5 355 3 view .LVU184
 803               	.LBB150:
 804               	.LBB148:
 805               	.LBB146:
 806               	.LBI146:
 807               		.file 6 "../../../os/common/ports/AVR/chcore.h"
   1:../../../os/common/ports/AVR/chcore.h **** /*
   2:../../../os/common/ports/AVR/chcore.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/common/ports/AVR/chcore.h **** 
   4:../../../os/common/ports/AVR/chcore.h ****     This file is part of ChibiOS.
   5:../../../os/common/ports/AVR/chcore.h **** 
   6:../../../os/common/ports/AVR/chcore.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/common/ports/AVR/chcore.h ****     it under the terms of the GNU General Public License as published by
   8:../../../os/common/ports/AVR/chcore.h ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/common/ports/AVR/chcore.h ****     (at your option) any later version.
  10:../../../os/common/ports/AVR/chcore.h **** 
  11:../../../os/common/ports/AVR/chcore.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/common/ports/AVR/chcore.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/common/ports/AVR/chcore.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/common/ports/AVR/chcore.h ****     GNU General Public License for more details.
  15:../../../os/common/ports/AVR/chcore.h **** 
  16:../../../os/common/ports/AVR/chcore.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/common/ports/AVR/chcore.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/common/ports/AVR/chcore.h **** */
  19:../../../os/common/ports/AVR/chcore.h **** 
  20:../../../os/common/ports/AVR/chcore.h **** /**
  21:../../../os/common/ports/AVR/chcore.h ****  * @file    templates/chcore.h
  22:../../../os/common/ports/AVR/chcore.h ****  * @brief   Port related template macros and structures.
  23:../../../os/common/ports/AVR/chcore.h ****  * @details This file is a template of the system driver macros provided by
  24:../../../os/common/ports/AVR/chcore.h ****  *          a port.
  25:../../../os/common/ports/AVR/chcore.h ****  *
  26:../../../os/common/ports/AVR/chcore.h ****  * @addtogroup core
  27:../../../os/common/ports/AVR/chcore.h ****  * @{
  28:../../../os/common/ports/AVR/chcore.h ****  */
  29:../../../os/common/ports/AVR/chcore.h **** 
  30:../../../os/common/ports/AVR/chcore.h **** #ifndef CHCORE_H
  31:../../../os/common/ports/AVR/chcore.h **** #define CHCORE_H
  32:../../../os/common/ports/AVR/chcore.h **** 
  33:../../../os/common/ports/AVR/chcore.h **** #include <avr/io.h>
  34:../../../os/common/ports/AVR/chcore.h **** #include <avr/interrupt.h>
  35:../../../os/common/ports/AVR/chcore.h **** 
  36:../../../os/common/ports/AVR/chcore.h **** extern bool __avr_in_isr;
  37:../../../os/common/ports/AVR/chcore.h **** 
  38:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  39:../../../os/common/ports/AVR/chcore.h **** /* Module constants.                                                         */
  40:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  41:../../../os/common/ports/AVR/chcore.h **** 
  42:../../../os/common/ports/AVR/chcore.h **** /**
  43:../../../os/common/ports/AVR/chcore.h ****  * @name    Port Capabilities and Constants
  44:../../../os/common/ports/AVR/chcore.h ****  * @{
  45:../../../os/common/ports/AVR/chcore.h ****  */
  46:../../../os/common/ports/AVR/chcore.h **** /**
  47:../../../os/common/ports/AVR/chcore.h ****  * @brief   This port supports a realtime counter.
  48:../../../os/common/ports/AVR/chcore.h ****  */
  49:../../../os/common/ports/AVR/chcore.h **** #define PORT_SUPPORTS_RT                FALSE
  50:../../../os/common/ports/AVR/chcore.h **** 
  51:../../../os/common/ports/AVR/chcore.h **** /**
  52:../../../os/common/ports/AVR/chcore.h ****  * @brief   Natural alignment constant.
  53:../../../os/common/ports/AVR/chcore.h ****  * @note    It is the minimum alignment for pointer-size variables.
  54:../../../os/common/ports/AVR/chcore.h ****  */
  55:../../../os/common/ports/AVR/chcore.h **** #define PORT_NATURAL_ALIGN              1U
  56:../../../os/common/ports/AVR/chcore.h **** 
  57:../../../os/common/ports/AVR/chcore.h **** /**
  58:../../../os/common/ports/AVR/chcore.h ****  * @brief   Stack alignment constant.
  59:../../../os/common/ports/AVR/chcore.h ****  * @note    It is the alignement required for the stack pointer.
  60:../../../os/common/ports/AVR/chcore.h ****  */
  61:../../../os/common/ports/AVR/chcore.h **** #define PORT_STACK_ALIGN                1U
  62:../../../os/common/ports/AVR/chcore.h **** 
  63:../../../os/common/ports/AVR/chcore.h **** /**
  64:../../../os/common/ports/AVR/chcore.h ****  * @brief   Working Areas alignment constant.
  65:../../../os/common/ports/AVR/chcore.h ****  * @note    It is the alignment to be enforced for thread working areas.
  66:../../../os/common/ports/AVR/chcore.h ****  */
  67:../../../os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA_ALIGN         1U
  68:../../../os/common/ports/AVR/chcore.h **** /** @} */
  69:../../../os/common/ports/AVR/chcore.h **** 
  70:../../../os/common/ports/AVR/chcore.h **** /**
  71:../../../os/common/ports/AVR/chcore.h ****  * @name    Architecture and Compiler
  72:../../../os/common/ports/AVR/chcore.h ****  * @{
  73:../../../os/common/ports/AVR/chcore.h ****  */
  74:../../../os/common/ports/AVR/chcore.h **** /**
  75:../../../os/common/ports/AVR/chcore.h ****  * @brief   Macro defining an AVR architecture.
  76:../../../os/common/ports/AVR/chcore.h ****  */
  77:../../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR
  78:../../../os/common/ports/AVR/chcore.h **** 
  79:../../../os/common/ports/AVR/chcore.h **** /**
  80:../../../os/common/ports/AVR/chcore.h ****  * @brief   Macro defining the specific AVR architecture.
  81:../../../os/common/ports/AVR/chcore.h ****  */
  82:../../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR_MEGAAVR
  83:../../../os/common/ports/AVR/chcore.h **** 
  84:../../../os/common/ports/AVR/chcore.h **** /**
  85:../../../os/common/ports/AVR/chcore.h ****  * @brief   Name of the implemented architecture.
  86:../../../os/common/ports/AVR/chcore.h ****  */
  87:../../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_NAME          "MegaAVR"
  88:../../../os/common/ports/AVR/chcore.h **** 
  89:../../../os/common/ports/AVR/chcore.h **** /**
  90:../../../os/common/ports/AVR/chcore.h ****  * @brief   Compiler name and version.
  91:../../../os/common/ports/AVR/chcore.h ****  */
  92:../../../os/common/ports/AVR/chcore.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
  93:../../../os/common/ports/AVR/chcore.h **** #define PORT_COMPILER_NAME              "GCC " __VERSION__
  94:../../../os/common/ports/AVR/chcore.h **** 
  95:../../../os/common/ports/AVR/chcore.h **** #else
  96:../../../os/common/ports/AVR/chcore.h **** #error "unsupported compiler"
  97:../../../os/common/ports/AVR/chcore.h **** #endif
  98:../../../os/common/ports/AVR/chcore.h **** 
  99:../../../os/common/ports/AVR/chcore.h **** /**
 100:../../../os/common/ports/AVR/chcore.h ****  * @brief   Port-specific information string.
 101:../../../os/common/ports/AVR/chcore.h ****  */
 102:../../../os/common/ports/AVR/chcore.h **** #define PORT_INFO                       "None"
 103:../../../os/common/ports/AVR/chcore.h **** /** @} */
 104:../../../os/common/ports/AVR/chcore.h **** 
 105:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 106:../../../os/common/ports/AVR/chcore.h **** /* Module pre-compile time settings.                                         */
 107:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 108:../../../os/common/ports/AVR/chcore.h **** 
 109:../../../os/common/ports/AVR/chcore.h **** /**
 110:../../../os/common/ports/AVR/chcore.h ****  * @brief   Stack size for the system idle thread.
 111:../../../os/common/ports/AVR/chcore.h ****  * @details This size depends on the idle thread implementation, usually
 112:../../../os/common/ports/AVR/chcore.h ****  *          the idle thread should take no more space than those reserved
 113:../../../os/common/ports/AVR/chcore.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 114:../../../os/common/ports/AVR/chcore.h ****  */
 115:../../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 116:../../../os/common/ports/AVR/chcore.h **** #define PORT_IDLE_THREAD_STACK_SIZE     8
 117:../../../os/common/ports/AVR/chcore.h **** #endif
 118:../../../os/common/ports/AVR/chcore.h **** 
 119:../../../os/common/ports/AVR/chcore.h **** /**
 120:../../../os/common/ports/AVR/chcore.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 121:../../../os/common/ports/AVR/chcore.h ****  * @details This constant is used in the calculation of the correct working
 122:../../../os/common/ports/AVR/chcore.h ****  *          area size.
 123:../../../os/common/ports/AVR/chcore.h ****  */
 124:../../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 125:../../../os/common/ports/AVR/chcore.h **** #define PORT_INT_REQUIRED_STACK         32
 126:../../../os/common/ports/AVR/chcore.h **** #endif
 127:../../../os/common/ports/AVR/chcore.h **** 
 128:../../../os/common/ports/AVR/chcore.h **** /**
 129:../../../os/common/ports/AVR/chcore.h ****  * @brief   Enables an alternative timer implementation.
 130:../../../os/common/ports/AVR/chcore.h ****  * @details Usually the port uses a timer interface defined in the file
 131:../../../os/common/ports/AVR/chcore.h ****  *          @p chcore_timer.h, if this option is enabled then the file
 132:../../../os/common/ports/AVR/chcore.h ****  *          @p chcore_timer_alt.h is included instead.
 133:../../../os/common/ports/AVR/chcore.h ****  */
 134:../../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_USE_ALT_TIMER) || defined(__DOXYGEN__)
 135:../../../os/common/ports/AVR/chcore.h **** #define PORT_USE_ALT_TIMER              FALSE
 136:../../../os/common/ports/AVR/chcore.h **** #endif
 137:../../../os/common/ports/AVR/chcore.h **** 
 138:../../../os/common/ports/AVR/chcore.h **** /**
 139:../../../os/common/ports/AVR/chcore.h ****  * @brief   Enables a "wait for interrupt" instruction in the idle loop.
 140:../../../os/common/ports/AVR/chcore.h ****  */
 141:../../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_AVR_WFI_SLEEP_IDLE) || defined(__DOXYGEN__)
 142:../../../os/common/ports/AVR/chcore.h **** #define PORT_AVR_WFI_SLEEP_IDLE      FALSE
 143:../../../os/common/ports/AVR/chcore.h **** #endif
 144:../../../os/common/ports/AVR/chcore.h **** 
 145:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 146:../../../os/common/ports/AVR/chcore.h **** /* Derived constants and error checks.                                       */
 147:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 148:../../../os/common/ports/AVR/chcore.h **** 
 149:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 150:../../../os/common/ports/AVR/chcore.h **** /* Module data structures and types.                                         */
 151:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 152:../../../os/common/ports/AVR/chcore.h **** 
 153:../../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 154:../../../os/common/ports/AVR/chcore.h ****    asm module.*/
 155:../../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 156:../../../os/common/ports/AVR/chcore.h **** 
 157:../../../os/common/ports/AVR/chcore.h **** /**
 158:../../../os/common/ports/AVR/chcore.h ****  * @brief   Type of stack and memory alignment enforcement.
 159:../../../os/common/ports/AVR/chcore.h ****  * @note    In this architecture the stack alignment is enforced to 8 bits.
 160:../../../os/common/ports/AVR/chcore.h ****  */
 161:../../../os/common/ports/AVR/chcore.h **** typedef uint8_t stkalign_t;
 162:../../../os/common/ports/AVR/chcore.h **** 
 163:../../../os/common/ports/AVR/chcore.h **** /**
 164:../../../os/common/ports/AVR/chcore.h ****  * @brief   Interrupt saved context.
 165:../../../os/common/ports/AVR/chcore.h ****  * @details This structure represents the stack frame saved during a
 166:../../../os/common/ports/AVR/chcore.h ****  *          preemption-capable interrupt handler.
 167:../../../os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 168:../../../os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 169:../../../os/common/ports/AVR/chcore.h ****  */
 170:../../../os/common/ports/AVR/chcore.h **** struct port_extctx {
 171:../../../os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 172:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r31;
 173:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r30;
 174:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r27;
 175:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r26;
 176:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r25;
 177:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r24;
 178:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r23;
 179:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r22;
 180:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r21;
 181:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r20;
 182:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r19;
 183:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r18;
 184:../../../os/common/ports/AVR/chcore.h ****   uint8_t       sr;
 185:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r1;
 186:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r0;
 187:../../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 188:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 189:../../../os/common/ports/AVR/chcore.h **** #endif
 190:../../../os/common/ports/AVR/chcore.h ****   uint16_t      pc;
 191:../../../os/common/ports/AVR/chcore.h **** };
 192:../../../os/common/ports/AVR/chcore.h **** 
 193:../../../os/common/ports/AVR/chcore.h **** /**
 194:../../../os/common/ports/AVR/chcore.h ****  * @brief   System saved context.
 195:../../../os/common/ports/AVR/chcore.h ****  * @details This structure represents the inner stack frame during a context
 196:../../../os/common/ports/AVR/chcore.h ****  *          switching.
 197:../../../os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 198:../../../os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 199:../../../os/common/ports/AVR/chcore.h ****  * @note    LR is stored in the caller context so it is not present in this
 200:../../../os/common/ports/AVR/chcore.h ****  *          structure.
 201:../../../os/common/ports/AVR/chcore.h ****  */
 202:../../../os/common/ports/AVR/chcore.h **** struct port_intctx {
 203:../../../os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 204:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r29;
 205:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r28;
 206:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r17;
 207:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r16;
 208:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r15;
 209:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r14;
 210:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r13;
 211:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r12;
 212:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r11;
 213:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r10;
 214:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r9;
 215:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r8;
 216:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r7;
 217:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r6;
 218:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r5;
 219:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r4;
 220:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r3;
 221:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r2;
 222:../../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 223:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 224:../../../os/common/ports/AVR/chcore.h **** #endif
 225:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pcl;
 226:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pch;
 227:../../../os/common/ports/AVR/chcore.h **** };
 228:../../../os/common/ports/AVR/chcore.h **** 
 229:../../../os/common/ports/AVR/chcore.h **** /**
 230:../../../os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p thread_t structure.
 231:../../../os/common/ports/AVR/chcore.h ****  * @details This structure usually contains just the saved stack pointer
 232:../../../os/common/ports/AVR/chcore.h ****  *          defined as a pointer to a @p port_intctx structure.
 233:../../../os/common/ports/AVR/chcore.h ****  */
 234:../../../os/common/ports/AVR/chcore.h **** struct port_context {
 235:../../../os/common/ports/AVR/chcore.h ****   struct port_intctx *sp;
 236:../../../os/common/ports/AVR/chcore.h **** };
 237:../../../os/common/ports/AVR/chcore.h **** 
 238:../../../os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 239:../../../os/common/ports/AVR/chcore.h **** 
 240:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 241:../../../os/common/ports/AVR/chcore.h **** /* Module macros.                                                            */
 242:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 243:../../../os/common/ports/AVR/chcore.h **** 
 244:../../../os/common/ports/AVR/chcore.h **** /**
 245:../../../os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 246:../../../os/common/ports/AVR/chcore.h ****  * @details This code usually setup the context switching frame represented
 247:../../../os/common/ports/AVR/chcore.h ****  *          by an @p port_intctx structure.
 248:../../../os/common/ports/AVR/chcore.h ****  */
 249:../../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__) || defined(__DOXYGEN__)
 250:../../../os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 251:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 252:../../../os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 253:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 254:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 255:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 256:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 257:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcx = (uint8_t)0;                                             \
 258:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 259:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 260:../../../os/common/ports/AVR/chcore.h **** }
 261:../../../os/common/ports/AVR/chcore.h **** #else /* !__AVR_3_BYTE_PC__ */
 262:../../../os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 263:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 264:../../../os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 265:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 266:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 267:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 268:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 269:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 270:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 271:../../../os/common/ports/AVR/chcore.h **** }
 272:../../../os/common/ports/AVR/chcore.h **** #endif /* !__AVR_3_BYTE_PC__ */
 273:../../../os/common/ports/AVR/chcore.h **** 
 274:../../../os/common/ports/AVR/chcore.h **** /**
 275:../../../os/common/ports/AVR/chcore.h ****  * @brief   Computes the thread working area global size.
 276:../../../os/common/ports/AVR/chcore.h ****  * @note    There is no need to perform alignments in this macro.
 277:../../../os/common/ports/AVR/chcore.h ****  */
 278:../../../os/common/ports/AVR/chcore.h **** #define PORT_WA_SIZE(n) ((sizeof(struct port_intctx) - 1) +                \
 279:../../../os/common/ports/AVR/chcore.h ****                          (sizeof(struct port_extctx) - 1) +                \
 280:../../../os/common/ports/AVR/chcore.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 281:../../../os/common/ports/AVR/chcore.h **** 
 282:../../../os/common/ports/AVR/chcore.h **** /**
 283:../../../os/common/ports/AVR/chcore.h ****  * @brief   Static working area allocation.
 284:../../../os/common/ports/AVR/chcore.h ****  * @details This macro is used to allocate a static thread working area
 285:../../../os/common/ports/AVR/chcore.h ****  *          aligned as both position and size.
 286:../../../os/common/ports/AVR/chcore.h ****  *
 287:../../../os/common/ports/AVR/chcore.h ****  * @param[in] s         the name to be assigned to the stack array
 288:../../../os/common/ports/AVR/chcore.h ****  * @param[in] n         the stack size to be assigned to the thread
 289:../../../os/common/ports/AVR/chcore.h ****  */
 290:../../../os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA(s, n)                                             \
 291:../../../os/common/ports/AVR/chcore.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 292:../../../os/common/ports/AVR/chcore.h **** 
 293:../../../os/common/ports/AVR/chcore.h **** /**
 294:../../../os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 295:../../../os/common/ports/AVR/chcore.h ****  */
 296:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_PRIORITY(n) false
 297:../../../os/common/ports/AVR/chcore.h **** 
 298:../../../os/common/ports/AVR/chcore.h **** /**
 299:../../../os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 300:../../../os/common/ports/AVR/chcore.h ****  */
 301:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_KERNEL_PRIORITY(n) false
 302:../../../os/common/ports/AVR/chcore.h **** 
 303:../../../os/common/ports/AVR/chcore.h **** /**
 304:../../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ prologue code.
 305:../../../os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 306:../../../os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 307:../../../os/common/ports/AVR/chcore.h ****  * @note    This code tricks the compiler to save all the specified registers
 308:../../../os/common/ports/AVR/chcore.h ****  *          by "touching" them.
 309:../../../os/common/ports/AVR/chcore.h ****  */
 310:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_PROLOGUE() {                                               \
 311:../../../os/common/ports/AVR/chcore.h ****   asm ("" : : : "r18", "r19", "r20", "r21", "r22", "r23", "r24",            \
 312:../../../os/common/ports/AVR/chcore.h ****                 "r25", "r26", "r27", "r30", "r31");                         \
 313:../../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 314:../../../os/common/ports/AVR/chcore.h **** }
 315:../../../os/common/ports/AVR/chcore.h **** 
 316:../../../os/common/ports/AVR/chcore.h **** /**
 317:../../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ epilogue code.
 318:../../../os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 319:../../../os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 320:../../../os/common/ports/AVR/chcore.h ****  */
 321:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_EPILOGUE() {                                               \
 322:../../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = false;                                                     \
 323:../../../os/common/ports/AVR/chcore.h ****   _dbg_check_lock();                                                        \
 324:../../../os/common/ports/AVR/chcore.h ****   if (chSchIsPreemptionRequired())                                          \
 325:../../../os/common/ports/AVR/chcore.h ****     chSchDoReschedule();                                                    \
 326:../../../os/common/ports/AVR/chcore.h ****   _dbg_check_unlock();                                                      \
 327:../../../os/common/ports/AVR/chcore.h **** }
 328:../../../os/common/ports/AVR/chcore.h **** 
 329:../../../os/common/ports/AVR/chcore.h **** /**
 330:../../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ handler function declaration.
 331:../../../os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 332:../../../os/common/ports/AVR/chcore.h ****  *          port implementation.
 333:../../../os/common/ports/AVR/chcore.h ****  */
 334:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_HANDLER(id) ISR(id)
 335:../../../os/common/ports/AVR/chcore.h **** 
 336:../../../os/common/ports/AVR/chcore.h **** /**
 337:../../../os/common/ports/AVR/chcore.h ****  * @brief   Fast IRQ handler function declaration.
 338:../../../os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 339:../../../os/common/ports/AVR/chcore.h ****  *          port implementation.
 340:../../../os/common/ports/AVR/chcore.h ****  */
 341:../../../os/common/ports/AVR/chcore.h **** #define PORT_FAST_IRQ_HANDLER(id) ISR(id)
 342:../../../os/common/ports/AVR/chcore.h **** 
 343:../../../os/common/ports/AVR/chcore.h **** /**
 344:../../../os/common/ports/AVR/chcore.h ****  * @brief   Performs a context switch between two threads.
 345:../../../os/common/ports/AVR/chcore.h ****  * @details This is the most critical code in any port, this function
 346:../../../os/common/ports/AVR/chcore.h ****  *          is responsible for the context switch between 2 threads.
 347:../../../os/common/ports/AVR/chcore.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 348:../../../os/common/ports/AVR/chcore.h ****  *          switch performance so optimize here as much as you can.
 349:../../../os/common/ports/AVR/chcore.h ****  *
 350:../../../os/common/ports/AVR/chcore.h ****  * @param[in] ntp       the thread to be switched in
 351:../../../os/common/ports/AVR/chcore.h ****  * @param[in] otp       the thread to be switched out
 352:../../../os/common/ports/AVR/chcore.h ****  */
 353:../../../os/common/ports/AVR/chcore.h **** #define port_switch(ntp, otp) {                                             \
 354:../../../os/common/ports/AVR/chcore.h ****   _port_switch(ntp, otp);                                                   \
 355:../../../os/common/ports/AVR/chcore.h ****   asm volatile ("" : : : "memory");                                         \
 356:../../../os/common/ports/AVR/chcore.h **** }
 357:../../../os/common/ports/AVR/chcore.h **** 
 358:../../../os/common/ports/AVR/chcore.h **** 
 359:../../../os/common/ports/AVR/chcore.h **** /**
 360:../../../os/common/ports/AVR/chcore.h ****  * @brief   Port-related initialization code.
 361:../../../os/common/ports/AVR/chcore.h ****  * @note    This function is empty in this port.
 362:../../../os/common/ports/AVR/chcore.h ****  */
 363:../../../os/common/ports/AVR/chcore.h **** #define port_init() {                                                       \
 364:../../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 365:../../../os/common/ports/AVR/chcore.h **** }
 366:../../../os/common/ports/AVR/chcore.h **** 
 367:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 368:../../../os/common/ports/AVR/chcore.h **** /* External declarations.                                                    */
 369:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 370:../../../os/common/ports/AVR/chcore.h **** 
 371:../../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 372:../../../os/common/ports/AVR/chcore.h ****    asm module.*/
 373:../../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 374:../../../os/common/ports/AVR/chcore.h **** 
 375:../../../os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 376:../../../os/common/ports/AVR/chcore.h **** extern "C" {
 377:../../../os/common/ports/AVR/chcore.h **** #endif
 378:../../../os/common/ports/AVR/chcore.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 379:../../../os/common/ports/AVR/chcore.h ****   void _port_thread_start(void);
 380:../../../os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 381:../../../os/common/ports/AVR/chcore.h **** }
 382:../../../os/common/ports/AVR/chcore.h **** #endif
 383:../../../os/common/ports/AVR/chcore.h **** 
 384:../../../os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 385:../../../os/common/ports/AVR/chcore.h **** 
 386:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 387:../../../os/common/ports/AVR/chcore.h **** /* Module inline functions.                                                  */
 388:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 389:../../../os/common/ports/AVR/chcore.h **** 
 390:../../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 391:../../../os/common/ports/AVR/chcore.h ****    asm module.*/
 392:../../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 393:../../../os/common/ports/AVR/chcore.h **** 
 394:../../../os/common/ports/AVR/chcore.h **** /**
 395:../../../os/common/ports/AVR/chcore.h ****  * @brief   Returns a word encoding the current interrupts status.
 396:../../../os/common/ports/AVR/chcore.h ****  *
 397:../../../os/common/ports/AVR/chcore.h ****  * @return              The interrupts status.
 398:../../../os/common/ports/AVR/chcore.h ****  */
 399:../../../os/common/ports/AVR/chcore.h **** static inline syssts_t port_get_irq_status(void) {
 400:../../../os/common/ports/AVR/chcore.h **** 
 401:../../../os/common/ports/AVR/chcore.h ****   return SREG;
 402:../../../os/common/ports/AVR/chcore.h **** }
 403:../../../os/common/ports/AVR/chcore.h **** 
 404:../../../os/common/ports/AVR/chcore.h **** /**
 405:../../../os/common/ports/AVR/chcore.h ****  * @brief   Checks the interrupt status.
 406:../../../os/common/ports/AVR/chcore.h ****  *
 407:../../../os/common/ports/AVR/chcore.h ****  * @param[in] sts       the interrupt status word
 408:../../../os/common/ports/AVR/chcore.h ****  *
 409:../../../os/common/ports/AVR/chcore.h ****  * @return              The interrupt status.
 410:../../../os/common/ports/AVR/chcore.h ****  * @retval false        the word specified a disabled interrupts status.
 411:../../../os/common/ports/AVR/chcore.h ****  * @retval true         the word specified an enabled interrupts status.
 412:../../../os/common/ports/AVR/chcore.h ****  */
 413:../../../os/common/ports/AVR/chcore.h **** static inline bool port_irq_enabled(syssts_t sts) {
 414:../../../os/common/ports/AVR/chcore.h **** 
 415:../../../os/common/ports/AVR/chcore.h ****   return (bool)((sts & 0x80) != 0);
 416:../../../os/common/ports/AVR/chcore.h **** }
 417:../../../os/common/ports/AVR/chcore.h **** 
 418:../../../os/common/ports/AVR/chcore.h **** /**
 419:../../../os/common/ports/AVR/chcore.h ****  * @brief   Determines the current execution context.
 420:../../../os/common/ports/AVR/chcore.h ****  *
 421:../../../os/common/ports/AVR/chcore.h ****  * @return              The execution context.
 422:../../../os/common/ports/AVR/chcore.h ****  * @retval false        not running in ISR mode.
 423:../../../os/common/ports/AVR/chcore.h ****  * @retval true         running in ISR mode.
 424:../../../os/common/ports/AVR/chcore.h ****  */
 425:../../../os/common/ports/AVR/chcore.h **** static inline bool port_is_isr_context(void) {
 426:../../../os/common/ports/AVR/chcore.h **** 
 427:../../../os/common/ports/AVR/chcore.h ****   return __avr_in_isr;
 428:../../../os/common/ports/AVR/chcore.h **** }
 429:../../../os/common/ports/AVR/chcore.h **** 
 430:../../../os/common/ports/AVR/chcore.h **** /**
 431:../../../os/common/ports/AVR/chcore.h ****  * @brief   Kernel-lock action.
 432:../../../os/common/ports/AVR/chcore.h ****  * @details Usually this function just disables interrupts but may perform more
 433:../../../os/common/ports/AVR/chcore.h ****  *          actions.
 434:../../../os/common/ports/AVR/chcore.h ****  */
 435:../../../os/common/ports/AVR/chcore.h **** static inline void port_lock(void) {
 808               		.loc 6 435 20 view .LVU185
 809               	.LBB147:
 436:../../../os/common/ports/AVR/chcore.h **** 
 437:../../../os/common/ports/AVR/chcore.h ****   asm volatile ("cli" : : : "memory");
 810               		.loc 6 437 3 view .LVU186
 811               	/* #APP */
 812               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 813 000c F894      		cli
 814               	 ;  0 "" 2
 815               	/* #NOAPP */
 816               	.LBE147:
 817               	.LBE146:
 818               	.LBE148:
 819               	.LBE150:
 356:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 820               		.loc 5 356 34 view .LVU187
 357:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 821               		.loc 5 357 20 view .LVU188
 822 000e 00C0      		rjmp .L35
 823               	.LVL56:
 824               	.L37:
 825               	.LBB151:
 308:../../../os/hal/src/hal_queues.c **** 
 309:../../../os/hal/src/hal_queues.c ****   /* Waiting until there is a character available or a timeout occurs.*/
 310:../../../os/hal/src/hal_queues.c ****   while (iqIsEmptyI(iqp)) {
 311:../../../os/hal/src/hal_queues.c ****     msg_t msg = osalThreadEnqueueTimeoutS(&iqp->q_waiting, timeout);
 826               		.loc 1 311 5 view .LVU189
 827               	.LBB152:
 828               	.LBI152:
 828:../../../os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 829               		.loc 2 828 21 view .LVU190
 830               	.LBB153:
 831:../../../os/hal/osal/rt/osal.h **** }
 831               		.loc 2 831 3 view .LVU191
 831:../../../os/hal/osal/rt/osal.h **** }
 832               		.loc 2 831 10 is_stmt 0 view .LVU192
 833 0010 B801      		movw r22,r16
 834 0012 CE01      		movw r24,r28
 835 0014 0E94 0000 		call chThdEnqueueTimeoutS
 836               	.LVL57:
 831:../../../os/hal/osal/rt/osal.h **** }
 837               		.loc 2 831 10 view .LVU193
 838               	.LBE153:
 839               	.LBE152:
 312:../../../os/hal/src/hal_queues.c ****     if (msg < MSG_OK) {
 840               		.loc 1 312 5 is_stmt 1 view .LVU194
 841               		.loc 1 312 8 is_stmt 0 view .LVU195
 842 0018 97FD      		sbrc r25,7
 843 001a 00C0      		rjmp .L44
 844               	.LVL58:
 845               	.L35:
 846               		.loc 1 312 8 view .LVU196
 847               	.LBE151:
 310:../../../os/hal/src/hal_queues.c ****     msg_t msg = osalThreadEnqueueTimeoutS(&iqp->q_waiting, timeout);
 848               		.loc 1 310 10 view .LVU197
 849 001c 8C81      		ldd r24,Y+4
 850 001e 9D81      		ldd r25,Y+5
 310:../../../os/hal/src/hal_queues.c ****     msg_t msg = osalThreadEnqueueTimeoutS(&iqp->q_waiting, timeout);
 851               		.loc 1 310 9 view .LVU198
 852 0020 892B      		or r24,r25
 853 0022 01F0      		breq .L37
 313:../../../os/hal/src/hal_queues.c ****       osalSysUnlock();
 314:../../../os/hal/src/hal_queues.c ****       return msg;
 315:../../../os/hal/src/hal_queues.c ****     }
 316:../../../os/hal/src/hal_queues.c ****   }
 317:../../../os/hal/src/hal_queues.c **** 
 318:../../../os/hal/src/hal_queues.c ****   /* Getting the character from the queue.*/
 319:../../../os/hal/src/hal_queues.c ****   iqp->q_counter--;
 854               		.loc 1 319 3 is_stmt 1 view .LVU199
 855               		.loc 1 319 6 is_stmt 0 view .LVU200
 856 0024 8C81      		ldd r24,Y+4
 857 0026 9D81      		ldd r25,Y+5
 858               		.loc 1 319 17 view .LVU201
 859 0028 0197      		sbiw r24,1
 860 002a 9D83      		std Y+5,r25
 861 002c 8C83      		std Y+4,r24
 320:../../../os/hal/src/hal_queues.c ****   b = *iqp->q_rdptr++;
 862               		.loc 1 320 3 is_stmt 1 view .LVU202
 863               		.loc 1 320 11 is_stmt 0 view .LVU203
 864 002e EC85      		ldd r30,Y+12
 865 0030 FD85      		ldd r31,Y+13
 866               		.loc 1 320 20 view .LVU204
 867 0032 CF01      		movw r24,r30
 868 0034 0196      		adiw r24,1
 869 0036 9D87      		std Y+13,r25
 870 0038 8C87      		std Y+12,r24
 871               		.loc 1 320 5 view .LVU205
 872 003a 1081      		ld r17,Z
 873               	.LVL59:
 321:../../../os/hal/src/hal_queues.c ****   if (iqp->q_rdptr >= iqp->q_top) {
 874               		.loc 1 321 3 is_stmt 1 view .LVU206
 875               		.loc 1 321 6 is_stmt 0 view .LVU207
 876 003c 2885      		ldd r18,Y+8
 877 003e 3985      		ldd r19,Y+9
 878 0040 8217      		cp r24,r18
 879 0042 9307      		cpc r25,r19
 880 0044 00F0      		brlo .L38
 322:../../../os/hal/src/hal_queues.c ****     iqp->q_rdptr = iqp->q_buffer;
 881               		.loc 1 322 5 is_stmt 1 view .LVU208
 882               		.loc 1 322 18 is_stmt 0 view .LVU209
 883 0046 8E81      		ldd r24,Y+6
 884 0048 9F81      		ldd r25,Y+7
 885 004a 9D87      		std Y+13,r25
 886 004c 8C87      		std Y+12,r24
 887               	.L38:
 323:../../../os/hal/src/hal_queues.c ****   }
 324:../../../os/hal/src/hal_queues.c **** 
 325:../../../os/hal/src/hal_queues.c ****   /* Inform the low side that the queue has at least one slot available.*/
 326:../../../os/hal/src/hal_queues.c ****   if (iqp->q_notify != NULL) {
 888               		.loc 1 326 3 is_stmt 1 view .LVU210
 889               		.loc 1 326 10 is_stmt 0 view .LVU211
 890 004e EE85      		ldd r30,Y+14
 891 0050 FF85      		ldd r31,Y+15
 892               		.loc 1 326 6 view .LVU212
 893 0052 3097      		sbiw r30,0
 894 0054 01F0      		breq .L39
 327:../../../os/hal/src/hal_queues.c ****     iqp->q_notify(iqp);
 895               		.loc 1 327 5 is_stmt 1 view .LVU213
 896 0056 CE01      		movw r24,r28
 897 0058 0995      		icall
 898               	.LVL60:
 899               	.L39:
 328:../../../os/hal/src/hal_queues.c ****   }
 329:../../../os/hal/src/hal_queues.c **** 
 330:../../../os/hal/src/hal_queues.c ****   osalSysUnlock();
 900               		.loc 1 330 3 view .LVU214
 901               	.LBB160:
 902               	.LBI160:
 520:../../../os/hal/osal/rt/osal.h **** 
 903               		.loc 2 520 20 view .LVU215
 904               	.LBE160:
 522:../../../os/hal/osal/rt/osal.h **** }
 905               		.loc 2 522 3 view .LVU216
 906               	.LBB165:
 907               	.LBB161:
 908               	.LBI161:
 358:../../../os/rt/include/chsys.h **** }
 359:../../../os/rt/include/chsys.h **** 
 360:../../../os/rt/include/chsys.h **** /**
 361:../../../os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:../../../os/rt/include/chsys.h ****  *
 363:../../../os/rt/include/chsys.h ****  * @special
 364:../../../os/rt/include/chsys.h ****  */
 365:../../../os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 909               		.loc 5 365 20 view .LVU217
 910               	.LBB162:
 366:../../../os/rt/include/chsys.h **** 
 367:../../../os/rt/include/chsys.h ****   _dbg_check_unlock();
 911               		.loc 5 367 22 view .LVU218
 368:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 912               		.loc 5 368 33 view .LVU219
 369:../../../os/rt/include/chsys.h **** 
 370:../../../os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:../../../os/rt/include/chsys.h ****      in a critical section not followed by a chSchResceduleS(), this means
 372:../../../os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:../../../os/rt/include/chsys.h ****      the ready list.*/
 374:../../../os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 913               		.loc 5 374 3 view .LVU220
 914               		.loc 5 374 3 view .LVU221
 375:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:../../../os/rt/include/chsys.h ****               "priority order violation");
 377:../../../os/rt/include/chsys.h **** 
 378:../../../os/rt/include/chsys.h ****   port_unlock();
 915               		.loc 5 378 3 view .LVU222
 916               	.LBB163:
 917               	.LBI163:
 438:../../../os/common/ports/AVR/chcore.h **** }
 439:../../../os/common/ports/AVR/chcore.h **** 
 440:../../../os/common/ports/AVR/chcore.h **** /**
 441:../../../os/common/ports/AVR/chcore.h ****  * @brief   Kernel-unlock action.
 442:../../../os/common/ports/AVR/chcore.h ****  * @details Usually this function just enables interrupts but may perform more
 443:../../../os/common/ports/AVR/chcore.h ****  *          actions.
 444:../../../os/common/ports/AVR/chcore.h ****  */
 445:../../../os/common/ports/AVR/chcore.h **** static inline void port_unlock(void) {
 918               		.loc 6 445 20 view .LVU223
 919               	.LBB164:
 446:../../../os/common/ports/AVR/chcore.h **** 
 447:../../../os/common/ports/AVR/chcore.h ****   asm volatile ("sei" : : : "memory");
 920               		.loc 6 447 3 view .LVU224
 921               	/* #APP */
 922               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 923 005a 7894      		sei
 924               	 ;  0 "" 2
 925               	/* #NOAPP */
 926               	.LBE164:
 927               	.LBE163:
 928               	.LBE162:
 929               	.LBE161:
 930               	.LBE165:
 331:../../../os/hal/src/hal_queues.c **** 
 332:../../../os/hal/src/hal_queues.c ****   return (msg_t)b;
 931               		.loc 1 332 3 view .LVU225
 932               		.loc 1 332 10 is_stmt 0 view .LVU226
 933 005c 812F      		mov r24,r17
 934 005e 90E0      		ldi r25,0
 935               	/* epilogue start */
 333:../../../os/hal/src/hal_queues.c **** }
 936               		.loc 1 333 1 view .LVU227
 937 0060 DF91      		pop r29
 938 0062 CF91      		pop r28
 939               	.LVL61:
 940               		.loc 1 333 1 view .LVU228
 941 0064 1F91      		pop r17
 942               	.LVL62:
 943               		.loc 1 333 1 view .LVU229
 944 0066 0F91      		pop r16
 945               	.LVL63:
 946               		.loc 1 333 1 view .LVU230
 947 0068 0895      		ret
 948               	.LVL64:
 949               	.L44:
 950               	.LBB166:
 313:../../../os/hal/src/hal_queues.c ****       return msg;
 951               		.loc 1 313 7 is_stmt 1 view .LVU231
 952               	.LBB154:
 953               	.LBI154:
 520:../../../os/hal/osal/rt/osal.h **** 
 954               		.loc 2 520 20 view .LVU232
 955               	.LBE154:
 956               	.LBE166:
 522:../../../os/hal/osal/rt/osal.h **** }
 957               		.loc 2 522 3 view .LVU233
 958               	.LBB167:
 959               	.LBB159:
 960               	.LBB155:
 961               	.LBI155:
 365:../../../os/rt/include/chsys.h **** 
 962               		.loc 5 365 20 view .LVU234
 963               	.LBB156:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 964               		.loc 5 367 22 view .LVU235
 368:../../../os/rt/include/chsys.h **** 
 965               		.loc 5 368 33 view .LVU236
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 966               		.loc 5 374 3 view .LVU237
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 967               		.loc 5 374 3 view .LVU238
 968               		.loc 5 378 3 view .LVU239
 969               	.LBB157:
 970               	.LBI157:
 445:../../../os/common/ports/AVR/chcore.h **** 
 971               		.loc 6 445 20 view .LVU240
 972               	.LBB158:
 973               		.loc 6 447 3 view .LVU241
 974               	/* #APP */
 975               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 976 006a 7894      		sei
 977               	 ;  0 "" 2
 978               	/* #NOAPP */
 979               	.LBE158:
 980               	.LBE157:
 981               	.LBE156:
 982               	.LBE155:
 983               	.LBE159:
 314:../../../os/hal/src/hal_queues.c ****     }
 984               		.loc 1 314 7 view .LVU242
 985               	/* epilogue start */
 986               	.LBE167:
 987               		.loc 1 333 1 is_stmt 0 view .LVU243
 988 006c DF91      		pop r29
 989 006e CF91      		pop r28
 990               	.LVL65:
 991               		.loc 1 333 1 view .LVU244
 992 0070 1F91      		pop r17
 993 0072 0F91      		pop r16
 994               	.LVL66:
 995               		.loc 1 333 1 view .LVU245
 996 0074 0895      		ret
 997               		.cfi_endproc
 998               	.LFE179:
 1000               		.section	.text.iqReadI,"ax",@progbits
 1001               	.global	iqReadI
 1003               	iqReadI:
 1004               	.LVL67:
 1005               	.LFB180:
 334:../../../os/hal/src/hal_queues.c **** 
 335:../../../os/hal/src/hal_queues.c **** /**
 336:../../../os/hal/src/hal_queues.c ****  * @brief   Input queue non-blocking read.
 337:../../../os/hal/src/hal_queues.c ****  * @details The function reads data from an input queue into a buffer. The
 338:../../../os/hal/src/hal_queues.c ****  *          operation completes immediately.
 339:../../../os/hal/src/hal_queues.c ****  *
 340:../../../os/hal/src/hal_queues.c ****  * @param[in] iqp       pointer to an @p input_queue_t structure
 341:../../../os/hal/src/hal_queues.c ****  * @param[out] bp       pointer to the data buffer
 342:../../../os/hal/src/hal_queues.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 343:../../../os/hal/src/hal_queues.c ****  *                      value 0 is reserved
 344:../../../os/hal/src/hal_queues.c ****  * @return              The number of bytes effectively transferred.
 345:../../../os/hal/src/hal_queues.c ****  *
 346:../../../os/hal/src/hal_queues.c ****  * @iclass
 347:../../../os/hal/src/hal_queues.c ****  */
 348:../../../os/hal/src/hal_queues.c **** size_t iqReadI(input_queue_t *iqp, uint8_t *bp, size_t n) {
 1006               		.loc 1 348 59 is_stmt 1 view -0
 1007               		.cfi_startproc
 1008               		.loc 1 348 59 is_stmt 0 view .LVU247
 1009 0000 EF92      		push r14
 1010               	.LCFI27:
 1011               		.cfi_def_cfa_offset 3
 1012               		.cfi_offset 14, -2
 1013 0002 FF92      		push r15
 1014               	.LCFI28:
 1015               		.cfi_def_cfa_offset 4
 1016               		.cfi_offset 15, -3
 1017 0004 0F93      		push r16
 1018               	.LCFI29:
 1019               		.cfi_def_cfa_offset 5
 1020               		.cfi_offset 16, -4
 1021 0006 1F93      		push r17
 1022               	.LCFI30:
 1023               		.cfi_def_cfa_offset 6
 1024               		.cfi_offset 17, -5
 1025 0008 CF93      		push r28
 1026               	.LCFI31:
 1027               		.cfi_def_cfa_offset 7
 1028               		.cfi_offset 28, -6
 1029 000a DF93      		push r29
 1030               	.LCFI32:
 1031               		.cfi_def_cfa_offset 8
 1032               		.cfi_offset 29, -7
 1033               	/* prologue: function */
 1034               	/* frame size = 0 */
 1035               	/* stack size = 6 */
 1036               	.L__stack_usage = 6
 1037 000c EC01      		movw r28,r24
 349:../../../os/hal/src/hal_queues.c ****   qnotify_t nfy = iqp->q_notify;
 1038               		.loc 1 349 3 is_stmt 1 view .LVU248
 1039               		.loc 1 349 13 is_stmt 0 view .LVU249
 1040 000e EE84      		ldd r14,Y+14
 1041 0010 FF84      		ldd r15,Y+15
 1042               	.LVL68:
 350:../../../os/hal/src/hal_queues.c ****   size_t rd;
 1043               		.loc 1 350 3 is_stmt 1 view .LVU250
 351:../../../os/hal/src/hal_queues.c **** 
 352:../../../os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 1044               		.loc 1 352 23 view .LVU251
 353:../../../os/hal/src/hal_queues.c **** 
 354:../../../os/hal/src/hal_queues.c ****   rd = iq_read(iqp, bp, n);
 1045               		.loc 1 354 3 view .LVU252
 1046               		.loc 1 354 8 is_stmt 0 view .LVU253
 1047 0012 0E94 0000 		call iq_read
 1048               	.LVL69:
 1049               		.loc 1 354 8 view .LVU254
 1050 0016 8C01      		movw r16,r24
 1051               	.LVL70:
 355:../../../os/hal/src/hal_queues.c **** 
 356:../../../os/hal/src/hal_queues.c ****   /* Inform the low side that the queue has at least one character
 357:../../../os/hal/src/hal_queues.c ****      available.*/
 358:../../../os/hal/src/hal_queues.c ****   if ((rd > (size_t)0) && (nfy != NULL)) {
 1052               		.loc 1 358 3 is_stmt 1 view .LVU255
 1053               		.loc 1 358 6 is_stmt 0 view .LVU256
 1054 0018 892B      		or r24,r25
 1055 001a 01F0      		breq .L45
 1056               		.loc 1 358 24 discriminator 1 view .LVU257
 1057 001c E114      		cp r14,__zero_reg__
 1058 001e F104      		cpc r15,__zero_reg__
 1059 0020 01F0      		breq .L45
 359:../../../os/hal/src/hal_queues.c ****     nfy(iqp);
 1060               		.loc 1 359 5 is_stmt 1 view .LVU258
 1061 0022 CE01      		movw r24,r28
 1062 0024 F701      		movw r30,r14
 1063 0026 0995      		icall
 1064               	.LVL71:
 360:../../../os/hal/src/hal_queues.c ****   }
 361:../../../os/hal/src/hal_queues.c **** 
 362:../../../os/hal/src/hal_queues.c ****   return rd;
 1065               		.loc 1 362 3 view .LVU259
 1066               	.L45:
 363:../../../os/hal/src/hal_queues.c **** }
 1067               		.loc 1 363 1 is_stmt 0 view .LVU260
 1068 0028 C801      		movw r24,r16
 1069               	/* epilogue start */
 1070 002a DF91      		pop r29
 1071 002c CF91      		pop r28
 1072               	.LVL72:
 1073               		.loc 1 363 1 view .LVU261
 1074 002e 1F91      		pop r17
 1075 0030 0F91      		pop r16
 1076               	.LVL73:
 1077               		.loc 1 363 1 view .LVU262
 1078 0032 FF90      		pop r15
 1079 0034 EF90      		pop r14
 1080               	.LVL74:
 1081               		.loc 1 363 1 view .LVU263
 1082 0036 0895      		ret
 1083               		.cfi_endproc
 1084               	.LFE180:
 1086               		.section	.text.iqReadTimeout,"ax",@progbits
 1087               	.global	iqReadTimeout
 1089               	iqReadTimeout:
 1090               	.LVL75:
 1091               	.LFB181:
 364:../../../os/hal/src/hal_queues.c **** 
 365:../../../os/hal/src/hal_queues.c **** /**
 366:../../../os/hal/src/hal_queues.c ****  * @brief   Input queue read with timeout.
 367:../../../os/hal/src/hal_queues.c ****  * @details The function reads data from an input queue into a buffer. The
 368:../../../os/hal/src/hal_queues.c ****  *          operation completes when the specified amount of data has been
 369:../../../os/hal/src/hal_queues.c ****  *          transferred or after the specified timeout or if the queue has
 370:../../../os/hal/src/hal_queues.c ****  *          been reset.
 371:../../../os/hal/src/hal_queues.c ****  * @note    The function is not atomic, if you need atomicity it is suggested
 372:../../../os/hal/src/hal_queues.c ****  *          to use a semaphore or a mutex for mutual exclusion.
 373:../../../os/hal/src/hal_queues.c ****  * @note    The callback is invoked after removing each character from the
 374:../../../os/hal/src/hal_queues.c ****  *          queue.
 375:../../../os/hal/src/hal_queues.c ****  *
 376:../../../os/hal/src/hal_queues.c ****  * @param[in] iqp       pointer to an @p input_queue_t structure
 377:../../../os/hal/src/hal_queues.c ****  * @param[out] bp       pointer to the data buffer
 378:../../../os/hal/src/hal_queues.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 379:../../../os/hal/src/hal_queues.c ****  *                      value 0 is reserved
 380:../../../os/hal/src/hal_queues.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 381:../../../os/hal/src/hal_queues.c ****  *                      the following special values are allowed:
 382:../../../os/hal/src/hal_queues.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 383:../../../os/hal/src/hal_queues.c ****  *                      - @a TIME_INFINITE no timeout.
 384:../../../os/hal/src/hal_queues.c ****  *                      .
 385:../../../os/hal/src/hal_queues.c ****  * @return              The number of bytes effectively transferred.
 386:../../../os/hal/src/hal_queues.c ****  *
 387:../../../os/hal/src/hal_queues.c ****  * @api
 388:../../../os/hal/src/hal_queues.c ****  */
 389:../../../os/hal/src/hal_queues.c **** size_t iqReadTimeout(input_queue_t *iqp, uint8_t *bp,
 390:../../../os/hal/src/hal_queues.c ****                      size_t n, sysinterval_t timeout) {
 1092               		.loc 1 390 55 is_stmt 1 view -0
 1093               		.cfi_startproc
 1094               		.loc 1 390 55 is_stmt 0 view .LVU265
 1095 0000 6F92      		push r6
 1096               	.LCFI33:
 1097               		.cfi_def_cfa_offset 3
 1098               		.cfi_offset 6, -2
 1099 0002 7F92      		push r7
 1100               	.LCFI34:
 1101               		.cfi_def_cfa_offset 4
 1102               		.cfi_offset 7, -3
 1103 0004 8F92      		push r8
 1104               	.LCFI35:
 1105               		.cfi_def_cfa_offset 5
 1106               		.cfi_offset 8, -4
 1107 0006 9F92      		push r9
 1108               	.LCFI36:
 1109               		.cfi_def_cfa_offset 6
 1110               		.cfi_offset 9, -5
 1111 0008 AF92      		push r10
 1112               	.LCFI37:
 1113               		.cfi_def_cfa_offset 7
 1114               		.cfi_offset 10, -6
 1115 000a BF92      		push r11
 1116               	.LCFI38:
 1117               		.cfi_def_cfa_offset 8
 1118               		.cfi_offset 11, -7
 1119 000c CF92      		push r12
 1120               	.LCFI39:
 1121               		.cfi_def_cfa_offset 9
 1122               		.cfi_offset 12, -8
 1123 000e DF92      		push r13
 1124               	.LCFI40:
 1125               		.cfi_def_cfa_offset 10
 1126               		.cfi_offset 13, -9
 1127 0010 EF92      		push r14
 1128               	.LCFI41:
 1129               		.cfi_def_cfa_offset 11
 1130               		.cfi_offset 14, -10
 1131 0012 FF92      		push r15
 1132               	.LCFI42:
 1133               		.cfi_def_cfa_offset 12
 1134               		.cfi_offset 15, -11
 1135 0014 0F93      		push r16
 1136               	.LCFI43:
 1137               		.cfi_def_cfa_offset 13
 1138               		.cfi_offset 16, -12
 1139 0016 1F93      		push r17
 1140               	.LCFI44:
 1141               		.cfi_def_cfa_offset 14
 1142               		.cfi_offset 17, -13
 1143 0018 CF93      		push r28
 1144               	.LCFI45:
 1145               		.cfi_def_cfa_offset 15
 1146               		.cfi_offset 28, -14
 1147 001a DF93      		push r29
 1148               	.LCFI46:
 1149               		.cfi_def_cfa_offset 16
 1150               		.cfi_offset 29, -15
 1151               	/* prologue: function */
 1152               	/* frame size = 0 */
 1153               	/* stack size = 14 */
 1154               	.L__stack_usage = 14
 1155 001c 4C01      		movw r8,r24
 1156 001e 7B01      		movw r14,r22
 1157 0020 6A01      		movw r12,r20
 1158 0022 3901      		movw r6,r18
 391:../../../os/hal/src/hal_queues.c ****   qnotify_t nfy = iqp->q_notify;
 1159               		.loc 1 391 3 is_stmt 1 view .LVU266
 1160               		.loc 1 391 13 is_stmt 0 view .LVU267
 1161 0024 FC01      		movw r30,r24
 1162 0026 A684      		ldd r10,Z+14
 1163 0028 B784      		ldd r11,Z+15
 1164               	.LVL76:
 392:../../../os/hal/src/hal_queues.c ****   size_t rd = 0;
 1165               		.loc 1 392 3 is_stmt 1 view .LVU268
 393:../../../os/hal/src/hal_queues.c **** 
 394:../../../os/hal/src/hal_queues.c ****   osalDbgCheck(n > 0U);
 1166               		.loc 1 394 3 view .LVU269
 1167               		.loc 1 394 3 view .LVU270
 395:../../../os/hal/src/hal_queues.c **** 
 396:../../../os/hal/src/hal_queues.c ****   osalSysLock();
 1168               		.loc 1 396 3 view .LVU271
 1169               	.LBB168:
 1170               	.LBI168:
 509:../../../os/hal/osal/rt/osal.h **** 
 1171               		.loc 2 509 20 view .LVU272
 1172               	.LBE168:
 511:../../../os/hal/osal/rt/osal.h **** }
 1173               		.loc 2 511 3 view .LVU273
 1174               	.LBB173:
 1175               	.LBB169:
 1176               	.LBI169:
 353:../../../os/rt/include/chsys.h **** 
 1177               		.loc 5 353 20 view .LVU274
 1178               	.LBE169:
 1179               	.LBE173:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1180               		.loc 5 355 3 view .LVU275
 1181               	.LBB174:
 1182               	.LBB172:
 1183               	.LBB170:
 1184               	.LBI170:
 435:../../../os/common/ports/AVR/chcore.h **** 
 1185               		.loc 6 435 20 view .LVU276
 1186               	.LBB171:
 437:../../../os/common/ports/AVR/chcore.h **** }
 1187               		.loc 6 437 3 view .LVU277
 1188               	/* #APP */
 1189               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 1190 002a F894      		cli
 1191               	 ;  0 "" 2
 1192               	/* #NOAPP */
 1193               	.LBE171:
 1194               	.LBE170:
 1195               	.LBE172:
 1196               	.LBE174:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 1197               		.loc 5 356 34 view .LVU278
 357:../../../os/rt/include/chsys.h **** }
 1198               		.loc 5 357 20 view .LVU279
 392:../../../os/hal/src/hal_queues.c **** 
 1199               		.loc 1 392 10 is_stmt 0 view .LVU280
 1200 002c 10E0      		ldi r17,0
 1201 002e 00E0      		ldi r16,0
 397:../../../os/hal/src/hal_queues.c **** 
 398:../../../os/hal/src/hal_queues.c ****   while (rd < n) {
 1202               		.loc 1 398 9 view .LVU281
 1203 0030 452B      		or r20,r21
 1204 0032 01F4      		brne .L58
 1205 0034 00C0      		rjmp .L54
 1206               	.LVL77:
 1207               	.L55:
 1208               	.LBB175:
 399:../../../os/hal/src/hal_queues.c ****     size_t done;
 400:../../../os/hal/src/hal_queues.c **** 
 401:../../../os/hal/src/hal_queues.c ****     done = iq_read(iqp, bp, n);
 402:../../../os/hal/src/hal_queues.c ****     if (done == (size_t)0) {
 403:../../../os/hal/src/hal_queues.c ****       msg_t msg = osalThreadEnqueueTimeoutS(&iqp->q_waiting, timeout);
 404:../../../os/hal/src/hal_queues.c **** 
 405:../../../os/hal/src/hal_queues.c ****       /* Anything except MSG_OK causes the operation to stop.*/
 406:../../../os/hal/src/hal_queues.c ****       if (msg != MSG_OK) {
 407:../../../os/hal/src/hal_queues.c ****         break;
 408:../../../os/hal/src/hal_queues.c ****       }
 409:../../../os/hal/src/hal_queues.c ****     }
 410:../../../os/hal/src/hal_queues.c ****     else {
 411:../../../os/hal/src/hal_queues.c ****       /* Inform the low side that the queue has at least one empty slot
 412:../../../os/hal/src/hal_queues.c ****          available.*/
 413:../../../os/hal/src/hal_queues.c ****       if (nfy != NULL) {
 1209               		.loc 1 413 7 is_stmt 1 view .LVU282
 1210               		.loc 1 413 10 is_stmt 0 view .LVU283
 1211 0036 A114      		cp r10,__zero_reg__
 1212 0038 B104      		cpc r11,__zero_reg__
 1213 003a 01F0      		breq .L57
 414:../../../os/hal/src/hal_queues.c ****         nfy(iqp);
 1214               		.loc 1 414 9 is_stmt 1 view .LVU284
 1215 003c C401      		movw r24,r8
 1216               	.LVL78:
 1217               		.loc 1 414 9 is_stmt 0 view .LVU285
 1218 003e F501      		movw r30,r10
 1219 0040 0995      		icall
 1220               	.LVL79:
 1221               	.L57:
 415:../../../os/hal/src/hal_queues.c ****       }
 416:../../../os/hal/src/hal_queues.c **** 
 417:../../../os/hal/src/hal_queues.c ****       /* Giving a preemption chance in a controlled point.*/
 418:../../../os/hal/src/hal_queues.c ****       osalSysUnlock();
 1222               		.loc 1 418 7 is_stmt 1 view .LVU286
 1223               	.LBB176:
 1224               	.LBI176:
 520:../../../os/hal/osal/rt/osal.h **** 
 1225               		.loc 2 520 20 view .LVU287
 1226               	.LBE176:
 1227               	.LBE175:
 522:../../../os/hal/osal/rt/osal.h **** }
 1228               		.loc 2 522 3 view .LVU288
 1229               	.LBB192:
 1230               	.LBB181:
 1231               	.LBB177:
 1232               	.LBI177:
 365:../../../os/rt/include/chsys.h **** 
 1233               		.loc 5 365 20 view .LVU289
 1234               	.LBB178:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1235               		.loc 5 367 22 view .LVU290
 368:../../../os/rt/include/chsys.h **** 
 1236               		.loc 5 368 33 view .LVU291
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1237               		.loc 5 374 3 view .LVU292
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1238               		.loc 5 374 3 view .LVU293
 1239               		.loc 5 378 3 view .LVU294
 1240               	.LBB179:
 1241               	.LBI179:
 445:../../../os/common/ports/AVR/chcore.h **** 
 1242               		.loc 6 445 20 view .LVU295
 1243               	.LBB180:
 1244               		.loc 6 447 3 view .LVU296
 1245               	/* #APP */
 1246               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1247 0042 7894      		sei
 1248               	 ;  0 "" 2
 1249               	/* #NOAPP */
 1250               	.LBE180:
 1251               	.LBE179:
 1252               	.LBE178:
 1253               	.LBE177:
 1254               	.LBE181:
 419:../../../os/hal/src/hal_queues.c **** 
 420:../../../os/hal/src/hal_queues.c ****       rd += done;
 1255               		.loc 1 420 7 view .LVU297
 1256               		.loc 1 420 10 is_stmt 0 view .LVU298
 1257 0044 0C0F      		add r16,r28
 1258 0046 1D1F      		adc r17,r29
 1259               	.LVL80:
 421:../../../os/hal/src/hal_queues.c ****       bp += done;
 1260               		.loc 1 421 7 is_stmt 1 view .LVU299
 1261               		.loc 1 421 10 is_stmt 0 view .LVU300
 1262 0048 EC0E      		add r14,r28
 1263 004a FD1E      		adc r15,r29
 1264               	.LVL81:
 422:../../../os/hal/src/hal_queues.c **** 
 423:../../../os/hal/src/hal_queues.c ****       osalSysLock();
 1265               		.loc 1 423 7 is_stmt 1 view .LVU301
 1266               	.LBB182:
 1267               	.LBI182:
 509:../../../os/hal/osal/rt/osal.h **** 
 1268               		.loc 2 509 20 view .LVU302
 1269               	.LBE182:
 1270               	.LBE192:
 511:../../../os/hal/osal/rt/osal.h **** }
 1271               		.loc 2 511 3 view .LVU303
 1272               	.LBB193:
 1273               	.LBB187:
 1274               	.LBB183:
 1275               	.LBI183:
 353:../../../os/rt/include/chsys.h **** 
 1276               		.loc 5 353 20 view .LVU304
 1277               	.LBE183:
 1278               	.LBE187:
 1279               	.LBE193:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1280               		.loc 5 355 3 view .LVU305
 1281               	.LBB194:
 1282               	.LBB188:
 1283               	.LBB186:
 1284               	.LBB184:
 1285               	.LBI184:
 435:../../../os/common/ports/AVR/chcore.h **** 
 1286               		.loc 6 435 20 view .LVU306
 1287               	.LBB185:
 437:../../../os/common/ports/AVR/chcore.h **** }
 1288               		.loc 6 437 3 view .LVU307
 1289               	/* #APP */
 1290               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 1291 004c F894      		cli
 1292               	 ;  0 "" 2
 1293               	/* #NOAPP */
 1294               	.LBE185:
 1295               	.LBE184:
 1296               	.LBE186:
 1297               	.LBE188:
 1298               	.LBE194:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 1299               		.loc 5 356 34 view .LVU308
 357:../../../os/rt/include/chsys.h **** }
 1300               		.loc 5 357 20 view .LVU309
 1301               	.L56:
 398:../../../os/hal/src/hal_queues.c ****     size_t done;
 1302               		.loc 1 398 9 is_stmt 0 view .LVU310
 1303 004e 0C15      		cp r16,r12
 1304 0050 1D05      		cpc r17,r13
 1305 0052 00F4      		brsh .L54
 1306               	.LVL82:
 1307               	.L58:
 1308               	.LBB195:
 399:../../../os/hal/src/hal_queues.c **** 
 1309               		.loc 1 399 5 is_stmt 1 view .LVU311
 401:../../../os/hal/src/hal_queues.c ****     if (done == (size_t)0) {
 1310               		.loc 1 401 5 view .LVU312
 401:../../../os/hal/src/hal_queues.c ****     if (done == (size_t)0) {
 1311               		.loc 1 401 12 is_stmt 0 view .LVU313
 1312 0054 A601      		movw r20,r12
 1313 0056 B701      		movw r22,r14
 1314 0058 C401      		movw r24,r8
 1315 005a 0E94 0000 		call iq_read
 1316               	.LVL83:
 1317 005e EC01      		movw r28,r24
 1318               	.LVL84:
 402:../../../os/hal/src/hal_queues.c ****       msg_t msg = osalThreadEnqueueTimeoutS(&iqp->q_waiting, timeout);
 1319               		.loc 1 402 5 is_stmt 1 view .LVU314
 402:../../../os/hal/src/hal_queues.c ****       msg_t msg = osalThreadEnqueueTimeoutS(&iqp->q_waiting, timeout);
 1320               		.loc 1 402 8 is_stmt 0 view .LVU315
 1321 0060 892B      		or r24,r25
 1322 0062 01F4      		brne .L55
 1323               	.LBB189:
 403:../../../os/hal/src/hal_queues.c **** 
 1324               		.loc 1 403 7 is_stmt 1 view .LVU316
 1325               	.LVL85:
 1326               	.LBB190:
 1327               	.LBI190:
 828:../../../os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 1328               		.loc 2 828 21 view .LVU317
 1329               	.LBB191:
 831:../../../os/hal/osal/rt/osal.h **** }
 1330               		.loc 2 831 3 view .LVU318
 831:../../../os/hal/osal/rt/osal.h **** }
 1331               		.loc 2 831 10 is_stmt 0 view .LVU319
 1332 0064 B301      		movw r22,r6
 1333 0066 C401      		movw r24,r8
 1334               	.LVL86:
 831:../../../os/hal/osal/rt/osal.h **** }
 1335               		.loc 2 831 10 view .LVU320
 1336 0068 0E94 0000 		call chThdEnqueueTimeoutS
 1337               	.LVL87:
 831:../../../os/hal/osal/rt/osal.h **** }
 1338               		.loc 2 831 10 view .LVU321
 1339               	.LBE191:
 1340               	.LBE190:
 406:../../../os/hal/src/hal_queues.c ****         break;
 1341               		.loc 1 406 7 is_stmt 1 view .LVU322
 406:../../../os/hal/src/hal_queues.c ****         break;
 1342               		.loc 1 406 10 is_stmt 0 view .LVU323
 1343 006c 892B      		or r24,r25
 1344 006e 01F0      		breq .L56
 1345               	.LVL88:
 1346               	.L54:
 406:../../../os/hal/src/hal_queues.c ****         break;
 1347               		.loc 1 406 10 view .LVU324
 1348               	.LBE189:
 1349               	.LBE195:
 424:../../../os/hal/src/hal_queues.c ****     }
 425:../../../os/hal/src/hal_queues.c ****   }
 426:../../../os/hal/src/hal_queues.c **** 
 427:../../../os/hal/src/hal_queues.c ****   osalSysUnlock();
 1350               		.loc 1 427 3 is_stmt 1 view .LVU325
 1351               	.LBB196:
 1352               	.LBI196:
 520:../../../os/hal/osal/rt/osal.h **** 
 1353               		.loc 2 520 20 view .LVU326
 1354               	.LBE196:
 522:../../../os/hal/osal/rt/osal.h **** }
 1355               		.loc 2 522 3 view .LVU327
 1356               	.LBB201:
 1357               	.LBB197:
 1358               	.LBI197:
 365:../../../os/rt/include/chsys.h **** 
 1359               		.loc 5 365 20 view .LVU328
 1360               	.LBB198:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1361               		.loc 5 367 22 view .LVU329
 368:../../../os/rt/include/chsys.h **** 
 1362               		.loc 5 368 33 view .LVU330
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1363               		.loc 5 374 3 view .LVU331
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1364               		.loc 5 374 3 view .LVU332
 1365               		.loc 5 378 3 view .LVU333
 1366               	.LBB199:
 1367               	.LBI199:
 445:../../../os/common/ports/AVR/chcore.h **** 
 1368               		.loc 6 445 20 view .LVU334
 1369               	.LBB200:
 1370               		.loc 6 447 3 view .LVU335
 1371               	/* #APP */
 1372               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1373 0070 7894      		sei
 1374               	 ;  0 "" 2
 1375               	/* #NOAPP */
 1376               	.LBE200:
 1377               	.LBE199:
 1378               	.LBE198:
 1379               	.LBE197:
 1380               	.LBE201:
 428:../../../os/hal/src/hal_queues.c ****   return rd;
 1381               		.loc 1 428 3 view .LVU336
 429:../../../os/hal/src/hal_queues.c **** }
 1382               		.loc 1 429 1 is_stmt 0 view .LVU337
 1383 0072 C801      		movw r24,r16
 1384               	/* epilogue start */
 1385 0074 DF91      		pop r29
 1386 0076 CF91      		pop r28
 1387 0078 1F91      		pop r17
 1388 007a 0F91      		pop r16
 1389 007c FF90      		pop r15
 1390 007e EF90      		pop r14
 1391               	.LVL89:
 1392               		.loc 1 429 1 view .LVU338
 1393 0080 DF90      		pop r13
 1394 0082 CF90      		pop r12
 1395               	.LVL90:
 1396               		.loc 1 429 1 view .LVU339
 1397 0084 BF90      		pop r11
 1398 0086 AF90      		pop r10
 1399               	.LVL91:
 1400               		.loc 1 429 1 view .LVU340
 1401 0088 9F90      		pop r9
 1402 008a 8F90      		pop r8
 1403               	.LVL92:
 1404               		.loc 1 429 1 view .LVU341
 1405 008c 7F90      		pop r7
 1406 008e 6F90      		pop r6
 1407               	.LVL93:
 1408               		.loc 1 429 1 view .LVU342
 1409 0090 0895      		ret
 1410               		.cfi_endproc
 1411               	.LFE181:
 1413               		.section	.text.oqObjectInit,"ax",@progbits
 1414               	.global	oqObjectInit
 1416               	oqObjectInit:
 1417               	.LVL94:
 1418               	.LFB182:
 430:../../../os/hal/src/hal_queues.c **** 
 431:../../../os/hal/src/hal_queues.c **** /**
 432:../../../os/hal/src/hal_queues.c ****  * @brief   Initializes an output queue.
 433:../../../os/hal/src/hal_queues.c ****  * @details A Semaphore is internally initialized and works as a counter of
 434:../../../os/hal/src/hal_queues.c ****  *          the free bytes in the queue.
 435:../../../os/hal/src/hal_queues.c ****  * @note    The callback is invoked from within the S-Locked system state.
 436:../../../os/hal/src/hal_queues.c ****  *
 437:../../../os/hal/src/hal_queues.c ****  * @param[out] oqp      pointer to an @p output_queue_t structure
 438:../../../os/hal/src/hal_queues.c ****  * @param[in] bp        pointer to a memory area allocated as queue buffer
 439:../../../os/hal/src/hal_queues.c ****  * @param[in] size      size of the queue buffer
 440:../../../os/hal/src/hal_queues.c ****  * @param[in] onfy      pointer to a callback function that is invoked when
 441:../../../os/hal/src/hal_queues.c ****  *                      data is written to the queue. The value can be @p NULL.
 442:../../../os/hal/src/hal_queues.c ****  * @param[in] link      application defined pointer
 443:../../../os/hal/src/hal_queues.c ****  *
 444:../../../os/hal/src/hal_queues.c ****  * @init
 445:../../../os/hal/src/hal_queues.c ****  */
 446:../../../os/hal/src/hal_queues.c **** void oqObjectInit(output_queue_t *oqp, uint8_t *bp, size_t size,
 447:../../../os/hal/src/hal_queues.c ****                   qnotify_t onfy, void *link) {
 1419               		.loc 1 447 47 is_stmt 1 view -0
 1420               		.cfi_startproc
 1421               		.loc 1 447 47 is_stmt 0 view .LVU344
 1422 0000 0F93      		push r16
 1423               	.LCFI47:
 1424               		.cfi_def_cfa_offset 3
 1425               		.cfi_offset 16, -2
 1426 0002 1F93      		push r17
 1427               	.LCFI48:
 1428               		.cfi_def_cfa_offset 4
 1429               		.cfi_offset 17, -3
 1430               	/* prologue: function */
 1431               	/* frame size = 0 */
 1432               	/* stack size = 2 */
 1433               	.L__stack_usage = 2
 1434 0004 FC01      		movw r30,r24
 448:../../../os/hal/src/hal_queues.c **** 
 449:../../../os/hal/src/hal_queues.c ****   osalThreadQueueObjectInit(&oqp->q_waiting);
 1435               		.loc 1 449 3 is_stmt 1 view .LVU345
 1436               	.LVL95:
 1437               	.LBB202:
 1438               	.LBI202:
 800:../../../os/hal/osal/rt/osal.h **** 
 1439               		.loc 2 800 20 view .LVU346
 1440               	.LBE202:
 802:../../../os/hal/osal/rt/osal.h **** }
 1441               		.loc 2 802 3 view .LVU347
 1442               	.LBB207:
 1443               	.LBB203:
 1444               	.LBI203:
 392:../../../os/rt/include/chthreads.h **** 
 1445               		.loc 3 392 20 view .LVU348
 1446               	.LBE203:
 1447               	.LBE207:
 1448               		.loc 3 394 3 view .LVU349
 1449               	.LBB208:
 1450               	.LBB206:
 1451               	.LBB204:
 1452               	.LBI204:
 537:../../../os/rt/include/chschd.h **** 
 1453               		.loc 4 537 20 view .LVU350
 1454               	.LBB205:
 539:../../../os/rt/include/chschd.h ****   tqp->prev = (thread_t *)tqp;
 1455               		.loc 4 539 3 view .LVU351
 539:../../../os/rt/include/chschd.h ****   tqp->prev = (thread_t *)tqp;
 1456               		.loc 4 539 13 is_stmt 0 view .LVU352
 1457 0006 9183      		std Z+1,r25
 1458 0008 8083      		st Z,r24
 1459               		.loc 4 540 3 is_stmt 1 view .LVU353
 1460               		.loc 4 540 13 is_stmt 0 view .LVU354
 1461 000a 9383      		std Z+3,r25
 1462 000c 8283      		std Z+2,r24
 1463               	.LVL96:
 1464               		.loc 4 540 13 view .LVU355
 1465               	.LBE205:
 1466               	.LBE204:
 1467               	.LBE206:
 1468               	.LBE208:
 450:../../../os/hal/src/hal_queues.c ****   oqp->q_counter = size;
 1469               		.loc 1 450 3 is_stmt 1 view .LVU356
 1470               		.loc 1 450 18 is_stmt 0 view .LVU357
 1471 000e 5583      		std Z+5,r21
 1472 0010 4483      		std Z+4,r20
 451:../../../os/hal/src/hal_queues.c ****   oqp->q_buffer  = bp;
 1473               		.loc 1 451 3 is_stmt 1 view .LVU358
 1474               		.loc 1 451 18 is_stmt 0 view .LVU359
 1475 0012 7783      		std Z+7,r23
 1476 0014 6683      		std Z+6,r22
 452:../../../os/hal/src/hal_queues.c ****   oqp->q_rdptr   = bp;
 1477               		.loc 1 452 3 is_stmt 1 view .LVU360
 1478               		.loc 1 452 18 is_stmt 0 view .LVU361
 1479 0016 7587      		std Z+13,r23
 1480 0018 6487      		std Z+12,r22
 453:../../../os/hal/src/hal_queues.c ****   oqp->q_wrptr   = bp;
 1481               		.loc 1 453 3 is_stmt 1 view .LVU362
 1482               		.loc 1 453 18 is_stmt 0 view .LVU363
 1483 001a 7387      		std Z+11,r23
 1484 001c 6287      		std Z+10,r22
 454:../../../os/hal/src/hal_queues.c ****   oqp->q_top     = bp + size;
 1485               		.loc 1 454 3 is_stmt 1 view .LVU364
 1486               		.loc 1 454 23 is_stmt 0 view .LVU365
 1487 001e 640F      		add r22,r20
 1488 0020 751F      		adc r23,r21
 1489               	.LVL97:
 1490               		.loc 1 454 18 view .LVU366
 1491 0022 7187      		std Z+9,r23
 1492 0024 6087      		std Z+8,r22
 455:../../../os/hal/src/hal_queues.c ****   oqp->q_notify  = onfy;
 1493               		.loc 1 455 3 is_stmt 1 view .LVU367
 1494               		.loc 1 455 18 is_stmt 0 view .LVU368
 1495 0026 3787      		std Z+15,r19
 1496 0028 2687      		std Z+14,r18
 456:../../../os/hal/src/hal_queues.c ****   oqp->q_link    = link;
 1497               		.loc 1 456 3 is_stmt 1 view .LVU369
 1498               		.loc 1 456 18 is_stmt 0 view .LVU370
 1499 002a 118B      		std Z+17,r17
 1500 002c 008B      		std Z+16,r16
 1501               	/* epilogue start */
 457:../../../os/hal/src/hal_queues.c **** }
 1502               		.loc 1 457 1 view .LVU371
 1503 002e 1F91      		pop r17
 1504 0030 0F91      		pop r16
 1505               	.LVL98:
 1506               		.loc 1 457 1 view .LVU372
 1507 0032 0895      		ret
 1508               		.cfi_endproc
 1509               	.LFE182:
 1511               		.section	.text.oqResetI,"ax",@progbits
 1512               	.global	oqResetI
 1514               	oqResetI:
 1515               	.LVL99:
 1516               	.LFB183:
 458:../../../os/hal/src/hal_queues.c **** 
 459:../../../os/hal/src/hal_queues.c **** /**
 460:../../../os/hal/src/hal_queues.c ****  * @brief   Resets an output queue.
 461:../../../os/hal/src/hal_queues.c ****  * @details All the data in the output queue is erased and lost, any waiting
 462:../../../os/hal/src/hal_queues.c ****  *          thread is resumed with status @p MSG_RESET.
 463:../../../os/hal/src/hal_queues.c ****  * @note    A reset operation can be used by a low level driver in order to
 464:../../../os/hal/src/hal_queues.c ****  *          obtain immediate attention from the high level layers.
 465:../../../os/hal/src/hal_queues.c ****  *
 466:../../../os/hal/src/hal_queues.c ****  * @param[in] oqp       pointer to an @p output_queue_t structure
 467:../../../os/hal/src/hal_queues.c ****  *
 468:../../../os/hal/src/hal_queues.c ****  * @iclass
 469:../../../os/hal/src/hal_queues.c ****  */
 470:../../../os/hal/src/hal_queues.c **** void oqResetI(output_queue_t *oqp) {
 1517               		.loc 1 470 36 is_stmt 1 view -0
 1518               		.cfi_startproc
 1519               	/* prologue: function */
 1520               	/* frame size = 0 */
 1521               	/* stack size = 0 */
 1522               	.L__stack_usage = 0
 1523               		.loc 1 470 36 is_stmt 0 view .LVU374
 1524 0000 FC01      		movw r30,r24
 471:../../../os/hal/src/hal_queues.c **** 
 472:../../../os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 1525               		.loc 1 472 23 is_stmt 1 view .LVU375
 473:../../../os/hal/src/hal_queues.c **** 
 474:../../../os/hal/src/hal_queues.c ****   oqp->q_rdptr = oqp->q_buffer;
 1526               		.loc 1 474 3 view .LVU376
 1527               		.loc 1 474 21 is_stmt 0 view .LVU377
 1528 0002 2681      		ldd r18,Z+6
 1529 0004 3781      		ldd r19,Z+7
 1530               		.loc 1 474 16 view .LVU378
 1531 0006 3587      		std Z+13,r19
 1532 0008 2487      		std Z+12,r18
 475:../../../os/hal/src/hal_queues.c ****   oqp->q_wrptr = oqp->q_buffer;
 1533               		.loc 1 475 3 is_stmt 1 view .LVU379
 1534               		.loc 1 475 16 is_stmt 0 view .LVU380
 1535 000a 3387      		std Z+11,r19
 1536 000c 2287      		std Z+10,r18
 476:../../../os/hal/src/hal_queues.c ****   oqp->q_counter = qSizeX(oqp);
 1537               		.loc 1 476 3 is_stmt 1 view .LVU381
 1538               		.loc 1 476 20 is_stmt 0 view .LVU382
 1539 000e 8085      		ldd r24,Z+8
 1540 0010 9185      		ldd r25,Z+9
 1541               	.LVL100:
 1542               		.loc 1 476 20 view .LVU383
 1543 0012 821B      		sub r24,r18
 1544 0014 930B      		sbc r25,r19
 1545               		.loc 1 476 18 view .LVU384
 1546 0016 9583      		std Z+5,r25
 1547 0018 8483      		std Z+4,r24
 477:../../../os/hal/src/hal_queues.c ****   osalThreadDequeueAllI(&oqp->q_waiting, MSG_RESET);
 1548               		.loc 1 477 3 is_stmt 1 view .LVU385
 1549               	.LVL101:
 1550               	.LBB209:
 1551               	.LBI209:
 855:../../../os/hal/osal/rt/osal.h **** 
 1552               		.loc 2 855 20 view .LVU386
 1553               	.LBB210:
 1554               		.loc 2 857 3 view .LVU387
 1555 001a 6EEF      		ldi r22,lo8(-2)
 1556 001c 7FEF      		ldi r23,lo8(-1)
 1557 001e CF01      		movw r24,r30
 1558 0020 0C94 0000 		jmp chThdDequeueAllI
 1559               	.LVL102:
 1560               		.loc 2 857 3 is_stmt 0 view .LVU388
 1561               	.LBE210:
 1562               	.LBE209:
 1563               		.cfi_endproc
 1564               	.LFE183:
 1566               		.section	.text.oqPutI,"ax",@progbits
 1567               	.global	oqPutI
 1569               	oqPutI:
 1570               	.LVL103:
 1571               	.LFB184:
 478:../../../os/hal/src/hal_queues.c **** }
 479:../../../os/hal/src/hal_queues.c **** 
 480:../../../os/hal/src/hal_queues.c **** /**
 481:../../../os/hal/src/hal_queues.c ****  * @brief   Output queue non-blocking write.
 482:../../../os/hal/src/hal_queues.c ****  * @details This function writes a byte value to an output queue. The
 483:../../../os/hal/src/hal_queues.c ****  *          operation completes immediately.
 484:../../../os/hal/src/hal_queues.c ****  *
 485:../../../os/hal/src/hal_queues.c ****  * @param[in] oqp       pointer to an @p output_queue_t structure
 486:../../../os/hal/src/hal_queues.c ****  * @param[in] b         the byte value to be written in the queue
 487:../../../os/hal/src/hal_queues.c ****  * @return              The operation status.
 488:../../../os/hal/src/hal_queues.c ****  * @retval MSG_OK       if the operation succeeded.
 489:../../../os/hal/src/hal_queues.c ****  * @retval MSG_TIMEOUT  if the queue is full.
 490:../../../os/hal/src/hal_queues.c ****  * @retval MSG_RESET    if the queue has been reset.
 491:../../../os/hal/src/hal_queues.c ****  *
 492:../../../os/hal/src/hal_queues.c ****  * @iclass
 493:../../../os/hal/src/hal_queues.c ****  */
 494:../../../os/hal/src/hal_queues.c **** msg_t oqPutI(output_queue_t *oqp, uint8_t b) {
 1572               		.loc 1 494 46 is_stmt 1 view -0
 1573               		.cfi_startproc
 1574               	/* prologue: function */
 1575               	/* frame size = 0 */
 1576               	/* stack size = 0 */
 1577               	.L__stack_usage = 0
 1578               		.loc 1 494 46 is_stmt 0 view .LVU390
 1579 0000 DC01      		movw r26,r24
 495:../../../os/hal/src/hal_queues.c **** 
 496:../../../os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 1580               		.loc 1 496 23 is_stmt 1 view .LVU391
 497:../../../os/hal/src/hal_queues.c **** 
 498:../../../os/hal/src/hal_queues.c ****   /* Queue space check.*/
 499:../../../os/hal/src/hal_queues.c ****   while (!oqIsFullI(oqp)) {
 1581               		.loc 1 499 3 view .LVU392
 1582               		.loc 1 499 11 is_stmt 0 view .LVU393
 1583 0002 1496      		adiw r26,4
 1584 0004 8D91      		ld r24,X+
 1585 0006 9C91      		ld r25,X
 1586 0008 1597      		sbiw r26,4+1
 1587               	.LVL104:
 1588               		.loc 1 499 9 view .LVU394
 1589 000a 892B      		or r24,r25
 1590 000c 01F0      		breq .L69
 500:../../../os/hal/src/hal_queues.c ****     /* Putting the character into the queue.*/
 501:../../../os/hal/src/hal_queues.c ****     oqp->q_counter--;
 1591               		.loc 1 501 5 is_stmt 1 view .LVU395
 1592               		.loc 1 501 8 is_stmt 0 view .LVU396
 1593 000e 1496      		adiw r26,4
 1594 0010 8D91      		ld r24,X+
 1595 0012 9C91      		ld r25,X
 1596 0014 1597      		sbiw r26,4+1
 1597               		.loc 1 501 19 view .LVU397
 1598 0016 0197      		sbiw r24,1
 1599 0018 1596      		adiw r26,4+1
 1600 001a 9C93      		st X,r25
 1601 001c 8E93      		st -X,r24
 1602 001e 1497      		sbiw r26,4
 502:../../../os/hal/src/hal_queues.c ****     *oqp->q_wrptr++ = b;
 1603               		.loc 1 502 5 is_stmt 1 view .LVU398
 1604               		.loc 1 502 9 is_stmt 0 view .LVU399
 1605 0020 1A96      		adiw r26,10
 1606 0022 ED91      		ld r30,X+
 1607 0024 FC91      		ld r31,X
 1608 0026 1B97      		sbiw r26,10+1
 1609               		.loc 1 502 18 view .LVU400
 1610 0028 CF01      		movw r24,r30
 1611 002a 0196      		adiw r24,1
 1612 002c 1B96      		adiw r26,10+1
 1613 002e 9C93      		st X,r25
 1614 0030 8E93      		st -X,r24
 1615 0032 1A97      		sbiw r26,10
 1616               		.loc 1 502 21 view .LVU401
 1617 0034 6083      		st Z,r22
 503:../../../os/hal/src/hal_queues.c ****     if (oqp->q_wrptr >= oqp->q_top) {
 1618               		.loc 1 503 5 is_stmt 1 view .LVU402
 1619               		.loc 1 503 8 is_stmt 0 view .LVU403
 1620 0036 1A96      		adiw r26,10
 1621 0038 2D91      		ld r18,X+
 1622 003a 3C91      		ld r19,X
 1623 003c 1B97      		sbiw r26,10+1
 1624 003e 1896      		adiw r26,8
 1625 0040 8D91      		ld r24,X+
 1626 0042 9C91      		ld r25,X
 1627 0044 1997      		sbiw r26,8+1
 1628 0046 2817      		cp r18,r24
 1629 0048 3907      		cpc r19,r25
 1630 004a 00F4      		brsh .L71
 504:../../../os/hal/src/hal_queues.c ****       oqp->q_wrptr = oqp->q_buffer;
 505:../../../os/hal/src/hal_queues.c ****     }
 506:../../../os/hal/src/hal_queues.c **** 
 507:../../../os/hal/src/hal_queues.c ****     /* Inform the low side that the queue has at least one character available.*/
 508:../../../os/hal/src/hal_queues.c ****     if (oqp->q_notify != NULL) {
 1631               		.loc 1 508 5 is_stmt 1 view .LVU404
 1632               		.loc 1 508 12 is_stmt 0 view .LVU405
 1633 004c 1E96      		adiw r26,14
 1634 004e ED91      		ld r30,X+
 1635 0050 FC91      		ld r31,X
 1636 0052 1F97      		sbiw r26,14+1
 1637               		.loc 1 508 8 view .LVU406
 1638 0054 3097      		sbiw r30,0
 1639 0056 01F0      		breq .L70
 1640               	.L72:
 509:../../../os/hal/src/hal_queues.c ****       oqp->q_notify(oqp);
 1641               		.loc 1 509 7 is_stmt 1 view .LVU407
 1642 0058 CD01      		movw r24,r26
 1643 005a 0995      		icall
 1644               	.LVL105:
 510:../../../os/hal/src/hal_queues.c ****     }
 511:../../../os/hal/src/hal_queues.c **** 
 512:../../../os/hal/src/hal_queues.c ****     return MSG_OK;
 1645               		.loc 1 512 12 is_stmt 0 view .LVU408
 1646 005c 90E0      		ldi r25,0
 1647 005e 80E0      		ldi r24,0
 1648 0060 0895      		ret
 1649               	.LVL106:
 1650               	.L71:
 504:../../../os/hal/src/hal_queues.c ****     }
 1651               		.loc 1 504 7 is_stmt 1 view .LVU409
 504:../../../os/hal/src/hal_queues.c ****     }
 1652               		.loc 1 504 20 is_stmt 0 view .LVU410
 1653 0062 1696      		adiw r26,6
 1654 0064 8D91      		ld r24,X+
 1655 0066 9C91      		ld r25,X
 1656 0068 1797      		sbiw r26,6+1
 1657 006a 1B96      		adiw r26,10+1
 1658 006c 9C93      		st X,r25
 1659 006e 8E93      		st -X,r24
 1660 0070 1A97      		sbiw r26,10
 508:../../../os/hal/src/hal_queues.c ****       oqp->q_notify(oqp);
 1661               		.loc 1 508 5 is_stmt 1 view .LVU411
 508:../../../os/hal/src/hal_queues.c ****       oqp->q_notify(oqp);
 1662               		.loc 1 508 12 is_stmt 0 view .LVU412
 1663 0072 1E96      		adiw r26,14
 1664 0074 ED91      		ld r30,X+
 1665 0076 FC91      		ld r31,X
 1666 0078 1F97      		sbiw r26,14+1
 508:../../../os/hal/src/hal_queues.c ****       oqp->q_notify(oqp);
 1667               		.loc 1 508 8 view .LVU413
 1668 007a 3097      		sbiw r30,0
 1669 007c 01F4      		brne .L72
 1670               	.L70:
 1671               		.loc 1 512 12 view .LVU414
 1672 007e 90E0      		ldi r25,0
 1673 0080 80E0      		ldi r24,0
 1674               	/* epilogue start */
 513:../../../os/hal/src/hal_queues.c ****   }
 514:../../../os/hal/src/hal_queues.c **** 
 515:../../../os/hal/src/hal_queues.c ****   return MSG_TIMEOUT;
 516:../../../os/hal/src/hal_queues.c **** }
 1675               		.loc 1 516 1 view .LVU415
 1676 0082 0895      		ret
 1677               	.L69:
 515:../../../os/hal/src/hal_queues.c **** }
 1678               		.loc 1 515 10 view .LVU416
 1679 0084 8FEF      		ldi r24,lo8(-1)
 1680 0086 9FEF      		ldi r25,lo8(-1)
 1681 0088 0895      		ret
 1682               		.cfi_endproc
 1683               	.LFE184:
 1685               		.section	.text.oqPutTimeout,"ax",@progbits
 1686               	.global	oqPutTimeout
 1688               	oqPutTimeout:
 1689               	.LVL107:
 1690               	.LFB185:
 517:../../../os/hal/src/hal_queues.c **** 
 518:../../../os/hal/src/hal_queues.c **** /**
 519:../../../os/hal/src/hal_queues.c ****  * @brief   Output queue write with timeout.
 520:../../../os/hal/src/hal_queues.c ****  * @details This function writes a byte value to an output queue. If the queue
 521:../../../os/hal/src/hal_queues.c ****  *          is full then the calling thread is suspended until there is space
 522:../../../os/hal/src/hal_queues.c ****  *          in the queue or a timeout occurs.
 523:../../../os/hal/src/hal_queues.c ****  * @note    The callback is invoked after putting the character into the
 524:../../../os/hal/src/hal_queues.c ****  *          queue.
 525:../../../os/hal/src/hal_queues.c ****  *
 526:../../../os/hal/src/hal_queues.c ****  * @param[in] oqp       pointer to an @p output_queue_t structure
 527:../../../os/hal/src/hal_queues.c ****  * @param[in] b         the byte value to be written in the queue
 528:../../../os/hal/src/hal_queues.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 529:../../../os/hal/src/hal_queues.c ****  *                      the following special values are allowed:
 530:../../../os/hal/src/hal_queues.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 531:../../../os/hal/src/hal_queues.c ****  *                      - @a TIME_INFINITE no timeout.
 532:../../../os/hal/src/hal_queues.c ****  *                      .
 533:../../../os/hal/src/hal_queues.c ****  * @return              The operation status.
 534:../../../os/hal/src/hal_queues.c ****  * @retval MSG_OK       if the operation succeeded.
 535:../../../os/hal/src/hal_queues.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 536:../../../os/hal/src/hal_queues.c ****  * @retval MSG_RESET    if the queue has been reset.
 537:../../../os/hal/src/hal_queues.c ****  *
 538:../../../os/hal/src/hal_queues.c ****  * @api
 539:../../../os/hal/src/hal_queues.c ****  */
 540:../../../os/hal/src/hal_queues.c **** msg_t oqPutTimeout(output_queue_t *oqp, uint8_t b, sysinterval_t timeout) {
 1691               		.loc 1 540 75 is_stmt 1 view -0
 1692               		.cfi_startproc
 1693               		.loc 1 540 75 is_stmt 0 view .LVU418
 1694 0000 FF92      		push r15
 1695               	.LCFI49:
 1696               		.cfi_def_cfa_offset 3
 1697               		.cfi_offset 15, -2
 1698 0002 0F93      		push r16
 1699               	.LCFI50:
 1700               		.cfi_def_cfa_offset 4
 1701               		.cfi_offset 16, -3
 1702 0004 1F93      		push r17
 1703               	.LCFI51:
 1704               		.cfi_def_cfa_offset 5
 1705               		.cfi_offset 17, -4
 1706 0006 CF93      		push r28
 1707               	.LCFI52:
 1708               		.cfi_def_cfa_offset 6
 1709               		.cfi_offset 28, -5
 1710 0008 DF93      		push r29
 1711               	.LCFI53:
 1712               		.cfi_def_cfa_offset 7
 1713               		.cfi_offset 29, -6
 1714               	/* prologue: function */
 1715               	/* frame size = 0 */
 1716               	/* stack size = 5 */
 1717               	.L__stack_usage = 5
 1718 000a EC01      		movw r28,r24
 1719 000c F62E      		mov r15,r22
 1720 000e 8A01      		movw r16,r20
 541:../../../os/hal/src/hal_queues.c **** 
 542:../../../os/hal/src/hal_queues.c ****   osalSysLock();
 1721               		.loc 1 542 3 is_stmt 1 view .LVU419
 1722               	.LBB211:
 1723               	.LBI211:
 509:../../../os/hal/osal/rt/osal.h **** 
 1724               		.loc 2 509 20 view .LVU420
 1725               	.LBE211:
 511:../../../os/hal/osal/rt/osal.h **** }
 1726               		.loc 2 511 3 view .LVU421
 1727               	.LBB216:
 1728               	.LBB212:
 1729               	.LBI212:
 353:../../../os/rt/include/chsys.h **** 
 1730               		.loc 5 353 20 view .LVU422
 1731               	.LBE212:
 1732               	.LBE216:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1733               		.loc 5 355 3 view .LVU423
 1734               	.LBB217:
 1735               	.LBB215:
 1736               	.LBB213:
 1737               	.LBI213:
 435:../../../os/common/ports/AVR/chcore.h **** 
 1738               		.loc 6 435 20 view .LVU424
 1739               	.LBB214:
 437:../../../os/common/ports/AVR/chcore.h **** }
 1740               		.loc 6 437 3 view .LVU425
 1741               	/* #APP */
 1742               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 1743 0010 F894      		cli
 1744               	 ;  0 "" 2
 1745               	/* #NOAPP */
 1746               	.LBE214:
 1747               	.LBE213:
 1748               	.LBE215:
 1749               	.LBE217:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 1750               		.loc 5 356 34 view .LVU426
 357:../../../os/rt/include/chsys.h **** }
 1751               		.loc 5 357 20 view .LVU427
 1752 0012 00C0      		rjmp .L74
 1753               	.LVL108:
 1754               	.L76:
 1755               	.LBB218:
 543:../../../os/hal/src/hal_queues.c **** 
 544:../../../os/hal/src/hal_queues.c ****   /* Waiting until there is a slot available or a timeout occurs.*/
 545:../../../os/hal/src/hal_queues.c ****   while (oqIsFullI(oqp)) {
 546:../../../os/hal/src/hal_queues.c ****     msg_t msg = osalThreadEnqueueTimeoutS(&oqp->q_waiting, timeout);
 1756               		.loc 1 546 5 view .LVU428
 1757               	.LBB219:
 1758               	.LBI219:
 828:../../../os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 1759               		.loc 2 828 21 view .LVU429
 1760               	.LBB220:
 831:../../../os/hal/osal/rt/osal.h **** }
 1761               		.loc 2 831 3 view .LVU430
 831:../../../os/hal/osal/rt/osal.h **** }
 1762               		.loc 2 831 10 is_stmt 0 view .LVU431
 1763 0014 B801      		movw r22,r16
 1764 0016 CE01      		movw r24,r28
 1765 0018 0E94 0000 		call chThdEnqueueTimeoutS
 1766               	.LVL109:
 831:../../../os/hal/osal/rt/osal.h **** }
 1767               		.loc 2 831 10 view .LVU432
 1768               	.LBE220:
 1769               	.LBE219:
 547:../../../os/hal/src/hal_queues.c ****     if (msg < MSG_OK) {
 1770               		.loc 1 547 5 is_stmt 1 view .LVU433
 1771               		.loc 1 547 8 is_stmt 0 view .LVU434
 1772 001c 97FD      		sbrc r25,7
 1773 001e 00C0      		rjmp .L83
 1774               	.LVL110:
 1775               	.L74:
 1776               		.loc 1 547 8 view .LVU435
 1777               	.LBE218:
 545:../../../os/hal/src/hal_queues.c ****     msg_t msg = osalThreadEnqueueTimeoutS(&oqp->q_waiting, timeout);
 1778               		.loc 1 545 10 view .LVU436
 1779 0020 8C81      		ldd r24,Y+4
 1780 0022 9D81      		ldd r25,Y+5
 545:../../../os/hal/src/hal_queues.c ****     msg_t msg = osalThreadEnqueueTimeoutS(&oqp->q_waiting, timeout);
 1781               		.loc 1 545 9 view .LVU437
 1782 0024 892B      		or r24,r25
 1783 0026 01F0      		breq .L76
 548:../../../os/hal/src/hal_queues.c ****       osalSysUnlock();
 549:../../../os/hal/src/hal_queues.c ****       return msg;
 550:../../../os/hal/src/hal_queues.c ****     }
 551:../../../os/hal/src/hal_queues.c ****   }
 552:../../../os/hal/src/hal_queues.c **** 
 553:../../../os/hal/src/hal_queues.c ****   /* Putting the character into the queue.*/
 554:../../../os/hal/src/hal_queues.c ****   oqp->q_counter--;
 1784               		.loc 1 554 3 is_stmt 1 view .LVU438
 1785               		.loc 1 554 6 is_stmt 0 view .LVU439
 1786 0028 8C81      		ldd r24,Y+4
 1787 002a 9D81      		ldd r25,Y+5
 1788               		.loc 1 554 17 view .LVU440
 1789 002c 0197      		sbiw r24,1
 1790 002e 9D83      		std Y+5,r25
 1791 0030 8C83      		std Y+4,r24
 555:../../../os/hal/src/hal_queues.c ****   *oqp->q_wrptr++ = b;
 1792               		.loc 1 555 3 is_stmt 1 view .LVU441
 1793               		.loc 1 555 7 is_stmt 0 view .LVU442
 1794 0032 EA85      		ldd r30,Y+10
 1795 0034 FB85      		ldd r31,Y+11
 1796               		.loc 1 555 16 view .LVU443
 1797 0036 CF01      		movw r24,r30
 1798 0038 0196      		adiw r24,1
 1799 003a 9B87      		std Y+11,r25
 1800 003c 8A87      		std Y+10,r24
 1801               		.loc 1 555 19 view .LVU444
 1802 003e F082      		st Z,r15
 556:../../../os/hal/src/hal_queues.c ****   if (oqp->q_wrptr >= oqp->q_top) {
 1803               		.loc 1 556 3 is_stmt 1 view .LVU445
 1804               		.loc 1 556 6 is_stmt 0 view .LVU446
 1805 0040 2A85      		ldd r18,Y+10
 1806 0042 3B85      		ldd r19,Y+11
 1807 0044 8885      		ldd r24,Y+8
 1808 0046 9985      		ldd r25,Y+9
 1809 0048 2817      		cp r18,r24
 1810 004a 3907      		cpc r19,r25
 1811 004c 00F0      		brlo .L77
 557:../../../os/hal/src/hal_queues.c ****     oqp->q_wrptr = oqp->q_buffer;
 1812               		.loc 1 557 5 is_stmt 1 view .LVU447
 1813               		.loc 1 557 18 is_stmt 0 view .LVU448
 1814 004e 8E81      		ldd r24,Y+6
 1815 0050 9F81      		ldd r25,Y+7
 1816 0052 9B87      		std Y+11,r25
 1817 0054 8A87      		std Y+10,r24
 1818               	.L77:
 558:../../../os/hal/src/hal_queues.c ****   }
 559:../../../os/hal/src/hal_queues.c **** 
 560:../../../os/hal/src/hal_queues.c ****   /* Inform the low side that the queue has at least one character available.*/
 561:../../../os/hal/src/hal_queues.c ****   if (oqp->q_notify != NULL) {
 1819               		.loc 1 561 3 is_stmt 1 view .LVU449
 1820               		.loc 1 561 10 is_stmt 0 view .LVU450
 1821 0056 EE85      		ldd r30,Y+14
 1822 0058 FF85      		ldd r31,Y+15
 1823               		.loc 1 561 6 view .LVU451
 1824 005a 3097      		sbiw r30,0
 1825 005c 01F0      		breq .L78
 562:../../../os/hal/src/hal_queues.c ****     oqp->q_notify(oqp);
 1826               		.loc 1 562 5 is_stmt 1 view .LVU452
 1827 005e CE01      		movw r24,r28
 1828 0060 0995      		icall
 1829               	.LVL111:
 1830               	.L78:
 563:../../../os/hal/src/hal_queues.c ****   }
 564:../../../os/hal/src/hal_queues.c **** 
 565:../../../os/hal/src/hal_queues.c ****   osalSysUnlock();
 1831               		.loc 1 565 3 view .LVU453
 1832               	.LBB227:
 1833               	.LBI227:
 520:../../../os/hal/osal/rt/osal.h **** 
 1834               		.loc 2 520 20 view .LVU454
 1835               	.LBE227:
 522:../../../os/hal/osal/rt/osal.h **** }
 1836               		.loc 2 522 3 view .LVU455
 1837               	.LBB232:
 1838               	.LBB228:
 1839               	.LBI228:
 365:../../../os/rt/include/chsys.h **** 
 1840               		.loc 5 365 20 view .LVU456
 1841               	.LBB229:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1842               		.loc 5 367 22 view .LVU457
 368:../../../os/rt/include/chsys.h **** 
 1843               		.loc 5 368 33 view .LVU458
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1844               		.loc 5 374 3 view .LVU459
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1845               		.loc 5 374 3 view .LVU460
 1846               		.loc 5 378 3 view .LVU461
 1847               	.LBB230:
 1848               	.LBI230:
 445:../../../os/common/ports/AVR/chcore.h **** 
 1849               		.loc 6 445 20 view .LVU462
 1850               	.LBB231:
 1851               		.loc 6 447 3 view .LVU463
 1852               	/* #APP */
 1853               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1854 0062 7894      		sei
 1855               	 ;  0 "" 2
 1856               	/* #NOAPP */
 1857               	.LBE231:
 1858               	.LBE230:
 1859               	.LBE229:
 1860               	.LBE228:
 1861               	.LBE232:
 566:../../../os/hal/src/hal_queues.c **** 
 567:../../../os/hal/src/hal_queues.c ****   return MSG_OK;
 1862               		.loc 1 567 3 view .LVU464
 1863               		.loc 1 567 10 is_stmt 0 view .LVU465
 1864 0064 90E0      		ldi r25,0
 1865 0066 80E0      		ldi r24,0
 1866               	/* epilogue start */
 568:../../../os/hal/src/hal_queues.c **** }
 1867               		.loc 1 568 1 view .LVU466
 1868 0068 DF91      		pop r29
 1869 006a CF91      		pop r28
 1870               	.LVL112:
 1871               		.loc 1 568 1 view .LVU467
 1872 006c 1F91      		pop r17
 1873 006e 0F91      		pop r16
 1874               	.LVL113:
 1875               		.loc 1 568 1 view .LVU468
 1876 0070 FF90      		pop r15
 1877               	.LVL114:
 1878               		.loc 1 568 1 view .LVU469
 1879 0072 0895      		ret
 1880               	.LVL115:
 1881               	.L83:
 1882               	.LBB233:
 548:../../../os/hal/src/hal_queues.c ****       return msg;
 1883               		.loc 1 548 7 is_stmt 1 view .LVU470
 1884               	.LBB221:
 1885               	.LBI221:
 520:../../../os/hal/osal/rt/osal.h **** 
 1886               		.loc 2 520 20 view .LVU471
 1887               	.LBE221:
 1888               	.LBE233:
 522:../../../os/hal/osal/rt/osal.h **** }
 1889               		.loc 2 522 3 view .LVU472
 1890               	.LBB234:
 1891               	.LBB226:
 1892               	.LBB222:
 1893               	.LBI222:
 365:../../../os/rt/include/chsys.h **** 
 1894               		.loc 5 365 20 view .LVU473
 1895               	.LBB223:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1896               		.loc 5 367 22 view .LVU474
 368:../../../os/rt/include/chsys.h **** 
 1897               		.loc 5 368 33 view .LVU475
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1898               		.loc 5 374 3 view .LVU476
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1899               		.loc 5 374 3 view .LVU477
 1900               		.loc 5 378 3 view .LVU478
 1901               	.LBB224:
 1902               	.LBI224:
 445:../../../os/common/ports/AVR/chcore.h **** 
 1903               		.loc 6 445 20 view .LVU479
 1904               	.LBB225:
 1905               		.loc 6 447 3 view .LVU480
 1906               	/* #APP */
 1907               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1908 0074 7894      		sei
 1909               	 ;  0 "" 2
 1910               	/* #NOAPP */
 1911               	.LBE225:
 1912               	.LBE224:
 1913               	.LBE223:
 1914               	.LBE222:
 1915               	.LBE226:
 549:../../../os/hal/src/hal_queues.c ****     }
 1916               		.loc 1 549 7 view .LVU481
 1917               	/* epilogue start */
 1918               	.LBE234:
 1919               		.loc 1 568 1 is_stmt 0 view .LVU482
 1920 0076 DF91      		pop r29
 1921 0078 CF91      		pop r28
 1922               	.LVL116:
 1923               		.loc 1 568 1 view .LVU483
 1924 007a 1F91      		pop r17
 1925 007c 0F91      		pop r16
 1926               	.LVL117:
 1927               		.loc 1 568 1 view .LVU484
 1928 007e FF90      		pop r15
 1929               	.LVL118:
 1930               		.loc 1 568 1 view .LVU485
 1931 0080 0895      		ret
 1932               		.cfi_endproc
 1933               	.LFE185:
 1935               		.section	.text.oqGetI,"ax",@progbits
 1936               	.global	oqGetI
 1938               	oqGetI:
 1939               	.LVL119:
 1940               	.LFB186:
 569:../../../os/hal/src/hal_queues.c **** 
 570:../../../os/hal/src/hal_queues.c **** /**
 571:../../../os/hal/src/hal_queues.c ****  * @brief   Output queue read.
 572:../../../os/hal/src/hal_queues.c ****  * @details A byte value is read from the low end of an output queue. The
 573:../../../os/hal/src/hal_queues.c ****  *          operation completes immediately.
 574:../../../os/hal/src/hal_queues.c ****  *
 575:../../../os/hal/src/hal_queues.c ****  * @param[in] oqp       pointer to an @p output_queue_t structure
 576:../../../os/hal/src/hal_queues.c ****  * @return              The byte value from the queue.
 577:../../../os/hal/src/hal_queues.c ****  * @retval MSG_TIMEOUT  if the queue is empty.
 578:../../../os/hal/src/hal_queues.c ****  *
 579:../../../os/hal/src/hal_queues.c ****  * @iclass
 580:../../../os/hal/src/hal_queues.c ****  */
 581:../../../os/hal/src/hal_queues.c **** msg_t oqGetI(output_queue_t *oqp) {
 1941               		.loc 1 581 35 is_stmt 1 view -0
 1942               		.cfi_startproc
 1943               		.loc 1 581 35 is_stmt 0 view .LVU487
 1944 0000 CF93      		push r28
 1945               	.LCFI54:
 1946               		.cfi_def_cfa_offset 3
 1947               		.cfi_offset 28, -2
 1948               	/* prologue: function */
 1949               	/* frame size = 0 */
 1950               	/* stack size = 1 */
 1951               	.L__stack_usage = 1
 1952 0002 FC01      		movw r30,r24
 582:../../../os/hal/src/hal_queues.c **** 
 583:../../../os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 1953               		.loc 1 583 23 is_stmt 1 view .LVU488
 584:../../../os/hal/src/hal_queues.c **** 
 585:../../../os/hal/src/hal_queues.c ****   /* Queue data check.*/
 586:../../../os/hal/src/hal_queues.c ****   if (!oqIsEmptyI(oqp)) {
 1954               		.loc 1 586 3 view .LVU489
 1955               		.loc 1 586 8 is_stmt 0 view .LVU490
 1956 0004 A485      		ldd r26,Z+12
 1957 0006 B585      		ldd r27,Z+13
 1958 0008 8285      		ldd r24,Z+10
 1959 000a 9385      		ldd r25,Z+11
 1960               	.LVL120:
 1961               		.loc 1 586 8 view .LVU491
 1962 000c 8A17      		cp r24,r26
 1963 000e 9B07      		cpc r25,r27
 1964 0010 01F0      		breq .L90
 1965               	.L85:
 1966               	.LBB235:
 587:../../../os/hal/src/hal_queues.c ****     uint8_t b;
 1967               		.loc 1 587 5 is_stmt 1 view .LVU492
 588:../../../os/hal/src/hal_queues.c **** 
 589:../../../os/hal/src/hal_queues.c ****     oqp->q_counter++;
 1968               		.loc 1 589 5 view .LVU493
 1969               		.loc 1 589 8 is_stmt 0 view .LVU494
 1970 0012 8481      		ldd r24,Z+4
 1971 0014 9581      		ldd r25,Z+5
 1972               		.loc 1 589 19 view .LVU495
 1973 0016 0196      		adiw r24,1
 1974 0018 9583      		std Z+5,r25
 1975 001a 8483      		std Z+4,r24
 590:../../../os/hal/src/hal_queues.c ****     b = *oqp->q_rdptr++;
 1976               		.loc 1 590 5 is_stmt 1 view .LVU496
 1977               		.loc 1 590 22 is_stmt 0 view .LVU497
 1978 001c CD01      		movw r24,r26
 1979 001e 0196      		adiw r24,1
 1980 0020 9587      		std Z+13,r25
 1981 0022 8487      		std Z+12,r24
 1982               		.loc 1 590 7 view .LVU498
 1983 0024 CC91      		ld r28,X
 1984               	.LVL121:
 591:../../../os/hal/src/hal_queues.c ****     if (oqp->q_rdptr >= oqp->q_top) {
 1985               		.loc 1 591 5 is_stmt 1 view .LVU499
 1986               		.loc 1 591 8 is_stmt 0 view .LVU500
 1987 0026 2085      		ldd r18,Z+8
 1988 0028 3185      		ldd r19,Z+9
 1989 002a 8217      		cp r24,r18
 1990 002c 9307      		cpc r25,r19
 1991 002e 00F4      		brsh .L87
 1992               	.L88:
 592:../../../os/hal/src/hal_queues.c ****       oqp->q_rdptr = oqp->q_buffer;
 593:../../../os/hal/src/hal_queues.c ****     }
 594:../../../os/hal/src/hal_queues.c **** 
 595:../../../os/hal/src/hal_queues.c ****     osalThreadDequeueNextI(&oqp->q_waiting, MSG_OK);
 1993               		.loc 1 595 5 is_stmt 1 view .LVU501
 1994               	.LVL122:
 1995               	.LBB236:
 1996               	.LBI236:
 842:../../../os/hal/osal/rt/osal.h **** 
 1997               		.loc 2 842 20 view .LVU502
 1998               	.LBB237:
 844:../../../os/hal/osal/rt/osal.h **** }
 1999               		.loc 2 844 3 view .LVU503
 2000 0030 70E0      		ldi r23,0
 2001 0032 60E0      		ldi r22,0
 2002 0034 CF01      		movw r24,r30
 2003 0036 0E94 0000 		call chThdDequeueNextI
 2004               	.LVL123:
 844:../../../os/hal/osal/rt/osal.h **** }
 2005               		.loc 2 844 3 is_stmt 0 view .LVU504
 2006               	.LBE237:
 2007               	.LBE236:
 596:../../../os/hal/src/hal_queues.c **** 
 597:../../../os/hal/src/hal_queues.c ****     return (msg_t)b;
 2008               		.loc 1 597 5 is_stmt 1 view .LVU505
 2009               		.loc 1 597 12 is_stmt 0 view .LVU506
 2010 003a 8C2F      		mov r24,r28
 2011 003c 90E0      		ldi r25,0
 2012               	/* epilogue start */
 2013               	.LBE235:
 598:../../../os/hal/src/hal_queues.c ****   }
 599:../../../os/hal/src/hal_queues.c **** 
 600:../../../os/hal/src/hal_queues.c ****   return MSG_TIMEOUT;
 601:../../../os/hal/src/hal_queues.c **** }
 2014               		.loc 1 601 1 view .LVU507
 2015 003e CF91      		pop r28
 2016               	.LVL124:
 2017               		.loc 1 601 1 view .LVU508
 2018 0040 0895      		ret
 2019               	.LVL125:
 2020               	.L87:
 2021               	.LBB238:
 592:../../../os/hal/src/hal_queues.c ****     }
 2022               		.loc 1 592 7 is_stmt 1 view .LVU509
 592:../../../os/hal/src/hal_queues.c ****     }
 2023               		.loc 1 592 20 is_stmt 0 view .LVU510
 2024 0042 8681      		ldd r24,Z+6
 2025 0044 9781      		ldd r25,Z+7
 2026 0046 9587      		std Z+13,r25
 2027 0048 8487      		std Z+12,r24
 2028 004a 00C0      		rjmp .L88
 2029               	.LVL126:
 2030               	.L90:
 592:../../../os/hal/src/hal_queues.c ****     }
 2031               		.loc 1 592 20 view .LVU511
 2032               	.LBE238:
 586:../../../os/hal/src/hal_queues.c ****     uint8_t b;
 2033               		.loc 1 586 8 discriminator 1 view .LVU512
 2034 004c 8481      		ldd r24,Z+4
 2035 004e 9581      		ldd r25,Z+5
 2036 0050 892B      		or r24,r25
 2037 0052 01F0      		breq .L85
 600:../../../os/hal/src/hal_queues.c **** }
 2038               		.loc 1 600 10 view .LVU513
 2039 0054 8FEF      		ldi r24,lo8(-1)
 2040 0056 9FEF      		ldi r25,lo8(-1)
 2041               	/* epilogue start */
 2042               		.loc 1 601 1 view .LVU514
 2043 0058 CF91      		pop r28
 2044 005a 0895      		ret
 2045               		.cfi_endproc
 2046               	.LFE186:
 2048               		.section	.text.oqWriteI,"ax",@progbits
 2049               	.global	oqWriteI
 2051               	oqWriteI:
 2052               	.LVL127:
 2053               	.LFB187:
 602:../../../os/hal/src/hal_queues.c **** 
 603:../../../os/hal/src/hal_queues.c **** 
 604:../../../os/hal/src/hal_queues.c **** /**
 605:../../../os/hal/src/hal_queues.c ****  * @brief   Output queue non-blocking write.
 606:../../../os/hal/src/hal_queues.c ****  * @details The function writes data from a buffer to an output queue. The
 607:../../../os/hal/src/hal_queues.c ****  *          operation completes immediately.
 608:../../../os/hal/src/hal_queues.c ****  *
 609:../../../os/hal/src/hal_queues.c ****  * @param[in] oqp       pointer to an @p output_queue_t structure
 610:../../../os/hal/src/hal_queues.c ****  * @param[in] bp        pointer to the data buffer
 611:../../../os/hal/src/hal_queues.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 612:../../../os/hal/src/hal_queues.c ****  *                      value 0 is reserved
 613:../../../os/hal/src/hal_queues.c ****  * @return              The number of bytes effectively transferred.
 614:../../../os/hal/src/hal_queues.c ****  *
 615:../../../os/hal/src/hal_queues.c ****  * @iclass
 616:../../../os/hal/src/hal_queues.c ****  */
 617:../../../os/hal/src/hal_queues.c **** size_t oqWriteI(output_queue_t *oqp, const uint8_t *bp, size_t n) {
 2054               		.loc 1 617 67 is_stmt 1 view -0
 2055               		.cfi_startproc
 2056               		.loc 1 617 67 is_stmt 0 view .LVU516
 2057 0000 EF92      		push r14
 2058               	.LCFI55:
 2059               		.cfi_def_cfa_offset 3
 2060               		.cfi_offset 14, -2
 2061 0002 FF92      		push r15
 2062               	.LCFI56:
 2063               		.cfi_def_cfa_offset 4
 2064               		.cfi_offset 15, -3
 2065 0004 0F93      		push r16
 2066               	.LCFI57:
 2067               		.cfi_def_cfa_offset 5
 2068               		.cfi_offset 16, -4
 2069 0006 1F93      		push r17
 2070               	.LCFI58:
 2071               		.cfi_def_cfa_offset 6
 2072               		.cfi_offset 17, -5
 2073 0008 CF93      		push r28
 2074               	.LCFI59:
 2075               		.cfi_def_cfa_offset 7
 2076               		.cfi_offset 28, -6
 2077 000a DF93      		push r29
 2078               	.LCFI60:
 2079               		.cfi_def_cfa_offset 8
 2080               		.cfi_offset 29, -7
 2081               	/* prologue: function */
 2082               	/* frame size = 0 */
 2083               	/* stack size = 6 */
 2084               	.L__stack_usage = 6
 2085 000c EC01      		movw r28,r24
 618:../../../os/hal/src/hal_queues.c ****   qnotify_t nfy = oqp->q_notify;
 2086               		.loc 1 618 3 is_stmt 1 view .LVU517
 2087               		.loc 1 618 13 is_stmt 0 view .LVU518
 2088 000e EE84      		ldd r14,Y+14
 2089 0010 FF84      		ldd r15,Y+15
 2090               	.LVL128:
 619:../../../os/hal/src/hal_queues.c ****   size_t wr;
 2091               		.loc 1 619 3 is_stmt 1 view .LVU519
 620:../../../os/hal/src/hal_queues.c **** 
 621:../../../os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 2092               		.loc 1 621 23 view .LVU520
 622:../../../os/hal/src/hal_queues.c **** 
 623:../../../os/hal/src/hal_queues.c ****   wr = oq_write(oqp, bp, n);
 2093               		.loc 1 623 3 view .LVU521
 2094               		.loc 1 623 8 is_stmt 0 view .LVU522
 2095 0012 0E94 0000 		call oq_write
 2096               	.LVL129:
 2097               		.loc 1 623 8 view .LVU523
 2098 0016 8C01      		movw r16,r24
 2099               	.LVL130:
 624:../../../os/hal/src/hal_queues.c **** 
 625:../../../os/hal/src/hal_queues.c ****   /* Inform the low side that the queue has at least one character
 626:../../../os/hal/src/hal_queues.c ****      available.*/
 627:../../../os/hal/src/hal_queues.c ****   if ((wr > (size_t)0) && (nfy != NULL)) {
 2100               		.loc 1 627 3 is_stmt 1 view .LVU524
 2101               		.loc 1 627 6 is_stmt 0 view .LVU525
 2102 0018 892B      		or r24,r25
 2103 001a 01F0      		breq .L91
 2104               		.loc 1 627 24 discriminator 1 view .LVU526
 2105 001c E114      		cp r14,__zero_reg__
 2106 001e F104      		cpc r15,__zero_reg__
 2107 0020 01F0      		breq .L91
 628:../../../os/hal/src/hal_queues.c ****     nfy(oqp);
 2108               		.loc 1 628 5 is_stmt 1 view .LVU527
 2109 0022 CE01      		movw r24,r28
 2110 0024 F701      		movw r30,r14
 2111 0026 0995      		icall
 2112               	.LVL131:
 629:../../../os/hal/src/hal_queues.c ****   }
 630:../../../os/hal/src/hal_queues.c **** 
 631:../../../os/hal/src/hal_queues.c ****   return wr;
 2113               		.loc 1 631 3 view .LVU528
 2114               	.L91:
 632:../../../os/hal/src/hal_queues.c **** }
 2115               		.loc 1 632 1 is_stmt 0 view .LVU529
 2116 0028 C801      		movw r24,r16
 2117               	/* epilogue start */
 2118 002a DF91      		pop r29
 2119 002c CF91      		pop r28
 2120               	.LVL132:
 2121               		.loc 1 632 1 view .LVU530
 2122 002e 1F91      		pop r17
 2123 0030 0F91      		pop r16
 2124               	.LVL133:
 2125               		.loc 1 632 1 view .LVU531
 2126 0032 FF90      		pop r15
 2127 0034 EF90      		pop r14
 2128               	.LVL134:
 2129               		.loc 1 632 1 view .LVU532
 2130 0036 0895      		ret
 2131               		.cfi_endproc
 2132               	.LFE187:
 2134               		.section	.text.oqWriteTimeout,"ax",@progbits
 2135               	.global	oqWriteTimeout
 2137               	oqWriteTimeout:
 2138               	.LVL135:
 2139               	.LFB188:
 633:../../../os/hal/src/hal_queues.c **** 
 634:../../../os/hal/src/hal_queues.c **** /**
 635:../../../os/hal/src/hal_queues.c ****  * @brief   Output queue write with timeout.
 636:../../../os/hal/src/hal_queues.c ****  * @details The function writes data from a buffer to an output queue. The
 637:../../../os/hal/src/hal_queues.c ****  *          operation completes when the specified amount of data has been
 638:../../../os/hal/src/hal_queues.c ****  *          transferred or after the specified timeout or if the queue has
 639:../../../os/hal/src/hal_queues.c ****  *          been reset.
 640:../../../os/hal/src/hal_queues.c ****  * @note    The function is not atomic, if you need atomicity it is suggested
 641:../../../os/hal/src/hal_queues.c ****  *          to use a semaphore or a mutex for mutual exclusion.
 642:../../../os/hal/src/hal_queues.c ****  * @note    The callback is invoked after putting each character into the
 643:../../../os/hal/src/hal_queues.c ****  *          queue.
 644:../../../os/hal/src/hal_queues.c ****  *
 645:../../../os/hal/src/hal_queues.c ****  * @param[in] oqp       pointer to an @p output_queue_t structure
 646:../../../os/hal/src/hal_queues.c ****  * @param[in] bp        pointer to the data buffer
 647:../../../os/hal/src/hal_queues.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 648:../../../os/hal/src/hal_queues.c ****  *                      value 0 is reserved
 649:../../../os/hal/src/hal_queues.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 650:../../../os/hal/src/hal_queues.c ****  *                      the following special values are allowed:
 651:../../../os/hal/src/hal_queues.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 652:../../../os/hal/src/hal_queues.c ****  *                      - @a TIME_INFINITE no timeout.
 653:../../../os/hal/src/hal_queues.c ****  *                      .
 654:../../../os/hal/src/hal_queues.c ****  * @return              The number of bytes effectively transferred.
 655:../../../os/hal/src/hal_queues.c ****  *
 656:../../../os/hal/src/hal_queues.c ****  * @api
 657:../../../os/hal/src/hal_queues.c ****  */
 658:../../../os/hal/src/hal_queues.c **** size_t oqWriteTimeout(output_queue_t *oqp, const uint8_t *bp,
 659:../../../os/hal/src/hal_queues.c ****                       size_t n, sysinterval_t timeout) {
 2140               		.loc 1 659 56 is_stmt 1 view -0
 2141               		.cfi_startproc
 2142               		.loc 1 659 56 is_stmt 0 view .LVU534
 2143 0000 6F92      		push r6
 2144               	.LCFI61:
 2145               		.cfi_def_cfa_offset 3
 2146               		.cfi_offset 6, -2
 2147 0002 7F92      		push r7
 2148               	.LCFI62:
 2149               		.cfi_def_cfa_offset 4
 2150               		.cfi_offset 7, -3
 2151 0004 8F92      		push r8
 2152               	.LCFI63:
 2153               		.cfi_def_cfa_offset 5
 2154               		.cfi_offset 8, -4
 2155 0006 9F92      		push r9
 2156               	.LCFI64:
 2157               		.cfi_def_cfa_offset 6
 2158               		.cfi_offset 9, -5
 2159 0008 AF92      		push r10
 2160               	.LCFI65:
 2161               		.cfi_def_cfa_offset 7
 2162               		.cfi_offset 10, -6
 2163 000a BF92      		push r11
 2164               	.LCFI66:
 2165               		.cfi_def_cfa_offset 8
 2166               		.cfi_offset 11, -7
 2167 000c CF92      		push r12
 2168               	.LCFI67:
 2169               		.cfi_def_cfa_offset 9
 2170               		.cfi_offset 12, -8
 2171 000e DF92      		push r13
 2172               	.LCFI68:
 2173               		.cfi_def_cfa_offset 10
 2174               		.cfi_offset 13, -9
 2175 0010 EF92      		push r14
 2176               	.LCFI69:
 2177               		.cfi_def_cfa_offset 11
 2178               		.cfi_offset 14, -10
 2179 0012 FF92      		push r15
 2180               	.LCFI70:
 2181               		.cfi_def_cfa_offset 12
 2182               		.cfi_offset 15, -11
 2183 0014 0F93      		push r16
 2184               	.LCFI71:
 2185               		.cfi_def_cfa_offset 13
 2186               		.cfi_offset 16, -12
 2187 0016 1F93      		push r17
 2188               	.LCFI72:
 2189               		.cfi_def_cfa_offset 14
 2190               		.cfi_offset 17, -13
 2191 0018 CF93      		push r28
 2192               	.LCFI73:
 2193               		.cfi_def_cfa_offset 15
 2194               		.cfi_offset 28, -14
 2195 001a DF93      		push r29
 2196               	.LCFI74:
 2197               		.cfi_def_cfa_offset 16
 2198               		.cfi_offset 29, -15
 2199               	/* prologue: function */
 2200               	/* frame size = 0 */
 2201               	/* stack size = 14 */
 2202               	.L__stack_usage = 14
 2203 001c 4C01      		movw r8,r24
 2204 001e 7B01      		movw r14,r22
 2205 0020 6A01      		movw r12,r20
 2206 0022 3901      		movw r6,r18
 660:../../../os/hal/src/hal_queues.c ****   qnotify_t nfy = oqp->q_notify;
 2207               		.loc 1 660 3 is_stmt 1 view .LVU535
 2208               		.loc 1 660 13 is_stmt 0 view .LVU536
 2209 0024 FC01      		movw r30,r24
 2210 0026 A684      		ldd r10,Z+14
 2211 0028 B784      		ldd r11,Z+15
 2212               	.LVL136:
 661:../../../os/hal/src/hal_queues.c ****   size_t wr = 0;
 2213               		.loc 1 661 3 is_stmt 1 view .LVU537
 662:../../../os/hal/src/hal_queues.c **** 
 663:../../../os/hal/src/hal_queues.c ****   osalDbgCheck(n > 0U);
 2214               		.loc 1 663 3 view .LVU538
 2215               		.loc 1 663 3 view .LVU539
 664:../../../os/hal/src/hal_queues.c **** 
 665:../../../os/hal/src/hal_queues.c ****   osalSysLock();
 2216               		.loc 1 665 3 view .LVU540
 2217               	.LBB239:
 2218               	.LBI239:
 509:../../../os/hal/osal/rt/osal.h **** 
 2219               		.loc 2 509 20 view .LVU541
 2220               	.LBE239:
 511:../../../os/hal/osal/rt/osal.h **** }
 2221               		.loc 2 511 3 view .LVU542
 2222               	.LBB244:
 2223               	.LBB240:
 2224               	.LBI240:
 353:../../../os/rt/include/chsys.h **** 
 2225               		.loc 5 353 20 view .LVU543
 2226               	.LBE240:
 2227               	.LBE244:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2228               		.loc 5 355 3 view .LVU544
 2229               	.LBB245:
 2230               	.LBB243:
 2231               	.LBB241:
 2232               	.LBI241:
 435:../../../os/common/ports/AVR/chcore.h **** 
 2233               		.loc 6 435 20 view .LVU545
 2234               	.LBB242:
 437:../../../os/common/ports/AVR/chcore.h **** }
 2235               		.loc 6 437 3 view .LVU546
 2236               	/* #APP */
 2237               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 2238 002a F894      		cli
 2239               	 ;  0 "" 2
 2240               	/* #NOAPP */
 2241               	.LBE242:
 2242               	.LBE241:
 2243               	.LBE243:
 2244               	.LBE245:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 2245               		.loc 5 356 34 view .LVU547
 357:../../../os/rt/include/chsys.h **** }
 2246               		.loc 5 357 20 view .LVU548
 661:../../../os/hal/src/hal_queues.c **** 
 2247               		.loc 1 661 10 is_stmt 0 view .LVU549
 2248 002c 10E0      		ldi r17,0
 2249 002e 00E0      		ldi r16,0
 666:../../../os/hal/src/hal_queues.c **** 
 667:../../../os/hal/src/hal_queues.c ****   while (wr < n) {
 2250               		.loc 1 667 9 view .LVU550
 2251 0030 452B      		or r20,r21
 2252 0032 01F4      		brne .L104
 2253 0034 00C0      		rjmp .L100
 2254               	.LVL137:
 2255               	.L101:
 2256               	.LBB246:
 668:../../../os/hal/src/hal_queues.c ****     size_t done;
 669:../../../os/hal/src/hal_queues.c **** 
 670:../../../os/hal/src/hal_queues.c ****     done = oq_write(oqp, bp, n);
 671:../../../os/hal/src/hal_queues.c ****     if (done == (size_t)0) {
 672:../../../os/hal/src/hal_queues.c ****       msg_t msg = osalThreadEnqueueTimeoutS(&oqp->q_waiting, timeout);
 673:../../../os/hal/src/hal_queues.c **** 
 674:../../../os/hal/src/hal_queues.c ****       /* Anything except MSG_OK causes the operation to stop.*/
 675:../../../os/hal/src/hal_queues.c ****       if (msg != MSG_OK) {
 676:../../../os/hal/src/hal_queues.c ****         break;
 677:../../../os/hal/src/hal_queues.c ****       }
 678:../../../os/hal/src/hal_queues.c ****     }
 679:../../../os/hal/src/hal_queues.c ****     else {
 680:../../../os/hal/src/hal_queues.c ****       /* Inform the low side that the queue has at least one character
 681:../../../os/hal/src/hal_queues.c ****          available.*/
 682:../../../os/hal/src/hal_queues.c ****       if (nfy != NULL) {
 2257               		.loc 1 682 7 is_stmt 1 view .LVU551
 2258               		.loc 1 682 10 is_stmt 0 view .LVU552
 2259 0036 A114      		cp r10,__zero_reg__
 2260 0038 B104      		cpc r11,__zero_reg__
 2261 003a 01F0      		breq .L103
 683:../../../os/hal/src/hal_queues.c ****         nfy(oqp);
 2262               		.loc 1 683 9 is_stmt 1 view .LVU553
 2263 003c C401      		movw r24,r8
 2264               	.LVL138:
 2265               		.loc 1 683 9 is_stmt 0 view .LVU554
 2266 003e F501      		movw r30,r10
 2267 0040 0995      		icall
 2268               	.LVL139:
 2269               	.L103:
 684:../../../os/hal/src/hal_queues.c ****       }
 685:../../../os/hal/src/hal_queues.c **** 
 686:../../../os/hal/src/hal_queues.c ****       /* Giving a preemption chance in a controlled point.*/
 687:../../../os/hal/src/hal_queues.c ****       osalSysUnlock();
 2270               		.loc 1 687 7 is_stmt 1 view .LVU555
 2271               	.LBB247:
 2272               	.LBI247:
 520:../../../os/hal/osal/rt/osal.h **** 
 2273               		.loc 2 520 20 view .LVU556
 2274               	.LBE247:
 2275               	.LBE246:
 522:../../../os/hal/osal/rt/osal.h **** }
 2276               		.loc 2 522 3 view .LVU557
 2277               	.LBB263:
 2278               	.LBB252:
 2279               	.LBB248:
 2280               	.LBI248:
 365:../../../os/rt/include/chsys.h **** 
 2281               		.loc 5 365 20 view .LVU558
 2282               	.LBB249:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2283               		.loc 5 367 22 view .LVU559
 368:../../../os/rt/include/chsys.h **** 
 2284               		.loc 5 368 33 view .LVU560
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2285               		.loc 5 374 3 view .LVU561
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2286               		.loc 5 374 3 view .LVU562
 2287               		.loc 5 378 3 view .LVU563
 2288               	.LBB250:
 2289               	.LBI250:
 445:../../../os/common/ports/AVR/chcore.h **** 
 2290               		.loc 6 445 20 view .LVU564
 2291               	.LBB251:
 2292               		.loc 6 447 3 view .LVU565
 2293               	/* #APP */
 2294               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 2295 0042 7894      		sei
 2296               	 ;  0 "" 2
 2297               	/* #NOAPP */
 2298               	.LBE251:
 2299               	.LBE250:
 2300               	.LBE249:
 2301               	.LBE248:
 2302               	.LBE252:
 688:../../../os/hal/src/hal_queues.c **** 
 689:../../../os/hal/src/hal_queues.c ****       wr += done;
 2303               		.loc 1 689 7 view .LVU566
 2304               		.loc 1 689 10 is_stmt 0 view .LVU567
 2305 0044 0C0F      		add r16,r28
 2306 0046 1D1F      		adc r17,r29
 2307               	.LVL140:
 690:../../../os/hal/src/hal_queues.c ****       bp += done;
 2308               		.loc 1 690 7 is_stmt 1 view .LVU568
 2309               		.loc 1 690 10 is_stmt 0 view .LVU569
 2310 0048 EC0E      		add r14,r28
 2311 004a FD1E      		adc r15,r29
 2312               	.LVL141:
 691:../../../os/hal/src/hal_queues.c **** 
 692:../../../os/hal/src/hal_queues.c ****       osalSysLock();
 2313               		.loc 1 692 7 is_stmt 1 view .LVU570
 2314               	.LBB253:
 2315               	.LBI253:
 509:../../../os/hal/osal/rt/osal.h **** 
 2316               		.loc 2 509 20 view .LVU571
 2317               	.LBE253:
 2318               	.LBE263:
 511:../../../os/hal/osal/rt/osal.h **** }
 2319               		.loc 2 511 3 view .LVU572
 2320               	.LBB264:
 2321               	.LBB258:
 2322               	.LBB254:
 2323               	.LBI254:
 353:../../../os/rt/include/chsys.h **** 
 2324               		.loc 5 353 20 view .LVU573
 2325               	.LBE254:
 2326               	.LBE258:
 2327               	.LBE264:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2328               		.loc 5 355 3 view .LVU574
 2329               	.LBB265:
 2330               	.LBB259:
 2331               	.LBB257:
 2332               	.LBB255:
 2333               	.LBI255:
 435:../../../os/common/ports/AVR/chcore.h **** 
 2334               		.loc 6 435 20 view .LVU575
 2335               	.LBB256:
 437:../../../os/common/ports/AVR/chcore.h **** }
 2336               		.loc 6 437 3 view .LVU576
 2337               	/* #APP */
 2338               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 2339 004c F894      		cli
 2340               	 ;  0 "" 2
 2341               	/* #NOAPP */
 2342               	.LBE256:
 2343               	.LBE255:
 2344               	.LBE257:
 2345               	.LBE259:
 2346               	.LBE265:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 2347               		.loc 5 356 34 view .LVU577
 357:../../../os/rt/include/chsys.h **** }
 2348               		.loc 5 357 20 view .LVU578
 2349               	.L102:
 667:../../../os/hal/src/hal_queues.c ****     size_t done;
 2350               		.loc 1 667 9 is_stmt 0 view .LVU579
 2351 004e 0C15      		cp r16,r12
 2352 0050 1D05      		cpc r17,r13
 2353 0052 00F4      		brsh .L100
 2354               	.LVL142:
 2355               	.L104:
 2356               	.LBB266:
 668:../../../os/hal/src/hal_queues.c **** 
 2357               		.loc 1 668 5 is_stmt 1 view .LVU580
 670:../../../os/hal/src/hal_queues.c ****     if (done == (size_t)0) {
 2358               		.loc 1 670 5 view .LVU581
 670:../../../os/hal/src/hal_queues.c ****     if (done == (size_t)0) {
 2359               		.loc 1 670 12 is_stmt 0 view .LVU582
 2360 0054 A601      		movw r20,r12
 2361 0056 B701      		movw r22,r14
 2362 0058 C401      		movw r24,r8
 2363 005a 0E94 0000 		call oq_write
 2364               	.LVL143:
 2365 005e EC01      		movw r28,r24
 2366               	.LVL144:
 671:../../../os/hal/src/hal_queues.c ****       msg_t msg = osalThreadEnqueueTimeoutS(&oqp->q_waiting, timeout);
 2367               		.loc 1 671 5 is_stmt 1 view .LVU583
 671:../../../os/hal/src/hal_queues.c ****       msg_t msg = osalThreadEnqueueTimeoutS(&oqp->q_waiting, timeout);
 2368               		.loc 1 671 8 is_stmt 0 view .LVU584
 2369 0060 892B      		or r24,r25
 2370 0062 01F4      		brne .L101
 2371               	.LBB260:
 672:../../../os/hal/src/hal_queues.c **** 
 2372               		.loc 1 672 7 is_stmt 1 view .LVU585
 2373               	.LVL145:
 2374               	.LBB261:
 2375               	.LBI261:
 828:../../../os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 2376               		.loc 2 828 21 view .LVU586
 2377               	.LBB262:
 831:../../../os/hal/osal/rt/osal.h **** }
 2378               		.loc 2 831 3 view .LVU587
 831:../../../os/hal/osal/rt/osal.h **** }
 2379               		.loc 2 831 10 is_stmt 0 view .LVU588
 2380 0064 B301      		movw r22,r6
 2381 0066 C401      		movw r24,r8
 2382               	.LVL146:
 831:../../../os/hal/osal/rt/osal.h **** }
 2383               		.loc 2 831 10 view .LVU589
 2384 0068 0E94 0000 		call chThdEnqueueTimeoutS
 2385               	.LVL147:
 831:../../../os/hal/osal/rt/osal.h **** }
 2386               		.loc 2 831 10 view .LVU590
 2387               	.LBE262:
 2388               	.LBE261:
 675:../../../os/hal/src/hal_queues.c ****         break;
 2389               		.loc 1 675 7 is_stmt 1 view .LVU591
 675:../../../os/hal/src/hal_queues.c ****         break;
 2390               		.loc 1 675 10 is_stmt 0 view .LVU592
 2391 006c 892B      		or r24,r25
 2392 006e 01F0      		breq .L102
 2393               	.LVL148:
 2394               	.L100:
 675:../../../os/hal/src/hal_queues.c ****         break;
 2395               		.loc 1 675 10 view .LVU593
 2396               	.LBE260:
 2397               	.LBE266:
 693:../../../os/hal/src/hal_queues.c ****     }
 694:../../../os/hal/src/hal_queues.c ****   }
 695:../../../os/hal/src/hal_queues.c **** 
 696:../../../os/hal/src/hal_queues.c ****   osalSysUnlock();
 2398               		.loc 1 696 3 is_stmt 1 view .LVU594
 2399               	.LBB267:
 2400               	.LBI267:
 520:../../../os/hal/osal/rt/osal.h **** 
 2401               		.loc 2 520 20 view .LVU595
 2402               	.LBE267:
 522:../../../os/hal/osal/rt/osal.h **** }
 2403               		.loc 2 522 3 view .LVU596
 2404               	.LBB272:
 2405               	.LBB268:
 2406               	.LBI268:
 365:../../../os/rt/include/chsys.h **** 
 2407               		.loc 5 365 20 view .LVU597
 2408               	.LBB269:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2409               		.loc 5 367 22 view .LVU598
 368:../../../os/rt/include/chsys.h **** 
 2410               		.loc 5 368 33 view .LVU599
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2411               		.loc 5 374 3 view .LVU600
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2412               		.loc 5 374 3 view .LVU601
 2413               		.loc 5 378 3 view .LVU602
 2414               	.LBB270:
 2415               	.LBI270:
 445:../../../os/common/ports/AVR/chcore.h **** 
 2416               		.loc 6 445 20 view .LVU603
 2417               	.LBB271:
 2418               		.loc 6 447 3 view .LVU604
 2419               	/* #APP */
 2420               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 2421 0070 7894      		sei
 2422               	 ;  0 "" 2
 2423               	/* #NOAPP */
 2424               	.LBE271:
 2425               	.LBE270:
 2426               	.LBE269:
 2427               	.LBE268:
 2428               	.LBE272:
 697:../../../os/hal/src/hal_queues.c ****   return wr;
 2429               		.loc 1 697 3 view .LVU605
 698:../../../os/hal/src/hal_queues.c **** }
 2430               		.loc 1 698 1 is_stmt 0 view .LVU606
 2431 0072 C801      		movw r24,r16
 2432               	/* epilogue start */
 2433 0074 DF91      		pop r29
 2434 0076 CF91      		pop r28
 2435 0078 1F91      		pop r17
 2436 007a 0F91      		pop r16
 2437 007c FF90      		pop r15
 2438 007e EF90      		pop r14
 2439               	.LVL149:
 2440               		.loc 1 698 1 view .LVU607
 2441 0080 DF90      		pop r13
 2442 0082 CF90      		pop r12
 2443               	.LVL150:
 2444               		.loc 1 698 1 view .LVU608
 2445 0084 BF90      		pop r11
 2446 0086 AF90      		pop r10
 2447               	.LVL151:
 2448               		.loc 1 698 1 view .LVU609
 2449 0088 9F90      		pop r9
 2450 008a 8F90      		pop r8
 2451               	.LVL152:
 2452               		.loc 1 698 1 view .LVU610
 2453 008c 7F90      		pop r7
 2454 008e 6F90      		pop r6
 2455               	.LVL153:
 2456               		.loc 1 698 1 view .LVU611
 2457 0090 0895      		ret
 2458               		.cfi_endproc
 2459               	.LFE188:
 2461               		.text
 2462               	.Letext0:
 2463               		.file 7 "/usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/include/stddef.h"
 2464               		.file 8 "/usr/local/Cellar/avr-gcc/8.2.0/avr/include/stdint.h"
 2465               		.file 9 "../../../os/common/ports/AVR/compilers/GCC/chtypes.h"
 2466               		.file 10 "../../../os/rt/include/chsystypes.h"
 2467               		.file 11 "../../../os/rt/include/chtime.h"
 2468               		.file 12 "../../../os/rt/include/chsem.h"
 2469               		.file 13 "../../../os/rt/include/chmtx.h"
 2470               		.file 14 "../../../os/rt/include/chregistry.h"
 2471               		.file 15 "../../../os/rt/include/chevents.h"
 2472               		.file 16 "../../../os/common/oslib/include/chmemcore.h"
 2473               		.file 17 "../../../os/hal/include/hal_queues.h"
 2474               		.file 18 "../../../os/hal/include/hal_pal.h"
 2475               		.file 19 "../../../os/hal/ports/AVR/MEGA/LLD/GPIOv1/hal_pal_lld.h"
 2476               		.file 20 "../../../os/hal/include/hal_adc.h"
 2477               		.file 21 "../../../os/hal/ports/AVR/MEGA/LLD/ADCv1/hal_adc_lld.h"
 2478               		.file 22 "../../../os/hal/include/hal_serial.h"
 2479               		.file 23 "../../../os/hal/ports/AVR/MEGA/LLD/USARTv1/hal_serial_lld.h"
 2480               		.file 24 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_queues.c
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:4      *ABS*:000000000000003f __SREG__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:12     .text.iq_read:0000000000000000 iq_read
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:203    .text.oq_write:0000000000000000 oq_write
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:396    .text.iqObjectInit:0000000000000000 iqObjectInit
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:497    .text.iqResetI:0000000000000000 iqResetI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:543    .text.iqPutI:0000000000000000 iqPutI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:640    .text.iqGetI:0000000000000000 iqGetI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:760    .text.iqGetTimeout:0000000000000000 iqGetTimeout
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:1003   .text.iqReadI:0000000000000000 iqReadI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:1089   .text.iqReadTimeout:0000000000000000 iqReadTimeout
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:1416   .text.oqObjectInit:0000000000000000 oqObjectInit
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:1514   .text.oqResetI:0000000000000000 oqResetI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:1569   .text.oqPutI:0000000000000000 oqPutI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:1688   .text.oqPutTimeout:0000000000000000 oqPutTimeout
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:1938   .text.oqGetI:0000000000000000 oqGetI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:2051   .text.oqWriteI:0000000000000000 oqWriteI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccTdzDs2.s:2137   .text.oqWriteTimeout:0000000000000000 oqWriteTimeout

UNDEFINED SYMBOLS
memcpy
chThdDequeueAllI
chThdDequeueNextI
chThdEnqueueTimeoutS
