   1               		.file	"hal_buffers.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.ibqObjectInit,"ax",@progbits
  11               	.global	ibqObjectInit
  13               	ibqObjectInit:
  14               	.LVL0:
  15               	.LFB173:
  16               		.file 1 "../../../os/hal/src/hal_buffers.c"
   1:../../../os/hal/src/hal_buffers.c **** /*
   2:../../../os/hal/src/hal_buffers.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../../os/hal/src/hal_buffers.c **** 
   4:../../../os/hal/src/hal_buffers.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../../os/hal/src/hal_buffers.c ****     you may not use this file except in compliance with the License.
   6:../../../os/hal/src/hal_buffers.c ****     You may obtain a copy of the License at
   7:../../../os/hal/src/hal_buffers.c **** 
   8:../../../os/hal/src/hal_buffers.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../../os/hal/src/hal_buffers.c **** 
  10:../../../os/hal/src/hal_buffers.c ****     Unless required by applicable law or agreed to in writing, software
  11:../../../os/hal/src/hal_buffers.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../../os/hal/src/hal_buffers.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../../os/hal/src/hal_buffers.c ****     See the License for the specific language governing permissions and
  14:../../../os/hal/src/hal_buffers.c ****     limitations under the License.
  15:../../../os/hal/src/hal_buffers.c **** */
  16:../../../os/hal/src/hal_buffers.c **** 
  17:../../../os/hal/src/hal_buffers.c **** /**
  18:../../../os/hal/src/hal_buffers.c ****  * @file    hal_buffers.c
  19:../../../os/hal/src/hal_buffers.c ****  * @brief   I/O Buffers code.
  20:../../../os/hal/src/hal_buffers.c ****  *
  21:../../../os/hal/src/hal_buffers.c ****  * @addtogroup HAL_BUFFERS
  22:../../../os/hal/src/hal_buffers.c ****  * @details Buffers Queues are used when there is the need to exchange
  23:../../../os/hal/src/hal_buffers.c ****  *          fixed-length data buffers between ISRs and threads.
  24:../../../os/hal/src/hal_buffers.c ****  *          On the ISR side data can be exchanged only using buffers,
  25:../../../os/hal/src/hal_buffers.c ****  *          on the thread side data can be exchanged both using buffers and/or
  26:../../../os/hal/src/hal_buffers.c ****  *          using an emulation of regular byte queues.
  27:../../../os/hal/src/hal_buffers.c ****  *          There are several kind of buffers queues:<br>
  28:../../../os/hal/src/hal_buffers.c ****  *          - <b>Input queue</b>, unidirectional queue where the writer is the
  29:../../../os/hal/src/hal_buffers.c ****  *            ISR side and the reader is the thread side.
  30:../../../os/hal/src/hal_buffers.c ****  *          - <b>Output queue</b>, unidirectional queue where the writer is the
  31:../../../os/hal/src/hal_buffers.c ****  *            ISR side and the reader is the thread side.
  32:../../../os/hal/src/hal_buffers.c ****  *          - <b>Full duplex queue</b>, bidirectional queue. Full duplex queues
  33:../../../os/hal/src/hal_buffers.c ****  *            are implemented by pairing an input queue and an output queue
  34:../../../os/hal/src/hal_buffers.c ****  *            together.
  35:../../../os/hal/src/hal_buffers.c ****  *          .
  36:../../../os/hal/src/hal_buffers.c ****  * @{
  37:../../../os/hal/src/hal_buffers.c ****  */
  38:../../../os/hal/src/hal_buffers.c **** 
  39:../../../os/hal/src/hal_buffers.c **** #include <string.h>
  40:../../../os/hal/src/hal_buffers.c **** 
  41:../../../os/hal/src/hal_buffers.c **** #include "hal.h"
  42:../../../os/hal/src/hal_buffers.c **** 
  43:../../../os/hal/src/hal_buffers.c **** /*===========================================================================*/
  44:../../../os/hal/src/hal_buffers.c **** /* Driver local definitions.                                                 */
  45:../../../os/hal/src/hal_buffers.c **** /*===========================================================================*/
  46:../../../os/hal/src/hal_buffers.c **** 
  47:../../../os/hal/src/hal_buffers.c **** /*===========================================================================*/
  48:../../../os/hal/src/hal_buffers.c **** /* Driver exported variables.                                                */
  49:../../../os/hal/src/hal_buffers.c **** /*===========================================================================*/
  50:../../../os/hal/src/hal_buffers.c **** 
  51:../../../os/hal/src/hal_buffers.c **** /*===========================================================================*/
  52:../../../os/hal/src/hal_buffers.c **** /* Driver local variables and types.                                         */
  53:../../../os/hal/src/hal_buffers.c **** /*===========================================================================*/
  54:../../../os/hal/src/hal_buffers.c **** 
  55:../../../os/hal/src/hal_buffers.c **** /*===========================================================================*/
  56:../../../os/hal/src/hal_buffers.c **** /* Driver local functions.                                                   */
  57:../../../os/hal/src/hal_buffers.c **** /*===========================================================================*/
  58:../../../os/hal/src/hal_buffers.c **** 
  59:../../../os/hal/src/hal_buffers.c **** /*===========================================================================*/
  60:../../../os/hal/src/hal_buffers.c **** /* Driver exported functions.                                                */
  61:../../../os/hal/src/hal_buffers.c **** /*===========================================================================*/
  62:../../../os/hal/src/hal_buffers.c **** 
  63:../../../os/hal/src/hal_buffers.c **** /**
  64:../../../os/hal/src/hal_buffers.c ****  * @brief   Initializes an input buffers queue object.
  65:../../../os/hal/src/hal_buffers.c ****  *
  66:../../../os/hal/src/hal_buffers.c ****  * @param[out] ibqp     pointer to the @p input_buffers_queue_t object
  67:../../../os/hal/src/hal_buffers.c ****  * @param[in] suspended initial state of the queue
  68:../../../os/hal/src/hal_buffers.c ****  * @param[in] bp        pointer to a memory area allocated for buffers
  69:../../../os/hal/src/hal_buffers.c ****  * @param[in] size      buffers size
  70:../../../os/hal/src/hal_buffers.c ****  * @param[in] n         number of buffers
  71:../../../os/hal/src/hal_buffers.c ****  * @param[in] infy      callback called when a buffer is returned to the queue
  72:../../../os/hal/src/hal_buffers.c ****  * @param[in] link      application defined pointer
  73:../../../os/hal/src/hal_buffers.c ****  *
  74:../../../os/hal/src/hal_buffers.c ****  * @init
  75:../../../os/hal/src/hal_buffers.c ****  */
  76:../../../os/hal/src/hal_buffers.c **** void ibqObjectInit(input_buffers_queue_t *ibqp, bool suspended, uint8_t *bp,
  77:../../../os/hal/src/hal_buffers.c ****                    size_t size, size_t n, bqnotify_t infy, void *link) {
  17               		.loc 1 77 72 view -0
  18               		.cfi_startproc
  19               		.loc 1 77 72 is_stmt 0 view .LVU1
  20 0000 CF92      		push r12
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 3
  23               		.cfi_offset 12, -2
  24 0002 DF92      		push r13
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 4
  27               		.cfi_offset 13, -3
  28 0004 EF92      		push r14
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 14, -4
  32 0006 FF92      		push r15
  33               	.LCFI3:
  34               		.cfi_def_cfa_offset 6
  35               		.cfi_offset 15, -5
  36 0008 0F93      		push r16
  37               	.LCFI4:
  38               		.cfi_def_cfa_offset 7
  39               		.cfi_offset 16, -6
  40 000a 1F93      		push r17
  41               	.LCFI5:
  42               		.cfi_def_cfa_offset 8
  43               		.cfi_offset 17, -7
  44               	/* prologue: function */
  45               	/* frame size = 0 */
  46               	/* stack size = 6 */
  47               	.L__stack_usage = 6
  48 000c FC01      		movw r30,r24
  78:../../../os/hal/src/hal_buffers.c **** 
  79:../../../os/hal/src/hal_buffers.c ****   osalDbgCheck((ibqp != NULL) && (bp != NULL) && (size >= 2U));
  49               		.loc 1 79 3 is_stmt 1 view .LVU2
  50               		.loc 1 79 3 view .LVU3
  80:../../../os/hal/src/hal_buffers.c **** 
  81:../../../os/hal/src/hal_buffers.c ****   osalThreadQueueObjectInit(&ibqp->waiting);
  51               		.loc 1 81 3 view .LVU4
  52               	.LVL1:
  53               	.LBB271:
  54               	.LBI271:
  55               		.file 2 "../../../os/hal/osal/rt/osal.h"
   1:../../../os/hal/osal/rt/osal.h **** /*
   2:../../../os/hal/osal/rt/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../../os/hal/osal/rt/osal.h **** 
   4:../../../os/hal/osal/rt/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../../os/hal/osal/rt/osal.h ****     you may not use this file except in compliance with the License.
   6:../../../os/hal/osal/rt/osal.h ****     You may obtain a copy of the License at
   7:../../../os/hal/osal/rt/osal.h **** 
   8:../../../os/hal/osal/rt/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../../os/hal/osal/rt/osal.h **** 
  10:../../../os/hal/osal/rt/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:../../../os/hal/osal/rt/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../../os/hal/osal/rt/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../../os/hal/osal/rt/osal.h ****     See the License for the specific language governing permissions and
  14:../../../os/hal/osal/rt/osal.h ****     limitations under the License.
  15:../../../os/hal/osal/rt/osal.h **** */
  16:../../../os/hal/osal/rt/osal.h **** 
  17:../../../os/hal/osal/rt/osal.h **** /**
  18:../../../os/hal/osal/rt/osal.h ****  * @file    osal.h
  19:../../../os/hal/osal/rt/osal.h ****  * @brief   OSAL module header.
  20:../../../os/hal/osal/rt/osal.h ****  *
  21:../../../os/hal/osal/rt/osal.h ****  * @addtogroup OSAL
  22:../../../os/hal/osal/rt/osal.h ****  * @{
  23:../../../os/hal/osal/rt/osal.h ****  */
  24:../../../os/hal/osal/rt/osal.h **** 
  25:../../../os/hal/osal/rt/osal.h **** #ifndef OSAL_H
  26:../../../os/hal/osal/rt/osal.h **** #define OSAL_H
  27:../../../os/hal/osal/rt/osal.h **** 
  28:../../../os/hal/osal/rt/osal.h **** #include <stddef.h>
  29:../../../os/hal/osal/rt/osal.h **** #include <stdint.h>
  30:../../../os/hal/osal/rt/osal.h **** #include <stdbool.h>
  31:../../../os/hal/osal/rt/osal.h **** 
  32:../../../os/hal/osal/rt/osal.h **** #include "ch.h"
  33:../../../os/hal/osal/rt/osal.h **** 
  34:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
  35:../../../os/hal/osal/rt/osal.h **** /* Module constants.                                                         */
  36:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
  37:../../../os/hal/osal/rt/osal.h **** 
  38:../../../os/hal/osal/rt/osal.h **** /**
  39:../../../os/hal/osal/rt/osal.h ****  * @name    Common constants
  40:../../../os/hal/osal/rt/osal.h ****  * @{
  41:../../../os/hal/osal/rt/osal.h ****  */
  42:../../../os/hal/osal/rt/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:../../../os/hal/osal/rt/osal.h **** #define FALSE                               0
  44:../../../os/hal/osal/rt/osal.h **** #endif
  45:../../../os/hal/osal/rt/osal.h **** 
  46:../../../os/hal/osal/rt/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:../../../os/hal/osal/rt/osal.h **** #define TRUE                                1
  48:../../../os/hal/osal/rt/osal.h **** #endif
  49:../../../os/hal/osal/rt/osal.h **** 
  50:../../../os/hal/osal/rt/osal.h **** #define OSAL_SUCCESS                        false
  51:../../../os/hal/osal/rt/osal.h **** #define OSAL_FAILED                         true
  52:../../../os/hal/osal/rt/osal.h **** /** @} */
  53:../../../os/hal/osal/rt/osal.h **** 
  54:../../../os/hal/osal/rt/osal.h **** #if 0
  55:../../../os/hal/osal/rt/osal.h **** /**
  56:../../../os/hal/osal/rt/osal.h ****  * @name    Messages
  57:../../../os/hal/osal/rt/osal.h ****  * @{
  58:../../../os/hal/osal/rt/osal.h ****  */
  59:../../../os/hal/osal/rt/osal.h **** #define MSG_OK                              (msg_t)0
  60:../../../os/hal/osal/rt/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:../../../os/hal/osal/rt/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:../../../os/hal/osal/rt/osal.h **** /** @} */
  63:../../../os/hal/osal/rt/osal.h **** #endif
  64:../../../os/hal/osal/rt/osal.h **** 
  65:../../../os/hal/osal/rt/osal.h **** #if 0
  66:../../../os/hal/osal/rt/osal.h **** /**
  67:../../../os/hal/osal/rt/osal.h ****  * @name    Special time constants
  68:../../../os/hal/osal/rt/osal.h ****  * @{
  69:../../../os/hal/osal/rt/osal.h ****  */
  70:../../../os/hal/osal/rt/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:../../../os/hal/osal/rt/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:../../../os/hal/osal/rt/osal.h **** /** @} */
  73:../../../os/hal/osal/rt/osal.h **** #endif
  74:../../../os/hal/osal/rt/osal.h **** 
  75:../../../os/hal/osal/rt/osal.h **** /**
  76:../../../os/hal/osal/rt/osal.h ****  * @name    Systick modes.
  77:../../../os/hal/osal/rt/osal.h ****  * @{
  78:../../../os/hal/osal/rt/osal.h ****  */
  79:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:../../../os/hal/osal/rt/osal.h **** /** @} */
  83:../../../os/hal/osal/rt/osal.h **** 
  84:../../../os/hal/osal/rt/osal.h **** /**
  85:../../../os/hal/osal/rt/osal.h ****  * @name    Systick parameters.
  86:../../../os/hal/osal/rt/osal.h ****  * @{
  87:../../../os/hal/osal/rt/osal.h ****  */
  88:../../../os/hal/osal/rt/osal.h **** /**
  89:../../../os/hal/osal/rt/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:../../../os/hal/osal/rt/osal.h ****  */
  91:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:../../../os/hal/osal/rt/osal.h **** 
  93:../../../os/hal/osal/rt/osal.h **** /**
  94:../../../os/hal/osal/rt/osal.h ****  * @brief   Required systick frequency or resolution.
  95:../../../os/hal/osal/rt/osal.h ****  */
  96:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:../../../os/hal/osal/rt/osal.h **** 
  98:../../../os/hal/osal/rt/osal.h **** /**
  99:../../../os/hal/osal/rt/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:../../../os/hal/osal/rt/osal.h ****  */
 101:../../../os/hal/osal/rt/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:../../../os/hal/osal/rt/osal.h **** #else
 104:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:../../../os/hal/osal/rt/osal.h **** #endif
 106:../../../os/hal/osal/rt/osal.h **** /** @} */
 107:../../../os/hal/osal/rt/osal.h **** 
 108:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 109:../../../os/hal/osal/rt/osal.h **** /* Module pre-compile time settings.                                         */
 110:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 111:../../../os/hal/osal/rt/osal.h **** 
 112:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 113:../../../os/hal/osal/rt/osal.h **** /* Derived constants and error checks.                                       */
 114:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 115:../../../os/hal/osal/rt/osal.h **** 
 116:../../../os/hal/osal/rt/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:../../../os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:../../../os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:../../../os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:../../../os/hal/osal/rt/osal.h **** #endif
 121:../../../os/hal/osal/rt/osal.h **** 
 122:../../../os/hal/osal/rt/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:../../../os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:../../../os/hal/osal/rt/osal.h **** #endif
 125:../../../os/hal/osal/rt/osal.h **** 
 126:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 127:../../../os/hal/osal/rt/osal.h **** /* Module data structures and types.                                         */
 128:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 129:../../../os/hal/osal/rt/osal.h **** 
 130:../../../os/hal/osal/rt/osal.h **** #if 0
 131:../../../os/hal/osal/rt/osal.h **** /**
 132:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a system status word.
 133:../../../os/hal/osal/rt/osal.h ****  */
 134:../../../os/hal/osal/rt/osal.h **** typedef uint32_t syssts_t;
 135:../../../os/hal/osal/rt/osal.h **** #endif
 136:../../../os/hal/osal/rt/osal.h **** 
 137:../../../os/hal/osal/rt/osal.h **** #if 0
 138:../../../os/hal/osal/rt/osal.h **** /**
 139:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a message.
 140:../../../os/hal/osal/rt/osal.h ****  */
 141:../../../os/hal/osal/rt/osal.h **** typedef int32_t msg_t;
 142:../../../os/hal/osal/rt/osal.h **** #endif
 143:../../../os/hal/osal/rt/osal.h **** 
 144:../../../os/hal/osal/rt/osal.h **** #if 0
 145:../../../os/hal/osal/rt/osal.h **** /**
 146:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of system time counter.
 147:../../../os/hal/osal/rt/osal.h ****  */
 148:../../../os/hal/osal/rt/osal.h **** typedef uint32_t systime_t;
 149:../../../os/hal/osal/rt/osal.h **** #endif
 150:../../../os/hal/osal/rt/osal.h **** 
 151:../../../os/hal/osal/rt/osal.h **** #if 0
 152:../../../os/hal/osal/rt/osal.h **** /**
 153:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of system time interval.
 154:../../../os/hal/osal/rt/osal.h ****  */
 155:../../../os/hal/osal/rt/osal.h **** typedef uint32_t sysinterval_t;
 156:../../../os/hal/osal/rt/osal.h **** #endif
 157:../../../os/hal/osal/rt/osal.h **** 
 158:../../../os/hal/osal/rt/osal.h **** #if 0
 159:../../../os/hal/osal/rt/osal.h **** /**
 160:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of realtime counter.
 161:../../../os/hal/osal/rt/osal.h ****  */
 162:../../../os/hal/osal/rt/osal.h **** typedef uint32_t rtcnt_t;
 163:../../../os/hal/osal/rt/osal.h **** #endif
 164:../../../os/hal/osal/rt/osal.h **** 
 165:../../../os/hal/osal/rt/osal.h **** #if 0
 166:../../../os/hal/osal/rt/osal.h **** /**
 167:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a thread reference.
 168:../../../os/hal/osal/rt/osal.h ****  */
 169:../../../os/hal/osal/rt/osal.h **** typedef thread_t * thread_reference_t;
 170:../../../os/hal/osal/rt/osal.h **** #endif
 171:../../../os/hal/osal/rt/osal.h **** 
 172:../../../os/hal/osal/rt/osal.h **** #if 0
 173:../../../os/hal/osal/rt/osal.h **** /**
 174:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags mask.
 175:../../../os/hal/osal/rt/osal.h ****  */
 176:../../../os/hal/osal/rt/osal.h **** typedef uint32_t eventflags_t;
 177:../../../os/hal/osal/rt/osal.h **** #endif
 178:../../../os/hal/osal/rt/osal.h **** 
 179:../../../os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 180:../../../os/hal/osal/rt/osal.h **** /**
 181:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags object.
 182:../../../os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 183:../../../os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 184:../../../os/hal/osal/rt/osal.h ****  *          an entirely different way.
 185:../../../os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 186:../../../os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 187:../../../os/hal/osal/rt/osal.h ****  */
 188:../../../os/hal/osal/rt/osal.h **** typedef struct event_source event_source_t;
 189:../../../os/hal/osal/rt/osal.h **** 
 190:../../../os/hal/osal/rt/osal.h **** /**
 191:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of an event source callback.
 192:../../../os/hal/osal/rt/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 193:../../../os/hal/osal/rt/osal.h ****  *          exclusively as an example and for convenience.
 194:../../../os/hal/osal/rt/osal.h ****  */
 195:../../../os/hal/osal/rt/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 196:../../../os/hal/osal/rt/osal.h **** 
 197:../../../os/hal/osal/rt/osal.h **** /**
 198:../../../os/hal/osal/rt/osal.h ****  * @brief   Events source object.
 199:../../../os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 200:../../../os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 201:../../../os/hal/osal/rt/osal.h ****  *          an entirely different way.
 202:../../../os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 203:../../../os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 204:../../../os/hal/osal/rt/osal.h ****  */
 205:../../../os/hal/osal/rt/osal.h **** struct event_source {
 206:../../../os/hal/osal/rt/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 207:../../../os/hal/osal/rt/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 208:../../../os/hal/osal/rt/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 209:../../../os/hal/osal/rt/osal.h **** };
 210:../../../os/hal/osal/rt/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 211:../../../os/hal/osal/rt/osal.h **** 
 212:../../../os/hal/osal/rt/osal.h **** /**
 213:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a mutex.
 214:../../../os/hal/osal/rt/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 215:../../../os/hal/osal/rt/osal.h ****  *          mechanism can be simulated.
 216:../../../os/hal/osal/rt/osal.h ****  */
 217:../../../os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 218:../../../os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 219:../../../os/hal/osal/rt/osal.h **** typedef semaphore_t mutex_t;
 220:../../../os/hal/osal/rt/osal.h **** #else
 221:../../../os/hal/osal/rt/osal.h **** typedef uint32_t mutex_t;
 222:../../../os/hal/osal/rt/osal.h **** #endif
 223:../../../os/hal/osal/rt/osal.h **** 
 224:../../../os/hal/osal/rt/osal.h **** #if 0
 225:../../../os/hal/osal/rt/osal.h **** /**
 226:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a thread queue.
 227:../../../os/hal/osal/rt/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 228:../../../os/hal/osal/rt/osal.h ****  *          can be dequeued one at time or all together.
 229:../../../os/hal/osal/rt/osal.h ****  * @note    In this implementation it is implemented as a single reference
 230:../../../os/hal/osal/rt/osal.h ****  *          because there are no real threads.
 231:../../../os/hal/osal/rt/osal.h ****  */
 232:../../../os/hal/osal/rt/osal.h **** typedef struct {
 233:../../../os/hal/osal/rt/osal.h ****   thread_reference_t    tr;
 234:../../../os/hal/osal/rt/osal.h **** } threads_queue_t;
 235:../../../os/hal/osal/rt/osal.h **** #endif
 236:../../../os/hal/osal/rt/osal.h **** 
 237:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 238:../../../os/hal/osal/rt/osal.h **** /* Module macros.                                                            */
 239:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 240:../../../os/hal/osal/rt/osal.h **** 
 241:../../../os/hal/osal/rt/osal.h **** /**
 242:../../../os/hal/osal/rt/osal.h ****  * @name    Debug related macros
 243:../../../os/hal/osal/rt/osal.h ****  * @{
 244:../../../os/hal/osal/rt/osal.h ****  */
 245:../../../os/hal/osal/rt/osal.h **** /**
 246:../../../os/hal/osal/rt/osal.h ****  * @brief   Condition assertion.
 247:../../../os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 248:../../../os/hal/osal/rt/osal.h ****  *          message and halts.
 249:../../../os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 250:../../../os/hal/osal/rt/osal.h ****  *          switch is enabled.
 251:../../../os/hal/osal/rt/osal.h ****  * @note    The remark string is not currently used except for putting a
 252:../../../os/hal/osal/rt/osal.h ****  *          comment in the code about the assertion.
 253:../../../os/hal/osal/rt/osal.h ****  *
 254:../../../os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 255:../../../os/hal/osal/rt/osal.h ****  * @param[in] remark    a remark string
 256:../../../os/hal/osal/rt/osal.h ****  *
 257:../../../os/hal/osal/rt/osal.h ****  * @api
 258:../../../os/hal/osal/rt/osal.h ****  */
 259:../../../os/hal/osal/rt/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 260:../../../os/hal/osal/rt/osal.h **** 
 261:../../../os/hal/osal/rt/osal.h **** /**
 262:../../../os/hal/osal/rt/osal.h ****  * @brief   Function parameters check.
 263:../../../os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 264:../../../os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 265:../../../os/hal/osal/rt/osal.h ****  *          is enabled.
 266:../../../os/hal/osal/rt/osal.h ****  *
 267:../../../os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 268:../../../os/hal/osal/rt/osal.h ****  *
 269:../../../os/hal/osal/rt/osal.h ****  * @api
 270:../../../os/hal/osal/rt/osal.h ****  */
 271:../../../os/hal/osal/rt/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 272:../../../os/hal/osal/rt/osal.h **** 
 273:../../../os/hal/osal/rt/osal.h **** /**
 274:../../../os/hal/osal/rt/osal.h ****  * @brief   I-Class state check.
 275:../../../os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 276:../../../os/hal/osal/rt/osal.h ****  */
 277:../../../os/hal/osal/rt/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 278:../../../os/hal/osal/rt/osal.h **** 
 279:../../../os/hal/osal/rt/osal.h **** /**
 280:../../../os/hal/osal/rt/osal.h ****  * @brief   S-Class state check.
 281:../../../os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 282:../../../os/hal/osal/rt/osal.h ****  */
 283:../../../os/hal/osal/rt/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 284:../../../os/hal/osal/rt/osal.h **** /** @} */
 285:../../../os/hal/osal/rt/osal.h **** 
 286:../../../os/hal/osal/rt/osal.h **** /**
 287:../../../os/hal/osal/rt/osal.h ****  * @name    IRQ service routines wrappers
 288:../../../os/hal/osal/rt/osal.h ****  * @{
 289:../../../os/hal/osal/rt/osal.h ****  */
 290:../../../os/hal/osal/rt/osal.h **** /**
 291:../../../os/hal/osal/rt/osal.h ****  * @brief   Priority level verification macro.
 292:../../../os/hal/osal/rt/osal.h ****  */
 293:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 294:../../../os/hal/osal/rt/osal.h **** 
 295:../../../os/hal/osal/rt/osal.h **** /**
 296:../../../os/hal/osal/rt/osal.h ****  * @brief   IRQ prologue code.
 297:../../../os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 298:../../../os/hal/osal/rt/osal.h ****  */
 299:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 300:../../../os/hal/osal/rt/osal.h **** 
 301:../../../os/hal/osal/rt/osal.h **** /**
 302:../../../os/hal/osal/rt/osal.h ****  * @brief   IRQ epilogue code.
 303:../../../os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 304:../../../os/hal/osal/rt/osal.h ****  */
 305:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 306:../../../os/hal/osal/rt/osal.h **** 
 307:../../../os/hal/osal/rt/osal.h **** /**
 308:../../../os/hal/osal/rt/osal.h ****  * @brief   IRQ handler function declaration.
 309:../../../os/hal/osal/rt/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 310:../../../os/hal/osal/rt/osal.h ****  *
 311:../../../os/hal/osal/rt/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 312:../../../os/hal/osal/rt/osal.h ****  */
 313:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 314:../../../os/hal/osal/rt/osal.h **** /** @} */
 315:../../../os/hal/osal/rt/osal.h **** 
 316:../../../os/hal/osal/rt/osal.h **** /**
 317:../../../os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities
 318:../../../os/hal/osal/rt/osal.h ****  * @{
 319:../../../os/hal/osal/rt/osal.h ****  */
 320:../../../os/hal/osal/rt/osal.h **** /**
 321:../../../os/hal/osal/rt/osal.h ****  * @brief   Seconds to system ticks.
 322:../../../os/hal/osal/rt/osal.h ****  * @details Converts from seconds to system ticks number.
 323:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:../../../os/hal/osal/rt/osal.h ****  *
 325:../../../os/hal/osal/rt/osal.h ****  * @param[in] secs      number of seconds
 326:../../../os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 327:../../../os/hal/osal/rt/osal.h ****  *
 328:../../../os/hal/osal/rt/osal.h ****  * @api
 329:../../../os/hal/osal/rt/osal.h ****  */
 330:../../../os/hal/osal/rt/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 331:../../../os/hal/osal/rt/osal.h **** 
 332:../../../os/hal/osal/rt/osal.h **** /**
 333:../../../os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to system ticks.
 334:../../../os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to system ticks number.
 335:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 336:../../../os/hal/osal/rt/osal.h ****  *
 337:../../../os/hal/osal/rt/osal.h ****  * @param[in] msecs     number of milliseconds
 338:../../../os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 339:../../../os/hal/osal/rt/osal.h ****  *
 340:../../../os/hal/osal/rt/osal.h ****  * @api
 341:../../../os/hal/osal/rt/osal.h ****  */
 342:../../../os/hal/osal/rt/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 343:../../../os/hal/osal/rt/osal.h **** 
 344:../../../os/hal/osal/rt/osal.h **** /**
 345:../../../os/hal/osal/rt/osal.h ****  * @brief   Microseconds to system ticks.
 346:../../../os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to system ticks number.
 347:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 348:../../../os/hal/osal/rt/osal.h ****  *
 349:../../../os/hal/osal/rt/osal.h ****  * @param[in] usecs     number of microseconds
 350:../../../os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 351:../../../os/hal/osal/rt/osal.h ****  *
 352:../../../os/hal/osal/rt/osal.h ****  * @api
 353:../../../os/hal/osal/rt/osal.h ****  */
 354:../../../os/hal/osal/rt/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 355:../../../os/hal/osal/rt/osal.h **** /** @} */
 356:../../../os/hal/osal/rt/osal.h **** 
 357:../../../os/hal/osal/rt/osal.h **** /**
 358:../../../os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities for the realtime counter
 359:../../../os/hal/osal/rt/osal.h ****  * @{
 360:../../../os/hal/osal/rt/osal.h ****  */
 361:../../../os/hal/osal/rt/osal.h **** /**
 362:../../../os/hal/osal/rt/osal.h ****  * @brief   Seconds to realtime counter.
 363:../../../os/hal/osal/rt/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 364:../../../os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 365:../../../os/hal/osal/rt/osal.h ****  *
 366:../../../os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 367:../../../os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 368:../../../os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 369:../../../os/hal/osal/rt/osal.h ****  *
 370:../../../os/hal/osal/rt/osal.h ****  * @api
 371:../../../os/hal/osal/rt/osal.h ****  */
 372:../../../os/hal/osal/rt/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 373:../../../os/hal/osal/rt/osal.h **** 
 374:../../../os/hal/osal/rt/osal.h **** /**
 375:../../../os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to realtime counter.
 376:../../../os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 377:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 378:../../../os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 379:../../../os/hal/osal/rt/osal.h ****  *
 380:../../../os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 381:../../../os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 382:../../../os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 383:../../../os/hal/osal/rt/osal.h ****  *
 384:../../../os/hal/osal/rt/osal.h ****  * @api
 385:../../../os/hal/osal/rt/osal.h ****  */
 386:../../../os/hal/osal/rt/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 387:../../../os/hal/osal/rt/osal.h **** 
 388:../../../os/hal/osal/rt/osal.h **** /**
 389:../../../os/hal/osal/rt/osal.h ****  * @brief   Microseconds to realtime counter.
 390:../../../os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 391:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 392:../../../os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 393:../../../os/hal/osal/rt/osal.h ****  *
 394:../../../os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 395:../../../os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 396:../../../os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 397:../../../os/hal/osal/rt/osal.h ****  *
 398:../../../os/hal/osal/rt/osal.h ****  * @api
 399:../../../os/hal/osal/rt/osal.h ****  */
 400:../../../os/hal/osal/rt/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 401:../../../os/hal/osal/rt/osal.h **** /** @} */
 402:../../../os/hal/osal/rt/osal.h **** 
 403:../../../os/hal/osal/rt/osal.h **** /**
 404:../../../os/hal/osal/rt/osal.h ****  * @name    Sleep macros using absolute time
 405:../../../os/hal/osal/rt/osal.h ****  * @{
 406:../../../os/hal/osal/rt/osal.h ****  */
 407:../../../os/hal/osal/rt/osal.h **** /**
 408:../../../os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 409:../../../os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 410:../../../os/hal/osal/rt/osal.h ****  *          system tick clock.
 411:../../../os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 412:../../../os/hal/osal/rt/osal.h ****  *
 413:../../../os/hal/osal/rt/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 414:../../../os/hal/osal/rt/osal.h ****  *
 415:../../../os/hal/osal/rt/osal.h ****  * @api
 416:../../../os/hal/osal/rt/osal.h ****  */
 417:../../../os/hal/osal/rt/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 418:../../../os/hal/osal/rt/osal.h **** 
 419:../../../os/hal/osal/rt/osal.h **** /**
 420:../../../os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 421:../../../os/hal/osal/rt/osal.h ****  *          milliseconds.
 422:../../../os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 423:../../../os/hal/osal/rt/osal.h ****  *          system tick clock.
 424:../../../os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 425:../../../os/hal/osal/rt/osal.h ****  *
 426:../../../os/hal/osal/rt/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 427:../../../os/hal/osal/rt/osal.h ****  *
 428:../../../os/hal/osal/rt/osal.h ****  * @api
 429:../../../os/hal/osal/rt/osal.h ****  */
 430:../../../os/hal/osal/rt/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 431:../../../os/hal/osal/rt/osal.h **** 
 432:../../../os/hal/osal/rt/osal.h **** /**
 433:../../../os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 434:../../../os/hal/osal/rt/osal.h ****  *          microseconds.
 435:../../../os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 436:../../../os/hal/osal/rt/osal.h ****  *          system tick clock.
 437:../../../os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 438:../../../os/hal/osal/rt/osal.h ****  *
 439:../../../os/hal/osal/rt/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 440:../../../os/hal/osal/rt/osal.h ****  *
 441:../../../os/hal/osal/rt/osal.h ****  * @api
 442:../../../os/hal/osal/rt/osal.h ****  */
 443:../../../os/hal/osal/rt/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 444:../../../os/hal/osal/rt/osal.h **** /** @} */
 445:../../../os/hal/osal/rt/osal.h **** 
 446:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 447:../../../os/hal/osal/rt/osal.h **** /* External declarations.                                                    */
 448:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 449:../../../os/hal/osal/rt/osal.h **** 
 450:../../../os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 451:../../../os/hal/osal/rt/osal.h **** extern "C" {
 452:../../../os/hal/osal/rt/osal.h **** #endif
 453:../../../os/hal/osal/rt/osal.h **** 
 454:../../../os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 455:../../../os/hal/osal/rt/osal.h **** }
 456:../../../os/hal/osal/rt/osal.h **** #endif
 457:../../../os/hal/osal/rt/osal.h **** 
 458:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 459:../../../os/hal/osal/rt/osal.h **** /* Module inline functions.                                                  */
 460:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 461:../../../os/hal/osal/rt/osal.h **** 
 462:../../../os/hal/osal/rt/osal.h **** /**
 463:../../../os/hal/osal/rt/osal.h ****  * @brief   OSAL module initialization.
 464:../../../os/hal/osal/rt/osal.h ****  *
 465:../../../os/hal/osal/rt/osal.h ****  * @api
 466:../../../os/hal/osal/rt/osal.h ****  */
 467:../../../os/hal/osal/rt/osal.h **** static inline void osalInit(void) {
 468:../../../os/hal/osal/rt/osal.h **** 
 469:../../../os/hal/osal/rt/osal.h **** }
 470:../../../os/hal/osal/rt/osal.h **** 
 471:../../../os/hal/osal/rt/osal.h **** /**
 472:../../../os/hal/osal/rt/osal.h ****  * @brief   System halt with error message.
 473:../../../os/hal/osal/rt/osal.h ****  *
 474:../../../os/hal/osal/rt/osal.h ****  * @param[in] reason    the halt message pointer
 475:../../../os/hal/osal/rt/osal.h ****  *
 476:../../../os/hal/osal/rt/osal.h ****  * @api
 477:../../../os/hal/osal/rt/osal.h ****  */
 478:../../../os/hal/osal/rt/osal.h **** static inline void osalSysHalt(const char *reason) {
 479:../../../os/hal/osal/rt/osal.h **** 
 480:../../../os/hal/osal/rt/osal.h ****   chSysHalt(reason);
 481:../../../os/hal/osal/rt/osal.h **** }
 482:../../../os/hal/osal/rt/osal.h **** 
 483:../../../os/hal/osal/rt/osal.h **** /**
 484:../../../os/hal/osal/rt/osal.h ****  * @brief   Disables interrupts globally.
 485:../../../os/hal/osal/rt/osal.h ****  *
 486:../../../os/hal/osal/rt/osal.h ****  * @special
 487:../../../os/hal/osal/rt/osal.h ****  */
 488:../../../os/hal/osal/rt/osal.h **** static inline void osalSysDisable(void) {
 489:../../../os/hal/osal/rt/osal.h **** 
 490:../../../os/hal/osal/rt/osal.h ****   chSysDisable();
 491:../../../os/hal/osal/rt/osal.h **** }
 492:../../../os/hal/osal/rt/osal.h **** 
 493:../../../os/hal/osal/rt/osal.h **** /**
 494:../../../os/hal/osal/rt/osal.h ****  * @brief   Enables interrupts globally.
 495:../../../os/hal/osal/rt/osal.h ****  *
 496:../../../os/hal/osal/rt/osal.h ****  * @special
 497:../../../os/hal/osal/rt/osal.h ****  */
 498:../../../os/hal/osal/rt/osal.h **** static inline void osalSysEnable(void) {
 499:../../../os/hal/osal/rt/osal.h **** 
 500:../../../os/hal/osal/rt/osal.h ****   chSysEnable();
 501:../../../os/hal/osal/rt/osal.h **** }
 502:../../../os/hal/osal/rt/osal.h **** 
 503:../../../os/hal/osal/rt/osal.h **** /**
 504:../../../os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from thread context.
 505:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 506:../../../os/hal/osal/rt/osal.h ****  *
 507:../../../os/hal/osal/rt/osal.h ****  * @special
 508:../../../os/hal/osal/rt/osal.h ****  */
 509:../../../os/hal/osal/rt/osal.h **** static inline void osalSysLock(void) {
 510:../../../os/hal/osal/rt/osal.h **** 
 511:../../../os/hal/osal/rt/osal.h ****   chSysLock();
 512:../../../os/hal/osal/rt/osal.h **** }
 513:../../../os/hal/osal/rt/osal.h **** 
 514:../../../os/hal/osal/rt/osal.h **** /**
 515:../../../os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from thread context.
 516:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 517:../../../os/hal/osal/rt/osal.h ****  *
 518:../../../os/hal/osal/rt/osal.h ****  * @special
 519:../../../os/hal/osal/rt/osal.h ****  */
 520:../../../os/hal/osal/rt/osal.h **** static inline void osalSysUnlock(void) {
 521:../../../os/hal/osal/rt/osal.h **** 
 522:../../../os/hal/osal/rt/osal.h ****   chSysUnlock();
 523:../../../os/hal/osal/rt/osal.h **** }
 524:../../../os/hal/osal/rt/osal.h **** 
 525:../../../os/hal/osal/rt/osal.h **** /**
 526:../../../os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from ISR context.
 527:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 528:../../../os/hal/osal/rt/osal.h ****  *
 529:../../../os/hal/osal/rt/osal.h ****  * @special
 530:../../../os/hal/osal/rt/osal.h ****  */
 531:../../../os/hal/osal/rt/osal.h **** static inline void osalSysLockFromISR(void) {
 532:../../../os/hal/osal/rt/osal.h **** 
 533:../../../os/hal/osal/rt/osal.h ****   chSysLockFromISR();
 534:../../../os/hal/osal/rt/osal.h **** }
 535:../../../os/hal/osal/rt/osal.h **** 
 536:../../../os/hal/osal/rt/osal.h **** /**
 537:../../../os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 538:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 539:../../../os/hal/osal/rt/osal.h ****  *
 540:../../../os/hal/osal/rt/osal.h ****  * @special
 541:../../../os/hal/osal/rt/osal.h ****  */
 542:../../../os/hal/osal/rt/osal.h **** static inline void osalSysUnlockFromISR(void) {
 543:../../../os/hal/osal/rt/osal.h **** 
 544:../../../os/hal/osal/rt/osal.h ****   chSysUnlockFromISR();
 545:../../../os/hal/osal/rt/osal.h **** }
 546:../../../os/hal/osal/rt/osal.h **** 
 547:../../../os/hal/osal/rt/osal.h **** /**
 548:../../../os/hal/osal/rt/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 549:../../../os/hal/osal/rt/osal.h ****  * @details This functions enters into a critical zone and can be called
 550:../../../os/hal/osal/rt/osal.h ****  *          from any context. Because its flexibility it is less efficient
 551:../../../os/hal/osal/rt/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 552:../../../os/hal/osal/rt/osal.h ****  *          is known.
 553:../../../os/hal/osal/rt/osal.h ****  * @post    The system is in a critical zone.
 554:../../../os/hal/osal/rt/osal.h ****  *
 555:../../../os/hal/osal/rt/osal.h ****  * @return              The previous system status, the encoding of this
 556:../../../os/hal/osal/rt/osal.h ****  *                      status word is architecture-dependent and opaque.
 557:../../../os/hal/osal/rt/osal.h ****  *
 558:../../../os/hal/osal/rt/osal.h ****  * @xclass
 559:../../../os/hal/osal/rt/osal.h ****  */
 560:../../../os/hal/osal/rt/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 561:../../../os/hal/osal/rt/osal.h **** 
 562:../../../os/hal/osal/rt/osal.h ****   return chSysGetStatusAndLockX();
 563:../../../os/hal/osal/rt/osal.h **** }
 564:../../../os/hal/osal/rt/osal.h **** 
 565:../../../os/hal/osal/rt/osal.h **** /**
 566:../../../os/hal/osal/rt/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 567:../../../os/hal/osal/rt/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 568:../../../os/hal/osal/rt/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 569:../../../os/hal/osal/rt/osal.h ****  *
 570:../../../os/hal/osal/rt/osal.h ****  * @param[in] sts       the system status to be restored.
 571:../../../os/hal/osal/rt/osal.h ****  *
 572:../../../os/hal/osal/rt/osal.h ****  * @xclass
 573:../../../os/hal/osal/rt/osal.h ****  */
 574:../../../os/hal/osal/rt/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 575:../../../os/hal/osal/rt/osal.h **** 
 576:../../../os/hal/osal/rt/osal.h ****   chSysRestoreStatusX(sts);
 577:../../../os/hal/osal/rt/osal.h **** }
 578:../../../os/hal/osal/rt/osal.h **** 
 579:../../../os/hal/osal/rt/osal.h **** /**
 580:../../../os/hal/osal/rt/osal.h ****  * @brief   Polled delay.
 581:../../../os/hal/osal/rt/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 582:../../../os/hal/osal/rt/osal.h ****  *          value.
 583:../../../os/hal/osal/rt/osal.h ****  *
 584:../../../os/hal/osal/rt/osal.h ****  * @param[in] cycles    number of cycles
 585:../../../os/hal/osal/rt/osal.h ****  *
 586:../../../os/hal/osal/rt/osal.h ****  * @xclass
 587:../../../os/hal/osal/rt/osal.h ****  */
 588:../../../os/hal/osal/rt/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 589:../../../os/hal/osal/rt/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 590:../../../os/hal/osal/rt/osal.h **** 
 591:../../../os/hal/osal/rt/osal.h ****   chSysPolledDelayX(cycles);
 592:../../../os/hal/osal/rt/osal.h **** }
 593:../../../os/hal/osal/rt/osal.h **** #endif
 594:../../../os/hal/osal/rt/osal.h **** 
 595:../../../os/hal/osal/rt/osal.h **** /**
 596:../../../os/hal/osal/rt/osal.h ****  * @brief   Systick callback for the underlying OS.
 597:../../../os/hal/osal/rt/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 598:../../../os/hal/osal/rt/osal.h ****  *          service from the HAL.
 599:../../../os/hal/osal/rt/osal.h ****  */
 600:../../../os/hal/osal/rt/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 601:../../../os/hal/osal/rt/osal.h **** static inline void osalOsTimerHandlerI(void) {
 602:../../../os/hal/osal/rt/osal.h **** 
 603:../../../os/hal/osal/rt/osal.h ****   chSysTimerHandlerI();
 604:../../../os/hal/osal/rt/osal.h **** }
 605:../../../os/hal/osal/rt/osal.h **** #endif
 606:../../../os/hal/osal/rt/osal.h **** 
 607:../../../os/hal/osal/rt/osal.h **** /**
 608:../../../os/hal/osal/rt/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 609:../../../os/hal/osal/rt/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 610:../../../os/hal/osal/rt/osal.h ****  *          by themselves, an explicit reschedule using this function is
 611:../../../os/hal/osal/rt/osal.h ****  *          required in this scenario.
 612:../../../os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 613:../../../os/hal/osal/rt/osal.h ****  *
 614:../../../os/hal/osal/rt/osal.h ****  * @sclass
 615:../../../os/hal/osal/rt/osal.h ****  */
 616:../../../os/hal/osal/rt/osal.h **** static inline void osalOsRescheduleS(void) {
 617:../../../os/hal/osal/rt/osal.h **** 
 618:../../../os/hal/osal/rt/osal.h ****   chSchRescheduleS();
 619:../../../os/hal/osal/rt/osal.h **** }
 620:../../../os/hal/osal/rt/osal.h **** 
 621:../../../os/hal/osal/rt/osal.h **** /**
 622:../../../os/hal/osal/rt/osal.h ****  * @brief   Current system time.
 623:../../../os/hal/osal/rt/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 624:../../../os/hal/osal/rt/osal.h ****  *          invocation.
 625:../../../os/hal/osal/rt/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 626:../../../os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context but its atomicity
 627:../../../os/hal/osal/rt/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 628:../../../os/hal/osal/rt/osal.h ****  *          @p systime_t size.
 629:../../../os/hal/osal/rt/osal.h ****  *
 630:../../../os/hal/osal/rt/osal.h ****  * @return              The system time in ticks.
 631:../../../os/hal/osal/rt/osal.h ****  *
 632:../../../os/hal/osal/rt/osal.h ****  * @xclass
 633:../../../os/hal/osal/rt/osal.h ****  */
 634:../../../os/hal/osal/rt/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 635:../../../os/hal/osal/rt/osal.h **** 
 636:../../../os/hal/osal/rt/osal.h ****   return chVTGetSystemTimeX();
 637:../../../os/hal/osal/rt/osal.h **** }
 638:../../../os/hal/osal/rt/osal.h **** 
 639:../../../os/hal/osal/rt/osal.h **** /**
 640:../../../os/hal/osal/rt/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 641:../../../os/hal/osal/rt/osal.h ****  *
 642:../../../os/hal/osal/rt/osal.h ****  * @param[in] systime   base system time
 643:../../../os/hal/osal/rt/osal.h ****  * @param[in] interval  interval to be added
 644:../../../os/hal/osal/rt/osal.h ****  * @return              The new system time.
 645:../../../os/hal/osal/rt/osal.h ****  *
 646:../../../os/hal/osal/rt/osal.h ****  * @xclass
 647:../../../os/hal/osal/rt/osal.h ****  */
 648:../../../os/hal/osal/rt/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 649:../../../os/hal/osal/rt/osal.h ****                                      sysinterval_t interval) {
 650:../../../os/hal/osal/rt/osal.h **** 
 651:../../../os/hal/osal/rt/osal.h ****   return chTimeAddX(systime, interval);
 652:../../../os/hal/osal/rt/osal.h **** }
 653:../../../os/hal/osal/rt/osal.h **** 
 654:../../../os/hal/osal/rt/osal.h **** /**
 655:../../../os/hal/osal/rt/osal.h ****  * @brief   Subtracts two system times returning an interval.
 656:../../../os/hal/osal/rt/osal.h ****  *
 657:../../../os/hal/osal/rt/osal.h ****  * @param[in] start     first system time
 658:../../../os/hal/osal/rt/osal.h ****  * @param[in] end       second system time
 659:../../../os/hal/osal/rt/osal.h ****  * @return              The interval representing the time difference.
 660:../../../os/hal/osal/rt/osal.h ****  *
 661:../../../os/hal/osal/rt/osal.h ****  * @xclass
 662:../../../os/hal/osal/rt/osal.h ****  */
 663:../../../os/hal/osal/rt/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 664:../../../os/hal/osal/rt/osal.h **** 
 665:../../../os/hal/osal/rt/osal.h ****   return chTimeDiffX(start, end);
 666:../../../os/hal/osal/rt/osal.h **** }
 667:../../../os/hal/osal/rt/osal.h **** 
 668:../../../os/hal/osal/rt/osal.h **** /**
 669:../../../os/hal/osal/rt/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 670:../../../os/hal/osal/rt/osal.h ****  * @note    When start==end then the function returns always true because the
 671:../../../os/hal/osal/rt/osal.h ****  *          whole time range is specified.
 672:../../../os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context.
 673:../../../os/hal/osal/rt/osal.h ****  *
 674:../../../os/hal/osal/rt/osal.h ****  * @param[in] time      the time to be verified
 675:../../../os/hal/osal/rt/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 676:../../../os/hal/osal/rt/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 677:../../../os/hal/osal/rt/osal.h ****  * @retval true         current time within the specified time window.
 678:../../../os/hal/osal/rt/osal.h ****  * @retval false        current time not within the specified time window.
 679:../../../os/hal/osal/rt/osal.h ****  *
 680:../../../os/hal/osal/rt/osal.h ****  * @xclass
 681:../../../os/hal/osal/rt/osal.h ****  */
 682:../../../os/hal/osal/rt/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 683:../../../os/hal/osal/rt/osal.h ****                                       systime_t start,
 684:../../../os/hal/osal/rt/osal.h ****                                       systime_t end) {
 685:../../../os/hal/osal/rt/osal.h **** 
 686:../../../os/hal/osal/rt/osal.h ****   return chTimeIsInRangeX(time, start, end);
 687:../../../os/hal/osal/rt/osal.h **** }
 688:../../../os/hal/osal/rt/osal.h **** 
 689:../../../os/hal/osal/rt/osal.h **** /**
 690:../../../os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 691:../../../os/hal/osal/rt/osal.h ****  *
 692:../../../os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 693:../../../os/hal/osal/rt/osal.h ****  *                      handled as follow:
 694:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 695:../../../os/hal/osal/rt/osal.h ****  *                        normal time specification.
 696:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 697:../../../os/hal/osal/rt/osal.h ****  *                      .
 698:../../../os/hal/osal/rt/osal.h ****  *
 699:../../../os/hal/osal/rt/osal.h ****  * @sclass
 700:../../../os/hal/osal/rt/osal.h ****  */
 701:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 702:../../../os/hal/osal/rt/osal.h **** 
 703:../../../os/hal/osal/rt/osal.h ****   chThdSleepS(delay);
 704:../../../os/hal/osal/rt/osal.h **** }
 705:../../../os/hal/osal/rt/osal.h **** 
 706:../../../os/hal/osal/rt/osal.h **** /**
 707:../../../os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 708:../../../os/hal/osal/rt/osal.h ****  *
 709:../../../os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 710:../../../os/hal/osal/rt/osal.h ****  *                      handled as follow:
 711:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 712:../../../os/hal/osal/rt/osal.h ****  *                        normal time specification.
 713:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 714:../../../os/hal/osal/rt/osal.h ****  *                      .
 715:../../../os/hal/osal/rt/osal.h ****  *
 716:../../../os/hal/osal/rt/osal.h ****  * @api
 717:../../../os/hal/osal/rt/osal.h ****  */
 718:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 719:../../../os/hal/osal/rt/osal.h **** 
 720:../../../os/hal/osal/rt/osal.h ****   chThdSleep(delay);
 721:../../../os/hal/osal/rt/osal.h **** }
 722:../../../os/hal/osal/rt/osal.h **** 
 723:../../../os/hal/osal/rt/osal.h **** /**
 724:../../../os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 725:../../../os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 726:../../../os/hal/osal/rt/osal.h ****  *          context.
 727:../../../os/hal/osal/rt/osal.h ****  *
 728:../../../os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 729:../../../os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 730:../../../os/hal/osal/rt/osal.h ****  *
 731:../../../os/hal/osal/rt/osal.h ****  * @sclass
 732:../../../os/hal/osal/rt/osal.h ****  */
 733:../../../os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 734:../../../os/hal/osal/rt/osal.h **** 
 735:../../../os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 736:../../../os/hal/osal/rt/osal.h **** }
 737:../../../os/hal/osal/rt/osal.h **** 
 738:../../../os/hal/osal/rt/osal.h **** /**
 739:../../../os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 740:../../../os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 741:../../../os/hal/osal/rt/osal.h ****  *          context.
 742:../../../os/hal/osal/rt/osal.h ****  *
 743:../../../os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 744:../../../os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 745:../../../os/hal/osal/rt/osal.h ****  *                      handled as follow:
 746:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 747:../../../os/hal/osal/rt/osal.h ****  *                        state.
 748:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 749:../../../os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 750:../../../os/hal/osal/rt/osal.h ****  *                        occurred.
 751:../../../os/hal/osal/rt/osal.h ****  *                      .
 752:../../../os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 753:../../../os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 754:../../../os/hal/osal/rt/osal.h ****  *
 755:../../../os/hal/osal/rt/osal.h ****  * @sclass
 756:../../../os/hal/osal/rt/osal.h ****  */
 757:../../../os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 758:../../../os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 759:../../../os/hal/osal/rt/osal.h **** 
 760:../../../os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 761:../../../os/hal/osal/rt/osal.h **** }
 762:../../../os/hal/osal/rt/osal.h **** 
 763:../../../os/hal/osal/rt/osal.h **** /**
 764:../../../os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 765:../../../os/hal/osal/rt/osal.h ****  * @note    This function must not reschedule because it can be called from
 766:../../../os/hal/osal/rt/osal.h ****  *          ISR context.
 767:../../../os/hal/osal/rt/osal.h ****  *
 768:../../../os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 769:../../../os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 770:../../../os/hal/osal/rt/osal.h ****  *
 771:../../../os/hal/osal/rt/osal.h ****  * @iclass
 772:../../../os/hal/osal/rt/osal.h ****  */
 773:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 774:../../../os/hal/osal/rt/osal.h **** 
 775:../../../os/hal/osal/rt/osal.h ****   chThdResumeI(trp, msg);
 776:../../../os/hal/osal/rt/osal.h **** }
 777:../../../os/hal/osal/rt/osal.h **** 
 778:../../../os/hal/osal/rt/osal.h **** /**
 779:../../../os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 780:../../../os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 781:../../../os/hal/osal/rt/osal.h ****  *          context.
 782:../../../os/hal/osal/rt/osal.h ****  *
 783:../../../os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 784:../../../os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 785:../../../os/hal/osal/rt/osal.h ****  *
 786:../../../os/hal/osal/rt/osal.h ****  * @iclass
 787:../../../os/hal/osal/rt/osal.h ****  */
 788:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadResumeS(thread_reference_t *trp, msg_t msg) {
 789:../../../os/hal/osal/rt/osal.h **** 
 790:../../../os/hal/osal/rt/osal.h ****   chThdResumeS(trp, msg);
 791:../../../os/hal/osal/rt/osal.h **** }
 792:../../../os/hal/osal/rt/osal.h **** 
 793:../../../os/hal/osal/rt/osal.h **** /**
 794:../../../os/hal/osal/rt/osal.h ****  * @brief   Initializes a threads queue object.
 795:../../../os/hal/osal/rt/osal.h ****  *
 796:../../../os/hal/osal/rt/osal.h ****  * @param[out] tqp      pointer to the threads queue object
 797:../../../os/hal/osal/rt/osal.h ****  *
 798:../../../os/hal/osal/rt/osal.h ****  * @init
 799:../../../os/hal/osal/rt/osal.h ****  */
 800:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadQueueObjectInit(threads_queue_t *tqp) {
  56               		.loc 2 800 20 view .LVU5
  57               	.LBE271:
 801:../../../os/hal/osal/rt/osal.h **** 
 802:../../../os/hal/osal/rt/osal.h ****   chThdQueueObjectInit(tqp);
  58               		.loc 2 802 3 view .LVU6
  59               	.LBB276:
  60               	.LBB272:
  61               	.LBI272:
  62               		.file 3 "../../../os/rt/include/chthreads.h"
   1:../../../os/rt/include/chthreads.h **** /*
   2:../../../os/rt/include/chthreads.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/rt/include/chthreads.h **** 
   4:../../../os/rt/include/chthreads.h ****     This file is part of ChibiOS.
   5:../../../os/rt/include/chthreads.h **** 
   6:../../../os/rt/include/chthreads.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/rt/include/chthreads.h ****     it under the terms of the GNU General Public License as published by
   8:../../../os/rt/include/chthreads.h ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/rt/include/chthreads.h ****     (at your option) any later version.
  10:../../../os/rt/include/chthreads.h **** 
  11:../../../os/rt/include/chthreads.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/rt/include/chthreads.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/rt/include/chthreads.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/rt/include/chthreads.h ****     GNU General Public License for more details.
  15:../../../os/rt/include/chthreads.h **** 
  16:../../../os/rt/include/chthreads.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/rt/include/chthreads.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/rt/include/chthreads.h **** */
  19:../../../os/rt/include/chthreads.h **** 
  20:../../../os/rt/include/chthreads.h **** /**
  21:../../../os/rt/include/chthreads.h ****  * @file    chthreads.h
  22:../../../os/rt/include/chthreads.h ****  * @brief   Threads module macros and structures.
  23:../../../os/rt/include/chthreads.h ****  *
  24:../../../os/rt/include/chthreads.h ****  * @addtogroup threads
  25:../../../os/rt/include/chthreads.h ****  * @{
  26:../../../os/rt/include/chthreads.h ****  */
  27:../../../os/rt/include/chthreads.h **** 
  28:../../../os/rt/include/chthreads.h **** #ifndef CHTHREADS_H
  29:../../../os/rt/include/chthreads.h **** #define CHTHREADS_H
  30:../../../os/rt/include/chthreads.h **** 
  31:../../../os/rt/include/chthreads.h **** /*lint -sem(chThdExit, r_no) -sem(chThdExitS, r_no)*/
  32:../../../os/rt/include/chthreads.h **** 
  33:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  34:../../../os/rt/include/chthreads.h **** /* Module constants.                                                         */
  35:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  36:../../../os/rt/include/chthreads.h **** 
  37:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  38:../../../os/rt/include/chthreads.h **** /* Module pre-compile time settings.                                         */
  39:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  40:../../../os/rt/include/chthreads.h **** 
  41:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  42:../../../os/rt/include/chthreads.h **** /* Derived constants and error checks.                                       */
  43:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  44:../../../os/rt/include/chthreads.h **** 
  45:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  46:../../../os/rt/include/chthreads.h **** /* Module data structures and types.                                         */
  47:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  48:../../../os/rt/include/chthreads.h **** 
  49:../../../os/rt/include/chthreads.h **** /**
  50:../../../os/rt/include/chthreads.h ****  * @brief   Thread function.
  51:../../../os/rt/include/chthreads.h ****  */
  52:../../../os/rt/include/chthreads.h **** typedef void (*tfunc_t)(void *p);
  53:../../../os/rt/include/chthreads.h **** 
  54:../../../os/rt/include/chthreads.h **** /**
  55:../../../os/rt/include/chthreads.h ****  * @brief   Type of a thread descriptor.
  56:../../../os/rt/include/chthreads.h ****  */
  57:../../../os/rt/include/chthreads.h **** typedef struct {
  58:../../../os/rt/include/chthreads.h ****   /**
  59:../../../os/rt/include/chthreads.h ****    * @brief   Thread name.
  60:../../../os/rt/include/chthreads.h ****    */
  61:../../../os/rt/include/chthreads.h ****   const char        *name;
  62:../../../os/rt/include/chthreads.h ****   /**
  63:../../../os/rt/include/chthreads.h ****    * @brief   Pointer to the working area base.
  64:../../../os/rt/include/chthreads.h ****    */
  65:../../../os/rt/include/chthreads.h ****   stkalign_t        *wbase;
  66:../../../os/rt/include/chthreads.h ****   /**
  67:../../../os/rt/include/chthreads.h ****    * @brief   End of the working area.
  68:../../../os/rt/include/chthreads.h ****    */
  69:../../../os/rt/include/chthreads.h ****   stkalign_t        *wend;
  70:../../../os/rt/include/chthreads.h ****   /**
  71:../../../os/rt/include/chthreads.h ****    * @brief   Thread priority.
  72:../../../os/rt/include/chthreads.h ****    */
  73:../../../os/rt/include/chthreads.h ****   tprio_t           prio;
  74:../../../os/rt/include/chthreads.h ****   /**
  75:../../../os/rt/include/chthreads.h ****    * @brief   Thread function pointer.
  76:../../../os/rt/include/chthreads.h ****    */
  77:../../../os/rt/include/chthreads.h ****   tfunc_t           funcp;
  78:../../../os/rt/include/chthreads.h ****   /**
  79:../../../os/rt/include/chthreads.h ****    * @brief   Thread argument.
  80:../../../os/rt/include/chthreads.h ****    */
  81:../../../os/rt/include/chthreads.h ****   void              *arg;
  82:../../../os/rt/include/chthreads.h **** } thread_descriptor_t;
  83:../../../os/rt/include/chthreads.h **** 
  84:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  85:../../../os/rt/include/chthreads.h **** /* Module macros.                                                            */
  86:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
  87:../../../os/rt/include/chthreads.h **** 
  88:../../../os/rt/include/chthreads.h **** /**
  89:../../../os/rt/include/chthreads.h ****  * @name    Threads queues
  90:../../../os/rt/include/chthreads.h ****  */
  91:../../../os/rt/include/chthreads.h **** /**
  92:../../../os/rt/include/chthreads.h ****  * @brief   Data part of a static threads queue object initializer.
  93:../../../os/rt/include/chthreads.h ****  * @details This macro should be used when statically initializing a threads
  94:../../../os/rt/include/chthreads.h ****  *          queue that is part of a bigger structure.
  95:../../../os/rt/include/chthreads.h ****  *
  96:../../../os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
  97:../../../os/rt/include/chthreads.h ****  */
  98:../../../os/rt/include/chthreads.h **** #define _THREADS_QUEUE_DATA(name) {(thread_t *)&name, (thread_t *)&name}
  99:../../../os/rt/include/chthreads.h **** 
 100:../../../os/rt/include/chthreads.h **** /**
 101:../../../os/rt/include/chthreads.h ****  * @brief   Static threads queue object initializer.
 102:../../../os/rt/include/chthreads.h ****  * @details Statically initialized threads queues require no explicit
 103:../../../os/rt/include/chthreads.h ****  *          initialization using @p queue_init().
 104:../../../os/rt/include/chthreads.h ****  *
 105:../../../os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
 106:../../../os/rt/include/chthreads.h ****  */
 107:../../../os/rt/include/chthreads.h **** #define _THREADS_QUEUE_DECL(name)                                           \
 108:../../../os/rt/include/chthreads.h ****   threads_queue_t name = _THREADS_QUEUE_DATA(name)
 109:../../../os/rt/include/chthreads.h **** /** @} */
 110:../../../os/rt/include/chthreads.h **** 
 111:../../../os/rt/include/chthreads.h **** /**
 112:../../../os/rt/include/chthreads.h ****  * @name    Working Areas
 113:../../../os/rt/include/chthreads.h ****  */
 114:../../../os/rt/include/chthreads.h **** /**
 115:../../../os/rt/include/chthreads.h ****  * @brief   Calculates the total Working Area size.
 116:../../../os/rt/include/chthreads.h ****  *
 117:../../../os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 118:../../../os/rt/include/chthreads.h ****  * @return              The total used memory in bytes.
 119:../../../os/rt/include/chthreads.h ****  *
 120:../../../os/rt/include/chthreads.h ****  * @api
 121:../../../os/rt/include/chthreads.h ****  */
 122:../../../os/rt/include/chthreads.h **** #define THD_WORKING_AREA_SIZE(n)                                            \
 123:../../../os/rt/include/chthreads.h ****   MEM_ALIGN_NEXT(sizeof(thread_t) + PORT_WA_SIZE(n), PORT_STACK_ALIGN)
 124:../../../os/rt/include/chthreads.h **** 
 125:../../../os/rt/include/chthreads.h **** /**
 126:../../../os/rt/include/chthreads.h ****  * @brief   Static working area allocation.
 127:../../../os/rt/include/chthreads.h ****  * @details This macro is used to allocate a static thread working area
 128:../../../os/rt/include/chthreads.h ****  *          aligned as both position and size.
 129:../../../os/rt/include/chthreads.h ****  *
 130:../../../os/rt/include/chthreads.h ****  * @param[in] s         the name to be assigned to the stack array
 131:../../../os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 132:../../../os/rt/include/chthreads.h ****  *
 133:../../../os/rt/include/chthreads.h ****  * @api
 134:../../../os/rt/include/chthreads.h ****  */
 135:../../../os/rt/include/chthreads.h **** #define THD_WORKING_AREA(s, n) PORT_WORKING_AREA(s, n)
 136:../../../os/rt/include/chthreads.h **** 
 137:../../../os/rt/include/chthreads.h **** /**
 138:../../../os/rt/include/chthreads.h ****  * @brief   Base of a working area casted to the correct type.
 139:../../../os/rt/include/chthreads.h ****  *
 140:../../../os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 141:../../../os/rt/include/chthreads.h ****  */
 142:../../../os/rt/include/chthreads.h **** #define THD_WORKING_AREA_BASE(s) ((stkalign_t *)(s))
 143:../../../os/rt/include/chthreads.h **** 
 144:../../../os/rt/include/chthreads.h **** /**
 145:../../../os/rt/include/chthreads.h ****  * @brief   End of a working area casted to the correct type.
 146:../../../os/rt/include/chthreads.h ****  *
 147:../../../os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 148:../../../os/rt/include/chthreads.h ****  */
 149:../../../os/rt/include/chthreads.h **** #define THD_WORKING_AREA_END(s) (THD_WORKING_AREA_BASE(s) +                 \
 150:../../../os/rt/include/chthreads.h ****                                  (sizeof (s) / sizeof (stkalign_t)))
 151:../../../os/rt/include/chthreads.h **** /** @} */
 152:../../../os/rt/include/chthreads.h **** 
 153:../../../os/rt/include/chthreads.h **** /**
 154:../../../os/rt/include/chthreads.h ****  * @name    Threads abstraction macros
 155:../../../os/rt/include/chthreads.h ****  */
 156:../../../os/rt/include/chthreads.h **** /**
 157:../../../os/rt/include/chthreads.h ****  * @brief   Thread declaration macro.
 158:../../../os/rt/include/chthreads.h ****  * @note    Thread declarations should be performed using this macro because
 159:../../../os/rt/include/chthreads.h ****  *          the port layer could define optimizations for thread functions.
 160:../../../os/rt/include/chthreads.h ****  */
 161:../../../os/rt/include/chthreads.h **** #define THD_FUNCTION(tname, arg) PORT_THD_FUNCTION(tname, arg)
 162:../../../os/rt/include/chthreads.h **** /** @} */
 163:../../../os/rt/include/chthreads.h **** 
 164:../../../os/rt/include/chthreads.h **** /**
 165:../../../os/rt/include/chthreads.h ****  * @name    Macro Functions
 166:../../../os/rt/include/chthreads.h ****  * @{
 167:../../../os/rt/include/chthreads.h ****  */
 168:../../../os/rt/include/chthreads.h **** /**
 169:../../../os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 170:../../../os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 171:../../../os/rt/include/chthreads.h ****  *          system tick clock.
 172:../../../os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 173:../../../os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 174:../../../os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 175:../../../os/rt/include/chthreads.h ****  *          converted.
 176:../../../os/rt/include/chthreads.h ****  *
 177:../../../os/rt/include/chthreads.h ****  * @param[in] sec       time in seconds, must be different from zero
 178:../../../os/rt/include/chthreads.h ****  *
 179:../../../os/rt/include/chthreads.h ****  * @api
 180:../../../os/rt/include/chthreads.h ****  */
 181:../../../os/rt/include/chthreads.h **** #define chThdSleepSeconds(sec) chThdSleep(TIME_S2I(sec))
 182:../../../os/rt/include/chthreads.h **** 
 183:../../../os/rt/include/chthreads.h **** /**
 184:../../../os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 185:../../../os/rt/include/chthreads.h ****  *          milliseconds.
 186:../../../os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 187:../../../os/rt/include/chthreads.h ****  *          system tick clock.
 188:../../../os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 189:../../../os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 190:../../../os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 191:../../../os/rt/include/chthreads.h ****  *          converted.
 192:../../../os/rt/include/chthreads.h ****  *
 193:../../../os/rt/include/chthreads.h ****  * @param[in] msec      time in milliseconds, must be different from zero
 194:../../../os/rt/include/chthreads.h ****  *
 195:../../../os/rt/include/chthreads.h ****  * @api
 196:../../../os/rt/include/chthreads.h ****  */
 197:../../../os/rt/include/chthreads.h **** #define chThdSleepMilliseconds(msec) chThdSleep(TIME_MS2I(msec))
 198:../../../os/rt/include/chthreads.h **** 
 199:../../../os/rt/include/chthreads.h **** /**
 200:../../../os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 201:../../../os/rt/include/chthreads.h ****  *          microseconds.
 202:../../../os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 203:../../../os/rt/include/chthreads.h ****  *          system tick clock.
 204:../../../os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 205:../../../os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 206:../../../os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 207:../../../os/rt/include/chthreads.h ****  *          converted.
 208:../../../os/rt/include/chthreads.h ****  *
 209:../../../os/rt/include/chthreads.h ****  * @param[in] usec      time in microseconds, must be different from zero
 210:../../../os/rt/include/chthreads.h ****  *
 211:../../../os/rt/include/chthreads.h ****  * @api
 212:../../../os/rt/include/chthreads.h ****  */
 213:../../../os/rt/include/chthreads.h **** #define chThdSleepMicroseconds(usec) chThdSleep(TIME_US2I(usec))
 214:../../../os/rt/include/chthreads.h **** /** @} */
 215:../../../os/rt/include/chthreads.h **** 
 216:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
 217:../../../os/rt/include/chthreads.h **** /* External declarations.                                                    */
 218:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
 219:../../../os/rt/include/chthreads.h **** 
 220:../../../os/rt/include/chthreads.h **** #ifdef __cplusplus
 221:../../../os/rt/include/chthreads.h **** extern "C" {
 222:../../../os/rt/include/chthreads.h **** #endif
 223:../../../os/rt/include/chthreads.h ****    thread_t *_thread_init(thread_t *tp, const char *name, tprio_t prio);
 224:../../../os/rt/include/chthreads.h **** #if CH_DBG_FILL_THREADS == TRUE
 225:../../../os/rt/include/chthreads.h ****   void _thread_memfill(uint8_t *startp, uint8_t *endp, uint8_t v);
 226:../../../os/rt/include/chthreads.h **** #endif
 227:../../../os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspendedI(const thread_descriptor_t *tdp);
 228:../../../os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspended(const thread_descriptor_t *tdp);
 229:../../../os/rt/include/chthreads.h ****   thread_t *chThdCreateI(const thread_descriptor_t *tdp);
 230:../../../os/rt/include/chthreads.h ****   thread_t *chThdCreate(const thread_descriptor_t *tdp);
 231:../../../os/rt/include/chthreads.h ****   thread_t *chThdCreateStatic(void *wsp, size_t size,
 232:../../../os/rt/include/chthreads.h ****                               tprio_t prio, tfunc_t pf, void *arg);
 233:../../../os/rt/include/chthreads.h ****   thread_t *chThdStart(thread_t *tp);
 234:../../../os/rt/include/chthreads.h **** #if CH_CFG_USE_REGISTRY == TRUE
 235:../../../os/rt/include/chthreads.h ****   thread_t *chThdAddRef(thread_t *tp);
 236:../../../os/rt/include/chthreads.h ****   void chThdRelease(thread_t *tp);
 237:../../../os/rt/include/chthreads.h **** #endif
 238:../../../os/rt/include/chthreads.h ****   void chThdExit(msg_t msg);
 239:../../../os/rt/include/chthreads.h ****   void chThdExitS(msg_t msg);
 240:../../../os/rt/include/chthreads.h **** #if CH_CFG_USE_WAITEXIT == TRUE
 241:../../../os/rt/include/chthreads.h ****   msg_t chThdWait(thread_t *tp);
 242:../../../os/rt/include/chthreads.h **** #endif
 243:../../../os/rt/include/chthreads.h ****   tprio_t chThdSetPriority(tprio_t newprio);
 244:../../../os/rt/include/chthreads.h ****   void chThdTerminate(thread_t *tp);
 245:../../../os/rt/include/chthreads.h ****   msg_t chThdSuspendS(thread_reference_t *trp);
 246:../../../os/rt/include/chthreads.h ****   msg_t chThdSuspendTimeoutS(thread_reference_t *trp, sysinterval_t timeout);
 247:../../../os/rt/include/chthreads.h ****   void chThdResumeI(thread_reference_t *trp, msg_t msg);
 248:../../../os/rt/include/chthreads.h ****   void chThdResumeS(thread_reference_t *trp, msg_t msg);
 249:../../../os/rt/include/chthreads.h ****   void chThdResume(thread_reference_t *trp, msg_t msg);
 250:../../../os/rt/include/chthreads.h ****   msg_t chThdEnqueueTimeoutS(threads_queue_t *tqp, sysinterval_t timeout);
 251:../../../os/rt/include/chthreads.h ****   void chThdDequeueNextI(threads_queue_t *tqp, msg_t msg);
 252:../../../os/rt/include/chthreads.h ****   void chThdDequeueAllI(threads_queue_t *tqp, msg_t msg);
 253:../../../os/rt/include/chthreads.h ****   void chThdSleep(sysinterval_t time);
 254:../../../os/rt/include/chthreads.h ****   void chThdSleepUntil(systime_t time);
 255:../../../os/rt/include/chthreads.h ****   systime_t chThdSleepUntilWindowed(systime_t prev, systime_t next);
 256:../../../os/rt/include/chthreads.h ****   void chThdYield(void);
 257:../../../os/rt/include/chthreads.h **** #ifdef __cplusplus
 258:../../../os/rt/include/chthreads.h **** }
 259:../../../os/rt/include/chthreads.h **** #endif
 260:../../../os/rt/include/chthreads.h **** 
 261:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
 262:../../../os/rt/include/chthreads.h **** /* Module inline functions.                                                  */
 263:../../../os/rt/include/chthreads.h **** /*===========================================================================*/
 264:../../../os/rt/include/chthreads.h **** 
 265:../../../os/rt/include/chthreads.h ****  /**
 266:../../../os/rt/include/chthreads.h ****   * @brief   Returns a pointer to the current @p thread_t.
 267:../../../os/rt/include/chthreads.h ****   *
 268:../../../os/rt/include/chthreads.h ****   * @return             A pointer to the current thread.
 269:../../../os/rt/include/chthreads.h ****   *
 270:../../../os/rt/include/chthreads.h ****   * @xclass
 271:../../../os/rt/include/chthreads.h ****   */
 272:../../../os/rt/include/chthreads.h **** static inline thread_t *chThdGetSelfX(void) {
 273:../../../os/rt/include/chthreads.h **** 
 274:../../../os/rt/include/chthreads.h ****   return ch.rlist.current;
 275:../../../os/rt/include/chthreads.h **** }
 276:../../../os/rt/include/chthreads.h **** 
 277:../../../os/rt/include/chthreads.h **** /**
 278:../../../os/rt/include/chthreads.h ****  * @brief   Returns the current thread priority.
 279:../../../os/rt/include/chthreads.h ****  * @note    Can be invoked in any context.
 280:../../../os/rt/include/chthreads.h ****  *
 281:../../../os/rt/include/chthreads.h ****  * @return              The current thread priority.
 282:../../../os/rt/include/chthreads.h ****  *
 283:../../../os/rt/include/chthreads.h ****  * @xclass
 284:../../../os/rt/include/chthreads.h ****  */
 285:../../../os/rt/include/chthreads.h **** static inline tprio_t chThdGetPriorityX(void) {
 286:../../../os/rt/include/chthreads.h **** 
 287:../../../os/rt/include/chthreads.h ****   return chThdGetSelfX()->prio;
 288:../../../os/rt/include/chthreads.h **** }
 289:../../../os/rt/include/chthreads.h **** 
 290:../../../os/rt/include/chthreads.h **** /**
 291:../../../os/rt/include/chthreads.h ****  * @brief   Returns the number of ticks consumed by the specified thread.
 292:../../../os/rt/include/chthreads.h ****  * @note    This function is only available when the
 293:../../../os/rt/include/chthreads.h ****  *          @p CH_DBG_THREADS_PROFILING configuration option is enabled.
 294:../../../os/rt/include/chthreads.h ****  *
 295:../../../os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 296:../../../os/rt/include/chthreads.h ****  * @return              The number of consumed system ticks.
 297:../../../os/rt/include/chthreads.h ****  *
 298:../../../os/rt/include/chthreads.h ****  * @xclass
 299:../../../os/rt/include/chthreads.h ****  */
 300:../../../os/rt/include/chthreads.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 301:../../../os/rt/include/chthreads.h **** static inline systime_t chThdGetTicksX(thread_t *tp) {
 302:../../../os/rt/include/chthreads.h **** 
 303:../../../os/rt/include/chthreads.h ****   return tp->time;
 304:../../../os/rt/include/chthreads.h **** }
 305:../../../os/rt/include/chthreads.h **** #endif
 306:../../../os/rt/include/chthreads.h **** 
 307:../../../os/rt/include/chthreads.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 308:../../../os/rt/include/chthreads.h ****     defined(__DOXYGEN__)
 309:../../../os/rt/include/chthreads.h **** /**
 310:../../../os/rt/include/chthreads.h ****  * @brief   Returns the working area base of the specified thread.
 311:../../../os/rt/include/chthreads.h ****  *
 312:../../../os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 313:../../../os/rt/include/chthreads.h ****  * @return              The working area base pointer.
 314:../../../os/rt/include/chthreads.h ****  *
 315:../../../os/rt/include/chthreads.h ****  * @xclass
 316:../../../os/rt/include/chthreads.h ****  */
 317:../../../os/rt/include/chthreads.h **** static inline stkalign_t *chThdGetWorkingAreaX(thread_t *tp) {
 318:../../../os/rt/include/chthreads.h **** 
 319:../../../os/rt/include/chthreads.h ****   return tp->wabase;
 320:../../../os/rt/include/chthreads.h **** }
 321:../../../os/rt/include/chthreads.h **** #endif /* CH_DBG_ENABLE_STACK_CHECK == TRUE */
 322:../../../os/rt/include/chthreads.h **** 
 323:../../../os/rt/include/chthreads.h **** /**
 324:../../../os/rt/include/chthreads.h ****  * @brief   Verifies if the specified thread is in the @p CH_STATE_FINAL state.
 325:../../../os/rt/include/chthreads.h ****  *
 326:../../../os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 327:../../../os/rt/include/chthreads.h ****  * @retval true         thread terminated.
 328:../../../os/rt/include/chthreads.h ****  * @retval false        thread not terminated.
 329:../../../os/rt/include/chthreads.h ****  *
 330:../../../os/rt/include/chthreads.h ****  * @xclass
 331:../../../os/rt/include/chthreads.h ****  */
 332:../../../os/rt/include/chthreads.h **** static inline bool chThdTerminatedX(thread_t *tp) {
 333:../../../os/rt/include/chthreads.h **** 
 334:../../../os/rt/include/chthreads.h ****   return (bool)(tp->state == CH_STATE_FINAL);
 335:../../../os/rt/include/chthreads.h **** }
 336:../../../os/rt/include/chthreads.h **** 
 337:../../../os/rt/include/chthreads.h **** /**
 338:../../../os/rt/include/chthreads.h ****  * @brief   Verifies if the current thread has a termination request pending.
 339:../../../os/rt/include/chthreads.h ****  *
 340:../../../os/rt/include/chthreads.h ****  * @retval true         termination request pending.
 341:../../../os/rt/include/chthreads.h ****  * @retval false        termination request not pending.
 342:../../../os/rt/include/chthreads.h ****  *
 343:../../../os/rt/include/chthreads.h ****  * @xclass
 344:../../../os/rt/include/chthreads.h ****  */
 345:../../../os/rt/include/chthreads.h **** static inline bool chThdShouldTerminateX(void) {
 346:../../../os/rt/include/chthreads.h **** 
 347:../../../os/rt/include/chthreads.h ****   return (bool)((chThdGetSelfX()->flags & CH_FLAG_TERMINATE) != (tmode_t)0);
 348:../../../os/rt/include/chthreads.h **** }
 349:../../../os/rt/include/chthreads.h **** 
 350:../../../os/rt/include/chthreads.h **** /**
 351:../../../os/rt/include/chthreads.h ****  * @brief   Resumes a thread created with @p chThdCreateI().
 352:../../../os/rt/include/chthreads.h ****  *
 353:../../../os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 354:../../../os/rt/include/chthreads.h ****  * @return              The pointer to the @p thread_t structure allocated for
 355:../../../os/rt/include/chthreads.h ****  *                      the thread into the working space area.
 356:../../../os/rt/include/chthreads.h ****  *
 357:../../../os/rt/include/chthreads.h ****  * @iclass
 358:../../../os/rt/include/chthreads.h ****  */
 359:../../../os/rt/include/chthreads.h **** static inline thread_t *chThdStartI(thread_t *tp) {
 360:../../../os/rt/include/chthreads.h **** 
 361:../../../os/rt/include/chthreads.h ****   chDbgAssert(tp->state == CH_STATE_WTSTART, "wrong state");
 362:../../../os/rt/include/chthreads.h **** 
 363:../../../os/rt/include/chthreads.h ****   return chSchReadyI(tp);
 364:../../../os/rt/include/chthreads.h **** }
 365:../../../os/rt/include/chthreads.h **** 
 366:../../../os/rt/include/chthreads.h **** /**
 367:../../../os/rt/include/chthreads.h ****  * @brief   Suspends the invoking thread for the specified number of ticks.
 368:../../../os/rt/include/chthreads.h ****  *
 369:../../../os/rt/include/chthreads.h ****  * @param[in] ticks     the delay in system ticks, the special values are
 370:../../../os/rt/include/chthreads.h ****  *                      handled as follow:
 371:../../../os/rt/include/chthreads.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 372:../../../os/rt/include/chthreads.h ****  *                        state.
 373:../../../os/rt/include/chthreads.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 374:../../../os/rt/include/chthreads.h ****  *                      .
 375:../../../os/rt/include/chthreads.h ****  *
 376:../../../os/rt/include/chthreads.h ****  * @sclass
 377:../../../os/rt/include/chthreads.h ****  */
 378:../../../os/rt/include/chthreads.h **** static inline void chThdSleepS(sysinterval_t ticks) {
 379:../../../os/rt/include/chthreads.h **** 
 380:../../../os/rt/include/chthreads.h ****   chDbgCheck(ticks != TIME_IMMEDIATE);
 381:../../../os/rt/include/chthreads.h **** 
 382:../../../os/rt/include/chthreads.h ****   (void) chSchGoSleepTimeoutS(CH_STATE_SLEEPING, ticks);
 383:../../../os/rt/include/chthreads.h **** }
 384:../../../os/rt/include/chthreads.h **** 
 385:../../../os/rt/include/chthreads.h **** /**
 386:../../../os/rt/include/chthreads.h ****  * @brief   Initializes a threads queue object.
 387:../../../os/rt/include/chthreads.h ****  *
 388:../../../os/rt/include/chthreads.h ****  * @param[out] tqp      pointer to the threads queue object
 389:../../../os/rt/include/chthreads.h ****  *
 390:../../../os/rt/include/chthreads.h ****  * @init
 391:../../../os/rt/include/chthreads.h ****  */
 392:../../../os/rt/include/chthreads.h **** static inline void chThdQueueObjectInit(threads_queue_t *tqp) {
  63               		.loc 3 392 20 view .LVU7
  64               	.LBE272:
  65               	.LBE276:
 393:../../../os/rt/include/chthreads.h **** 
 394:../../../os/rt/include/chthreads.h ****   queue_init(tqp);
  66               		.loc 3 394 3 view .LVU8
  67               	.LBB277:
  68               	.LBB275:
  69               	.LBB273:
  70               	.LBI273:
  71               		.file 4 "../../../os/rt/include/chschd.h"
   1:../../../os/rt/include/chschd.h **** /*
   2:../../../os/rt/include/chschd.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/rt/include/chschd.h **** 
   4:../../../os/rt/include/chschd.h ****     This file is part of ChibiOS.
   5:../../../os/rt/include/chschd.h **** 
   6:../../../os/rt/include/chschd.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/rt/include/chschd.h ****     it under the terms of the GNU General Public License as published by
   8:../../../os/rt/include/chschd.h ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/rt/include/chschd.h ****     (at your option) any later version.
  10:../../../os/rt/include/chschd.h **** 
  11:../../../os/rt/include/chschd.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/rt/include/chschd.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/rt/include/chschd.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/rt/include/chschd.h ****     GNU General Public License for more details.
  15:../../../os/rt/include/chschd.h **** 
  16:../../../os/rt/include/chschd.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/rt/include/chschd.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/rt/include/chschd.h **** */
  19:../../../os/rt/include/chschd.h **** 
  20:../../../os/rt/include/chschd.h **** /**
  21:../../../os/rt/include/chschd.h ****  * @file    chschd.h
  22:../../../os/rt/include/chschd.h ****  * @brief   Scheduler macros and structures.
  23:../../../os/rt/include/chschd.h ****  *
  24:../../../os/rt/include/chschd.h ****  * @addtogroup scheduler
  25:../../../os/rt/include/chschd.h ****  * @{
  26:../../../os/rt/include/chschd.h ****  */
  27:../../../os/rt/include/chschd.h **** 
  28:../../../os/rt/include/chschd.h **** #ifndef CHSCHD_H
  29:../../../os/rt/include/chschd.h **** #define CHSCHD_H
  30:../../../os/rt/include/chschd.h **** 
  31:../../../os/rt/include/chschd.h **** /*===========================================================================*/
  32:../../../os/rt/include/chschd.h **** /* Module constants.                                                         */
  33:../../../os/rt/include/chschd.h **** /*===========================================================================*/
  34:../../../os/rt/include/chschd.h **** 
  35:../../../os/rt/include/chschd.h **** /**
  36:../../../os/rt/include/chschd.h ****  * @name    Wakeup status codes
  37:../../../os/rt/include/chschd.h ****  * @{
  38:../../../os/rt/include/chschd.h ****  */
  39:../../../os/rt/include/chschd.h **** #define MSG_OK              (msg_t)0    /**< @brief Normal wakeup message.  */
  40:../../../os/rt/include/chschd.h **** #define MSG_TIMEOUT         (msg_t)-1   /**< @brief Wakeup caused by a timeout
  41:../../../os/rt/include/chschd.h ****                                              condition.                     */
  42:../../../os/rt/include/chschd.h **** #define MSG_RESET           (msg_t)-2   /**< @brief Wakeup caused by a reset
  43:../../../os/rt/include/chschd.h ****                                              condition.                     */
  44:../../../os/rt/include/chschd.h **** /** @} */
  45:../../../os/rt/include/chschd.h **** 
  46:../../../os/rt/include/chschd.h **** /**
  47:../../../os/rt/include/chschd.h ****  * @name    Priority constants
  48:../../../os/rt/include/chschd.h ****  * @{
  49:../../../os/rt/include/chschd.h ****  */
  50:../../../os/rt/include/chschd.h **** #define NOPRIO              (tprio_t)0      /**< @brief Ready list header
  51:../../../os/rt/include/chschd.h ****                                                  priority.                  */
  52:../../../os/rt/include/chschd.h **** #define IDLEPRIO            (tprio_t)1      /**< @brief Idle priority.      */
  53:../../../os/rt/include/chschd.h **** #define LOWPRIO             (tprio_t)2      /**< @brief Lowest priority.    */
  54:../../../os/rt/include/chschd.h **** #define NORMALPRIO          (tprio_t)128    /**< @brief Normal priority.    */
  55:../../../os/rt/include/chschd.h **** #define HIGHPRIO            (tprio_t)255    /**< @brief Highest priority.   */
  56:../../../os/rt/include/chschd.h **** /** @} */
  57:../../../os/rt/include/chschd.h **** 
  58:../../../os/rt/include/chschd.h **** /**
  59:../../../os/rt/include/chschd.h ****  * @name    Thread states
  60:../../../os/rt/include/chschd.h ****  * @{
  61:../../../os/rt/include/chschd.h ****  */
  62:../../../os/rt/include/chschd.h **** #define CH_STATE_READY      (tstate_t)0      /**< @brief Waiting on the
  63:../../../os/rt/include/chschd.h ****                                                   ready list.               */
  64:../../../os/rt/include/chschd.h **** #define CH_STATE_CURRENT    (tstate_t)1      /**< @brief Currently running. */
  65:../../../os/rt/include/chschd.h **** #define CH_STATE_WTSTART    (tstate_t)2      /**< @brief Just created.      */
  66:../../../os/rt/include/chschd.h **** #define CH_STATE_SUSPENDED  (tstate_t)3      /**< @brief Suspended state.   */
  67:../../../os/rt/include/chschd.h **** #define CH_STATE_QUEUED     (tstate_t)4      /**< @brief On an I/O queue.   */
  68:../../../os/rt/include/chschd.h **** #define CH_STATE_WTSEM      (tstate_t)5      /**< @brief On a semaphore.    */
  69:../../../os/rt/include/chschd.h **** #define CH_STATE_WTMTX      (tstate_t)6      /**< @brief On a mutex.        */
  70:../../../os/rt/include/chschd.h **** #define CH_STATE_WTCOND     (tstate_t)7      /**< @brief On a cond.variable.*/
  71:../../../os/rt/include/chschd.h **** #define CH_STATE_SLEEPING   (tstate_t)8      /**< @brief Sleeping.          */
  72:../../../os/rt/include/chschd.h **** #define CH_STATE_WTEXIT     (tstate_t)9      /**< @brief Waiting a thread.  */
  73:../../../os/rt/include/chschd.h **** #define CH_STATE_WTOREVT    (tstate_t)10     /**< @brief One event.         */
  74:../../../os/rt/include/chschd.h **** #define CH_STATE_WTANDEVT   (tstate_t)11     /**< @brief Several events.    */
  75:../../../os/rt/include/chschd.h **** #define CH_STATE_SNDMSGQ    (tstate_t)12     /**< @brief Sending a message,
  76:../../../os/rt/include/chschd.h ****                                                   in queue.                 */
  77:../../../os/rt/include/chschd.h **** #define CH_STATE_SNDMSG     (tstate_t)13     /**< @brief Sent a message,
  78:../../../os/rt/include/chschd.h ****                                                   waiting answer.           */
  79:../../../os/rt/include/chschd.h **** #define CH_STATE_WTMSG      (tstate_t)14     /**< @brief Waiting for a
  80:../../../os/rt/include/chschd.h ****                                                   message.                  */
  81:../../../os/rt/include/chschd.h **** #define CH_STATE_FINAL      (tstate_t)15     /**< @brief Thread terminated. */
  82:../../../os/rt/include/chschd.h **** 
  83:../../../os/rt/include/chschd.h **** /**
  84:../../../os/rt/include/chschd.h ****  * @brief   Thread states as array of strings.
  85:../../../os/rt/include/chschd.h ****  * @details Each element in an array initialized with this macro can be
  86:../../../os/rt/include/chschd.h ****  *          indexed using the numeric thread state values.
  87:../../../os/rt/include/chschd.h ****  */
  88:../../../os/rt/include/chschd.h **** #define CH_STATE_NAMES                                                     \
  89:../../../os/rt/include/chschd.h ****   "READY", "CURRENT", "WTSTART", "SUSPENDED", "QUEUED", "WTSEM", "WTMTX",  \
  90:../../../os/rt/include/chschd.h ****   "WTCOND", "SLEEPING", "WTEXIT", "WTOREVT", "WTANDEVT", "SNDMSGQ",        \
  91:../../../os/rt/include/chschd.h ****   "SNDMSG", "WTMSG", "FINAL"
  92:../../../os/rt/include/chschd.h **** /** @} */
  93:../../../os/rt/include/chschd.h **** 
  94:../../../os/rt/include/chschd.h **** /**
  95:../../../os/rt/include/chschd.h ****  * @name    Thread flags and attributes
  96:../../../os/rt/include/chschd.h ****  * @{
  97:../../../os/rt/include/chschd.h ****  */
  98:../../../os/rt/include/chschd.h **** #define CH_FLAG_MODE_MASK   (tmode_t)3U     /**< @brief Thread memory mode
  99:../../../os/rt/include/chschd.h ****                                                  mask.                      */
 100:../../../os/rt/include/chschd.h **** #define CH_FLAG_MODE_STATIC (tmode_t)0U     /**< @brief Static thread.      */
 101:../../../os/rt/include/chschd.h **** #define CH_FLAG_MODE_HEAP   (tmode_t)1U     /**< @brief Thread allocated
 102:../../../os/rt/include/chschd.h ****                                                  from a Memory Heap.        */
 103:../../../os/rt/include/chschd.h **** #define CH_FLAG_MODE_MPOOL  (tmode_t)2U     /**< @brief Thread allocated
 104:../../../os/rt/include/chschd.h ****                                                  from a Memory Pool.        */
 105:../../../os/rt/include/chschd.h **** #define CH_FLAG_TERMINATE   (tmode_t)4U     /**< @brief Termination requested
 106:../../../os/rt/include/chschd.h ****                                                  flag.                      */
 107:../../../os/rt/include/chschd.h **** /** @} */
 108:../../../os/rt/include/chschd.h **** 
 109:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 110:../../../os/rt/include/chschd.h **** /* Module pre-compile time settings.                                         */
 111:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 112:../../../os/rt/include/chschd.h **** 
 113:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 114:../../../os/rt/include/chschd.h **** /* Derived constants and error checks.                                       */
 115:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 116:../../../os/rt/include/chschd.h **** 
 117:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 118:../../../os/rt/include/chschd.h **** /* Module data structures and types.                                         */
 119:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 120:../../../os/rt/include/chschd.h **** 
 121:../../../os/rt/include/chschd.h **** /**
 122:../../../os/rt/include/chschd.h ****  * @brief   Generic threads single link list, it works like a stack.
 123:../../../os/rt/include/chschd.h ****  */
 124:../../../os/rt/include/chschd.h **** struct ch_threads_list {
 125:../../../os/rt/include/chschd.h ****   thread_t              *next;      /**< @brief Next in the list/queue.     */
 126:../../../os/rt/include/chschd.h **** };
 127:../../../os/rt/include/chschd.h **** 
 128:../../../os/rt/include/chschd.h **** /**
 129:../../../os/rt/include/chschd.h ****  * @brief   Generic threads bidirectional linked list header and element.
 130:../../../os/rt/include/chschd.h ****  */
 131:../../../os/rt/include/chschd.h **** struct ch_threads_queue {
 132:../../../os/rt/include/chschd.h ****   thread_t              *next;      /**< @brief Next in the list/queue.     */
 133:../../../os/rt/include/chschd.h ****   thread_t              *prev;      /**< @brief Previous in the queue.      */
 134:../../../os/rt/include/chschd.h **** };
 135:../../../os/rt/include/chschd.h **** 
 136:../../../os/rt/include/chschd.h **** /**
 137:../../../os/rt/include/chschd.h ****  * @brief   Structure representing a thread.
 138:../../../os/rt/include/chschd.h ****  * @note    Not all the listed fields are always needed, by switching off some
 139:../../../os/rt/include/chschd.h ****  *          not needed ChibiOS/RT subsystems it is possible to save RAM space
 140:../../../os/rt/include/chschd.h ****  *          by shrinking this structure.
 141:../../../os/rt/include/chschd.h ****  */
 142:../../../os/rt/include/chschd.h **** struct ch_thread {
 143:../../../os/rt/include/chschd.h ****   threads_queue_t       queue;      /**< @brief Threads queue header.       */
 144:../../../os/rt/include/chschd.h ****   tprio_t               prio;       /**< @brief Thread priority.            */
 145:../../../os/rt/include/chschd.h ****   struct port_context   ctx;        /**< @brief Processor context.          */
 146:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 147:../../../os/rt/include/chschd.h ****   thread_t              *newer;     /**< @brief Newer registry element.     */
 148:../../../os/rt/include/chschd.h ****   thread_t              *older;     /**< @brief Older registry element.     */
 149:../../../os/rt/include/chschd.h **** #endif
 150:../../../os/rt/include/chschd.h ****   /* End of the fields shared with the ReadyList structure. */
 151:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 152:../../../os/rt/include/chschd.h ****   /**
 153:../../../os/rt/include/chschd.h ****    * @brief   Thread name or @p NULL.
 154:../../../os/rt/include/chschd.h ****    */
 155:../../../os/rt/include/chschd.h ****   const char            *name;
 156:../../../os/rt/include/chschd.h **** #endif
 157:../../../os/rt/include/chschd.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 158:../../../os/rt/include/chschd.h ****     defined(__DOXYGEN__)
 159:../../../os/rt/include/chschd.h ****   /**
 160:../../../os/rt/include/chschd.h ****    * @brief   Working area base address.
 161:../../../os/rt/include/chschd.h ****    * @note    This pointer is used for stack overflow checks and for
 162:../../../os/rt/include/chschd.h ****    *          dynamic threading.
 163:../../../os/rt/include/chschd.h ****    */
 164:../../../os/rt/include/chschd.h ****   stkalign_t            *wabase;
 165:../../../os/rt/include/chschd.h **** #endif
 166:../../../os/rt/include/chschd.h ****   /**
 167:../../../os/rt/include/chschd.h ****    * @brief   Current thread state.
 168:../../../os/rt/include/chschd.h ****    */
 169:../../../os/rt/include/chschd.h ****   tstate_t              state;
 170:../../../os/rt/include/chschd.h ****   /**
 171:../../../os/rt/include/chschd.h ****    * @brief   Various thread flags.
 172:../../../os/rt/include/chschd.h ****    */
 173:../../../os/rt/include/chschd.h ****   tmode_t               flags;
 174:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 175:../../../os/rt/include/chschd.h ****   /**
 176:../../../os/rt/include/chschd.h ****    * @brief   References to this thread.
 177:../../../os/rt/include/chschd.h ****    */
 178:../../../os/rt/include/chschd.h ****   trefs_t               refs;
 179:../../../os/rt/include/chschd.h **** #endif
 180:../../../os/rt/include/chschd.h ****   /**
 181:../../../os/rt/include/chschd.h ****    * @brief   Number of ticks remaining to this thread.
 182:../../../os/rt/include/chschd.h ****    */
 183:../../../os/rt/include/chschd.h **** #if (CH_CFG_TIME_QUANTUM > 0) || defined(__DOXYGEN__)
 184:../../../os/rt/include/chschd.h ****   tslices_t             ticks;
 185:../../../os/rt/include/chschd.h **** #endif
 186:../../../os/rt/include/chschd.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 187:../../../os/rt/include/chschd.h ****   /**
 188:../../../os/rt/include/chschd.h ****    * @brief   Thread consumed time in ticks.
 189:../../../os/rt/include/chschd.h ****    * @note    This field can overflow.
 190:../../../os/rt/include/chschd.h ****    */
 191:../../../os/rt/include/chschd.h ****   volatile systime_t    time;
 192:../../../os/rt/include/chschd.h **** #endif
 193:../../../os/rt/include/chschd.h ****   /**
 194:../../../os/rt/include/chschd.h ****    * @brief   State-specific fields.
 195:../../../os/rt/include/chschd.h ****    * @note    All the fields declared in this union are only valid in the
 196:../../../os/rt/include/chschd.h ****    *          specified state or condition and are thus volatile.
 197:../../../os/rt/include/chschd.h ****    */
 198:../../../os/rt/include/chschd.h ****   union {
 199:../../../os/rt/include/chschd.h ****     /**
 200:../../../os/rt/include/chschd.h ****      * @brief   Thread wakeup code.
 201:../../../os/rt/include/chschd.h ****      * @note    This field contains the low level message sent to the thread
 202:../../../os/rt/include/chschd.h ****      *          by the waking thread or interrupt handler. The value is valid
 203:../../../os/rt/include/chschd.h ****      *          after exiting the @p chSchWakeupS() function.
 204:../../../os/rt/include/chschd.h ****      */
 205:../../../os/rt/include/chschd.h ****     msg_t               rdymsg;
 206:../../../os/rt/include/chschd.h ****     /**
 207:../../../os/rt/include/chschd.h ****      * @brief   Thread exit code.
 208:../../../os/rt/include/chschd.h ****      * @note    The thread termination code is stored in this field in order
 209:../../../os/rt/include/chschd.h ****      *          to be retrieved by the thread performing a @p chThdWait() on
 210:../../../os/rt/include/chschd.h ****      *          this thread.
 211:../../../os/rt/include/chschd.h ****      */
 212:../../../os/rt/include/chschd.h ****     msg_t               exitcode;
 213:../../../os/rt/include/chschd.h ****     /**
 214:../../../os/rt/include/chschd.h ****      * @brief   Pointer to a generic "wait" object.
 215:../../../os/rt/include/chschd.h ****      * @note    This field is used to get a generic pointer to a synchronization
 216:../../../os/rt/include/chschd.h ****      *          object and is valid when the thread is in one of the wait
 217:../../../os/rt/include/chschd.h ****      *          states.
 218:../../../os/rt/include/chschd.h ****      */
 219:../../../os/rt/include/chschd.h ****     void                *wtobjp;
 220:../../../os/rt/include/chschd.h ****     /**
 221:../../../os/rt/include/chschd.h ****      * @brief   Pointer to a generic thread reference object.
 222:../../../os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 223:../../../os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_SUSPENDED
 224:../../../os/rt/include/chschd.h ****      *          state.
 225:../../../os/rt/include/chschd.h ****      */
 226:../../../os/rt/include/chschd.h ****     thread_reference_t  *wttrp;
 227:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_MESSAGES == TRUE) || defined(__DOXYGEN__)
 228:../../../os/rt/include/chschd.h ****     /**
 229:../../../os/rt/include/chschd.h ****      * @brief   Thread sent message.
 230:../../../os/rt/include/chschd.h ****      */
 231:../../../os/rt/include/chschd.h ****     msg_t               sentmsg;
 232:../../../os/rt/include/chschd.h **** #endif
 233:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_SEMAPHORES == TRUE) || defined(__DOXYGEN__)
 234:../../../os/rt/include/chschd.h ****     /**
 235:../../../os/rt/include/chschd.h ****      * @brief   Pointer to a generic semaphore object.
 236:../../../os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 237:../../../os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_WTSEM
 238:../../../os/rt/include/chschd.h ****      *          state.
 239:../../../os/rt/include/chschd.h ****      */
 240:../../../os/rt/include/chschd.h ****     struct ch_semaphore *wtsemp;
 241:../../../os/rt/include/chschd.h **** #endif
 242:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
 243:../../../os/rt/include/chschd.h ****     /**
 244:../../../os/rt/include/chschd.h ****      * @brief   Pointer to a generic mutex object.
 245:../../../os/rt/include/chschd.h ****      * @note    This field is used to get a pointer to a synchronization
 246:../../../os/rt/include/chschd.h ****      *          object and is valid when the thread is in @p CH_STATE_WTMTX
 247:../../../os/rt/include/chschd.h ****      *          state.
 248:../../../os/rt/include/chschd.h ****      */
 249:../../../os/rt/include/chschd.h ****     struct ch_mutex     *wtmtxp;
 250:../../../os/rt/include/chschd.h **** #endif
 251:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 252:../../../os/rt/include/chschd.h ****     /**
 253:../../../os/rt/include/chschd.h ****      * @brief   Enabled events mask.
 254:../../../os/rt/include/chschd.h ****      * @note    This field is only valid while the thread is in the
 255:../../../os/rt/include/chschd.h ****      *          @p CH_STATE_WTOREVT or @p CH_STATE_WTANDEVT states.
 256:../../../os/rt/include/chschd.h ****      */
 257:../../../os/rt/include/chschd.h ****     eventmask_t         ewmask;
 258:../../../os/rt/include/chschd.h **** #endif
 259:../../../os/rt/include/chschd.h ****   }                     u;
 260:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_WAITEXIT == TRUE) || defined(__DOXYGEN__)
 261:../../../os/rt/include/chschd.h ****   /**
 262:../../../os/rt/include/chschd.h ****    * @brief   Termination waiting list.
 263:../../../os/rt/include/chschd.h ****    */
 264:../../../os/rt/include/chschd.h ****   threads_list_t        waiting;
 265:../../../os/rt/include/chschd.h **** #endif
 266:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_MESSAGES == TRUE) || defined(__DOXYGEN__)
 267:../../../os/rt/include/chschd.h ****   /**
 268:../../../os/rt/include/chschd.h ****    * @brief   Messages queue.
 269:../../../os/rt/include/chschd.h ****    */
 270:../../../os/rt/include/chschd.h ****   threads_queue_t       msgqueue;
 271:../../../os/rt/include/chschd.h **** #endif
 272:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 273:../../../os/rt/include/chschd.h ****   /**
 274:../../../os/rt/include/chschd.h ****    * @brief   Pending events mask.
 275:../../../os/rt/include/chschd.h ****    */
 276:../../../os/rt/include/chschd.h ****   eventmask_t           epending;
 277:../../../os/rt/include/chschd.h **** #endif
 278:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
 279:../../../os/rt/include/chschd.h ****   /**
 280:../../../os/rt/include/chschd.h ****    * @brief   List of the mutexes owned by this thread.
 281:../../../os/rt/include/chschd.h ****    * @note    The list is terminated by a @p NULL in this field.
 282:../../../os/rt/include/chschd.h ****    */
 283:../../../os/rt/include/chschd.h ****   struct ch_mutex       *mtxlist;
 284:../../../os/rt/include/chschd.h ****   /**
 285:../../../os/rt/include/chschd.h ****    * @brief   Thread's own, non-inherited, priority.
 286:../../../os/rt/include/chschd.h ****    */
 287:../../../os/rt/include/chschd.h ****   tprio_t               realprio;
 288:../../../os/rt/include/chschd.h **** #endif
 289:../../../os/rt/include/chschd.h **** #if ((CH_CFG_USE_DYNAMIC == TRUE) && (CH_CFG_USE_MEMPOOLS == TRUE)) ||      \
 290:../../../os/rt/include/chschd.h ****     defined(__DOXYGEN__)
 291:../../../os/rt/include/chschd.h ****   /**
 292:../../../os/rt/include/chschd.h ****    * @brief   Memory Pool where the thread workspace is returned.
 293:../../../os/rt/include/chschd.h ****    */
 294:../../../os/rt/include/chschd.h ****   void                  *mpool;
 295:../../../os/rt/include/chschd.h **** #endif
 296:../../../os/rt/include/chschd.h **** #if (CH_DBG_STATISTICS == TRUE) || defined(__DOXYGEN__)
 297:../../../os/rt/include/chschd.h ****   /**
 298:../../../os/rt/include/chschd.h ****    * @brief   Thread statistics.
 299:../../../os/rt/include/chschd.h ****    */
 300:../../../os/rt/include/chschd.h ****   time_measurement_t    stats;
 301:../../../os/rt/include/chschd.h **** #endif
 302:../../../os/rt/include/chschd.h **** #if defined(CH_CFG_THREAD_EXTRA_FIELDS)
 303:../../../os/rt/include/chschd.h ****   /* Extra fields defined in chconf.h.*/
 304:../../../os/rt/include/chschd.h ****   CH_CFG_THREAD_EXTRA_FIELDS
 305:../../../os/rt/include/chschd.h **** #endif
 306:../../../os/rt/include/chschd.h **** };
 307:../../../os/rt/include/chschd.h **** 
 308:../../../os/rt/include/chschd.h **** /**
 309:../../../os/rt/include/chschd.h ****  * @extends virtual_timers_list_t
 310:../../../os/rt/include/chschd.h ****  *
 311:../../../os/rt/include/chschd.h ****  * @brief   Virtual Timer descriptor structure.
 312:../../../os/rt/include/chschd.h ****  */
 313:../../../os/rt/include/chschd.h **** struct ch_virtual_timer {
 314:../../../os/rt/include/chschd.h ****   virtual_timer_t       *next;      /**< @brief Next timer in the list.     */
 315:../../../os/rt/include/chschd.h ****   virtual_timer_t       *prev;      /**< @brief Previous timer in the list. */
 316:../../../os/rt/include/chschd.h ****   sysinterval_t         delta;      /**< @brief Time delta before timeout.  */
 317:../../../os/rt/include/chschd.h ****   vtfunc_t              func;       /**< @brief Timer callback function
 318:../../../os/rt/include/chschd.h ****                                                 pointer.                    */
 319:../../../os/rt/include/chschd.h ****   void                  *par;       /**< @brief Timer callback function
 320:../../../os/rt/include/chschd.h ****                                                 parameter.                  */
 321:../../../os/rt/include/chschd.h **** };
 322:../../../os/rt/include/chschd.h **** 
 323:../../../os/rt/include/chschd.h **** /**
 324:../../../os/rt/include/chschd.h ****  * @brief   Virtual timers list header.
 325:../../../os/rt/include/chschd.h ****  * @note    The timers list is implemented as a double link bidirectional list
 326:../../../os/rt/include/chschd.h ****  *          in order to make the unlink time constant, the reset of a virtual
 327:../../../os/rt/include/chschd.h ****  *          timer is often used in the code.
 328:../../../os/rt/include/chschd.h ****  */
 329:../../../os/rt/include/chschd.h **** struct ch_virtual_timers_list {
 330:../../../os/rt/include/chschd.h ****   virtual_timer_t       *next;      /**< @brief Next timer in the delta
 331:../../../os/rt/include/chschd.h ****                                                 list.                       */
 332:../../../os/rt/include/chschd.h ****   virtual_timer_t       *prev;      /**< @brief Last timer in the delta
 333:../../../os/rt/include/chschd.h ****                                                 list.                       */
 334:../../../os/rt/include/chschd.h ****   sysinterval_t         delta;      /**< @brief Must be initialized to -1.  */
 335:../../../os/rt/include/chschd.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 336:../../../os/rt/include/chschd.h ****   volatile systime_t    systime;    /**< @brief System Time counter.        */
 337:../../../os/rt/include/chschd.h **** #endif
 338:../../../os/rt/include/chschd.h **** #if (CH_CFG_ST_TIMEDELTA > 0) || defined(__DOXYGEN__)
 339:../../../os/rt/include/chschd.h ****   /**
 340:../../../os/rt/include/chschd.h ****    * @brief   System time of the last tick event.
 341:../../../os/rt/include/chschd.h ****    */
 342:../../../os/rt/include/chschd.h ****   systime_t             lasttime;   /**< @brief System time of the last
 343:../../../os/rt/include/chschd.h ****                                                 tick event.                 */
 344:../../../os/rt/include/chschd.h **** #endif
 345:../../../os/rt/include/chschd.h **** };
 346:../../../os/rt/include/chschd.h **** 
 347:../../../os/rt/include/chschd.h **** /**
 348:../../../os/rt/include/chschd.h ****  * @extends threads_queue_t
 349:../../../os/rt/include/chschd.h ****  */
 350:../../../os/rt/include/chschd.h **** struct ch_ready_list {
 351:../../../os/rt/include/chschd.h ****   threads_queue_t       queue;      /**< @brief Threads queue.              */
 352:../../../os/rt/include/chschd.h ****   tprio_t               prio;       /**< @brief This field must be
 353:../../../os/rt/include/chschd.h ****                                                 initialized to zero.        */
 354:../../../os/rt/include/chschd.h ****   struct port_context   ctx;        /**< @brief Not used, present because
 355:../../../os/rt/include/chschd.h ****                                                 offsets.                    */
 356:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 357:../../../os/rt/include/chschd.h ****   thread_t              *newer;     /**< @brief Newer registry element.     */
 358:../../../os/rt/include/chschd.h ****   thread_t              *older;     /**< @brief Older registry element.     */
 359:../../../os/rt/include/chschd.h **** #endif
 360:../../../os/rt/include/chschd.h ****   /* End of the fields shared with the thread_t structure.*/
 361:../../../os/rt/include/chschd.h ****   thread_t              *current;   /**< @brief The currently running
 362:../../../os/rt/include/chschd.h ****                                                 thread.                     */
 363:../../../os/rt/include/chschd.h **** };
 364:../../../os/rt/include/chschd.h **** 
 365:../../../os/rt/include/chschd.h **** /**
 366:../../../os/rt/include/chschd.h ****  * @brief   System debug data structure.
 367:../../../os/rt/include/chschd.h ****  */
 368:../../../os/rt/include/chschd.h **** struct ch_system_debug {
 369:../../../os/rt/include/chschd.h ****   /**
 370:../../../os/rt/include/chschd.h ****    * @brief   Pointer to the panic message.
 371:../../../os/rt/include/chschd.h ****    * @details This pointer is meant to be accessed through the debugger, it is
 372:../../../os/rt/include/chschd.h ****    *          written once and then the system is halted.
 373:../../../os/rt/include/chschd.h ****    * @note    Accesses to this pointer must never be optimized out so the
 374:../../../os/rt/include/chschd.h ****    *          field itself is declared volatile.
 375:../../../os/rt/include/chschd.h ****    */
 376:../../../os/rt/include/chschd.h ****   const char            * volatile panic_msg;
 377:../../../os/rt/include/chschd.h **** #if (CH_DBG_SYSTEM_STATE_CHECK == TRUE) || defined(__DOXYGEN__)
 378:../../../os/rt/include/chschd.h ****   /**
 379:../../../os/rt/include/chschd.h ****    * @brief   ISR nesting level.
 380:../../../os/rt/include/chschd.h ****    */
 381:../../../os/rt/include/chschd.h ****   cnt_t                 isr_cnt;
 382:../../../os/rt/include/chschd.h ****   /**
 383:../../../os/rt/include/chschd.h ****    * @brief   Lock nesting level.
 384:../../../os/rt/include/chschd.h ****    */
 385:../../../os/rt/include/chschd.h ****   cnt_t                 lock_cnt;
 386:../../../os/rt/include/chschd.h **** #endif
 387:../../../os/rt/include/chschd.h **** #if (CH_DBG_TRACE_MASK != CH_DBG_TRACE_MASK_DISABLED) || defined(__DOXYGEN__)
 388:../../../os/rt/include/chschd.h ****   /**
 389:../../../os/rt/include/chschd.h ****    * @brief   Public trace buffer.
 390:../../../os/rt/include/chschd.h ****    */
 391:../../../os/rt/include/chschd.h ****   ch_trace_buffer_t     trace_buffer;
 392:../../../os/rt/include/chschd.h **** #endif
 393:../../../os/rt/include/chschd.h **** };
 394:../../../os/rt/include/chschd.h **** 
 395:../../../os/rt/include/chschd.h **** /**
 396:../../../os/rt/include/chschd.h ****  * @brief   System data structure.
 397:../../../os/rt/include/chschd.h ****  * @note    This structure contain all the data areas used by the OS except
 398:../../../os/rt/include/chschd.h ****  *          stacks.
 399:../../../os/rt/include/chschd.h ****  */
 400:../../../os/rt/include/chschd.h **** struct ch_system {
 401:../../../os/rt/include/chschd.h ****   /**
 402:../../../os/rt/include/chschd.h ****    * @brief   Ready list header.
 403:../../../os/rt/include/chschd.h ****    */
 404:../../../os/rt/include/chschd.h ****   ready_list_t          rlist;
 405:../../../os/rt/include/chschd.h ****   /**
 406:../../../os/rt/include/chschd.h ****    * @brief   Virtual timers delta list header.
 407:../../../os/rt/include/chschd.h ****    */
 408:../../../os/rt/include/chschd.h ****   virtual_timers_list_t vtlist;
 409:../../../os/rt/include/chschd.h ****   /**
 410:../../../os/rt/include/chschd.h ****    * @brief   System debug.
 411:../../../os/rt/include/chschd.h ****    */
 412:../../../os/rt/include/chschd.h ****   system_debug_t        dbg;
 413:../../../os/rt/include/chschd.h ****   /**
 414:../../../os/rt/include/chschd.h ****    * @brief   Main thread descriptor.
 415:../../../os/rt/include/chschd.h ****    */
 416:../../../os/rt/include/chschd.h ****   thread_t              mainthread;
 417:../../../os/rt/include/chschd.h **** #if (CH_CFG_USE_TM == TRUE) || defined(__DOXYGEN__)
 418:../../../os/rt/include/chschd.h ****   /**
 419:../../../os/rt/include/chschd.h ****    * @brief   Time measurement calibration data.
 420:../../../os/rt/include/chschd.h ****    */
 421:../../../os/rt/include/chschd.h ****   tm_calibration_t      tm;
 422:../../../os/rt/include/chschd.h **** #endif
 423:../../../os/rt/include/chschd.h **** #if (CH_DBG_STATISTICS == TRUE) || defined(__DOXYGEN__)
 424:../../../os/rt/include/chschd.h ****   /**
 425:../../../os/rt/include/chschd.h ****    * @brief   Global kernel statistics.
 426:../../../os/rt/include/chschd.h ****    */
 427:../../../os/rt/include/chschd.h ****   kernel_stats_t        kernel_stats;
 428:../../../os/rt/include/chschd.h **** #endif
 429:../../../os/rt/include/chschd.h ****   CH_CFG_SYSTEM_EXTRA_FIELDS
 430:../../../os/rt/include/chschd.h **** };
 431:../../../os/rt/include/chschd.h **** 
 432:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 433:../../../os/rt/include/chschd.h **** /* Module macros.                                                            */
 434:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 435:../../../os/rt/include/chschd.h **** 
 436:../../../os/rt/include/chschd.h **** /**
 437:../../../os/rt/include/chschd.h ****  * @brief   Returns the priority of the first thread on the given ready list.
 438:../../../os/rt/include/chschd.h ****  *
 439:../../../os/rt/include/chschd.h ****  * @notapi
 440:../../../os/rt/include/chschd.h ****  */
 441:../../../os/rt/include/chschd.h **** #define firstprio(rlp)  ((rlp)->next->prio)
 442:../../../os/rt/include/chschd.h **** 
 443:../../../os/rt/include/chschd.h **** /**
 444:../../../os/rt/include/chschd.h ****  * @brief   Current thread pointer access macro.
 445:../../../os/rt/include/chschd.h ****  * @note    This macro is not meant to be used in the application code but
 446:../../../os/rt/include/chschd.h ****  *          only from within the kernel, use @p chThdGetSelfX() instead.
 447:../../../os/rt/include/chschd.h ****  */
 448:../../../os/rt/include/chschd.h **** #define currp ch.rlist.current
 449:../../../os/rt/include/chschd.h **** 
 450:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 451:../../../os/rt/include/chschd.h **** /* External declarations.                                                    */
 452:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 453:../../../os/rt/include/chschd.h **** 
 454:../../../os/rt/include/chschd.h **** #if !defined(__DOXYGEN__)
 455:../../../os/rt/include/chschd.h **** extern ch_system_t ch;
 456:../../../os/rt/include/chschd.h **** #endif
 457:../../../os/rt/include/chschd.h **** 
 458:../../../os/rt/include/chschd.h **** /*
 459:../../../os/rt/include/chschd.h ****  * Scheduler APIs.
 460:../../../os/rt/include/chschd.h ****  */
 461:../../../os/rt/include/chschd.h **** #ifdef __cplusplus
 462:../../../os/rt/include/chschd.h **** extern "C" {
 463:../../../os/rt/include/chschd.h **** #endif
 464:../../../os/rt/include/chschd.h ****   void _scheduler_init(void);
 465:../../../os/rt/include/chschd.h ****   thread_t *chSchReadyI(thread_t *tp);
 466:../../../os/rt/include/chschd.h ****   thread_t *chSchReadyAheadI(thread_t *tp);
 467:../../../os/rt/include/chschd.h ****   void chSchGoSleepS(tstate_t newstate);
 468:../../../os/rt/include/chschd.h ****   msg_t chSchGoSleepTimeoutS(tstate_t newstate, sysinterval_t timeout);
 469:../../../os/rt/include/chschd.h ****   void chSchWakeupS(thread_t *ntp, msg_t msg);
 470:../../../os/rt/include/chschd.h ****   void chSchRescheduleS(void);
 471:../../../os/rt/include/chschd.h ****   bool chSchIsPreemptionRequired(void);
 472:../../../os/rt/include/chschd.h ****   void chSchDoRescheduleBehind(void);
 473:../../../os/rt/include/chschd.h ****   void chSchDoRescheduleAhead(void);
 474:../../../os/rt/include/chschd.h ****   void chSchDoReschedule(void);
 475:../../../os/rt/include/chschd.h **** #if CH_CFG_OPTIMIZE_SPEED == FALSE
 476:../../../os/rt/include/chschd.h ****   void queue_prio_insert(thread_t *tp, threads_queue_t *tqp);
 477:../../../os/rt/include/chschd.h ****   void queue_insert(thread_t *tp, threads_queue_t *tqp);
 478:../../../os/rt/include/chschd.h ****   thread_t *queue_fifo_remove(threads_queue_t *tqp);
 479:../../../os/rt/include/chschd.h ****   thread_t *queue_lifo_remove(threads_queue_t *tqp);
 480:../../../os/rt/include/chschd.h ****   thread_t *queue_dequeue(thread_t *tp);
 481:../../../os/rt/include/chschd.h ****   void list_insert(thread_t *tp, threads_list_t *tlp);
 482:../../../os/rt/include/chschd.h ****   thread_t *list_remove(threads_list_t *tlp);
 483:../../../os/rt/include/chschd.h **** #endif /* CH_CFG_OPTIMIZE_SPEED == FALSE */
 484:../../../os/rt/include/chschd.h **** #ifdef __cplusplus
 485:../../../os/rt/include/chschd.h **** }
 486:../../../os/rt/include/chschd.h **** #endif
 487:../../../os/rt/include/chschd.h **** 
 488:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 489:../../../os/rt/include/chschd.h **** /* Module inline functions.                                                  */
 490:../../../os/rt/include/chschd.h **** /*===========================================================================*/
 491:../../../os/rt/include/chschd.h **** 
 492:../../../os/rt/include/chschd.h **** /**
 493:../../../os/rt/include/chschd.h ****  * @brief   Threads list initialization.
 494:../../../os/rt/include/chschd.h ****  *
 495:../../../os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 496:../../../os/rt/include/chschd.h ****  *
 497:../../../os/rt/include/chschd.h ****  * @notapi
 498:../../../os/rt/include/chschd.h ****  */
 499:../../../os/rt/include/chschd.h **** static inline void list_init(threads_list_t *tlp) {
 500:../../../os/rt/include/chschd.h **** 
 501:../../../os/rt/include/chschd.h ****   tlp->next = (thread_t *)tlp;
 502:../../../os/rt/include/chschd.h **** }
 503:../../../os/rt/include/chschd.h **** 
 504:../../../os/rt/include/chschd.h **** /**
 505:../../../os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads list is empty.
 506:../../../os/rt/include/chschd.h ****  *
 507:../../../os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 508:../../../os/rt/include/chschd.h ****  * @return              The status of the list.
 509:../../../os/rt/include/chschd.h ****  *
 510:../../../os/rt/include/chschd.h ****  * @notapi
 511:../../../os/rt/include/chschd.h ****  */
 512:../../../os/rt/include/chschd.h **** static inline bool list_isempty(threads_list_t *tlp) {
 513:../../../os/rt/include/chschd.h **** 
 514:../../../os/rt/include/chschd.h ****   return (bool)(tlp->next == (thread_t *)tlp);
 515:../../../os/rt/include/chschd.h **** }
 516:../../../os/rt/include/chschd.h **** 
 517:../../../os/rt/include/chschd.h **** /**
 518:../../../os/rt/include/chschd.h ****  * @brief   Evaluates to @p true if the specified threads list is not empty.
 519:../../../os/rt/include/chschd.h ****  *
 520:../../../os/rt/include/chschd.h ****  * @param[in] tlp       pointer to the threads list object
 521:../../../os/rt/include/chschd.h ****  * @return              The status of the list.
 522:../../../os/rt/include/chschd.h ****  *
 523:../../../os/rt/include/chschd.h ****  * @notapi
 524:../../../os/rt/include/chschd.h ****  */
 525:../../../os/rt/include/chschd.h **** static inline bool list_notempty(threads_list_t *tlp) {
 526:../../../os/rt/include/chschd.h **** 
 527:../../../os/rt/include/chschd.h ****   return (bool)(tlp->next != (thread_t *)tlp);
 528:../../../os/rt/include/chschd.h **** }
 529:../../../os/rt/include/chschd.h **** 
 530:../../../os/rt/include/chschd.h **** /**
 531:../../../os/rt/include/chschd.h ****  * @brief   Threads queue initialization.
 532:../../../os/rt/include/chschd.h ****  *
 533:../../../os/rt/include/chschd.h ****  * @param[in] tqp       pointer to the threads queue object
 534:../../../os/rt/include/chschd.h ****  *
 535:../../../os/rt/include/chschd.h ****  * @notapi
 536:../../../os/rt/include/chschd.h ****  */
 537:../../../os/rt/include/chschd.h **** static inline void queue_init(threads_queue_t *tqp) {
  72               		.loc 4 537 20 view .LVU9
  73               	.LBB274:
 538:../../../os/rt/include/chschd.h **** 
 539:../../../os/rt/include/chschd.h ****   tqp->next = (thread_t *)tqp;
  74               		.loc 4 539 3 view .LVU10
  75               		.loc 4 539 13 is_stmt 0 view .LVU11
  76 000e 9183      		std Z+1,r25
  77 0010 8083      		st Z,r24
 540:../../../os/rt/include/chschd.h ****   tqp->prev = (thread_t *)tqp;
  78               		.loc 4 540 3 is_stmt 1 view .LVU12
  79               		.loc 4 540 13 is_stmt 0 view .LVU13
  80 0012 9383      		std Z+3,r25
  81 0014 8283      		std Z+2,r24
  82               	.LVL2:
  83               		.loc 4 540 13 view .LVU14
  84               	.LBE274:
  85               	.LBE273:
  86               	.LBE275:
  87               	.LBE277:
  82:../../../os/hal/src/hal_buffers.c ****   ibqp->suspended = suspended;
  88               		.loc 1 82 3 is_stmt 1 view .LVU15
  89               		.loc 1 82 19 is_stmt 0 view .LVU16
  90 0016 6483      		std Z+4,r22
  83:../../../os/hal/src/hal_buffers.c ****   ibqp->bcounter  = 0;
  91               		.loc 1 83 3 is_stmt 1 view .LVU17
  92               		.loc 1 83 19 is_stmt 0 view .LVU18
  93 0018 1682      		std Z+6,__zero_reg__
  94 001a 1582      		std Z+5,__zero_reg__
  84:../../../os/hal/src/hal_buffers.c ****   ibqp->brdptr    = bp;
  95               		.loc 1 84 3 is_stmt 1 view .LVU19
  96               		.loc 1 84 19 is_stmt 0 view .LVU20
  97 001c 5287      		std Z+10,r21
  98 001e 4187      		std Z+9,r20
  85:../../../os/hal/src/hal_buffers.c ****   ibqp->bwrptr    = bp;
  99               		.loc 1 85 3 is_stmt 1 view .LVU21
 100               		.loc 1 85 19 is_stmt 0 view .LVU22
 101 0020 5087      		std Z+8,r21
 102 0022 4783      		std Z+7,r20
  86:../../../os/hal/src/hal_buffers.c ****   ibqp->btop      = bp + ((size + sizeof (size_t)) * n);
 103               		.loc 1 86 3 is_stmt 1 view .LVU23
 104               		.loc 1 86 33 is_stmt 0 view .LVU24
 105 0024 2E5F      		subi r18,-2
 106 0026 3F4F      		sbci r19,-1
 107               	.LVL3:
 108               		.loc 1 86 52 view .LVU25
 109 0028 209F      		mul r18,r16
 110 002a C001      		movw r24,r0
 111 002c 219F      		mul r18,r17
 112 002e 900D      		add r25,r0
 113 0030 309F      		mul r19,r16
 114 0032 900D      		add r25,r0
 115 0034 1124      		clr r1
 116               	.LVL4:
 117               		.loc 1 86 24 view .LVU26
 118 0036 840F      		add r24,r20
 119 0038 951F      		adc r25,r21
 120               		.loc 1 86 19 view .LVU27
 121 003a 9487      		std Z+12,r25
 122 003c 8387      		std Z+11,r24
  87:../../../os/hal/src/hal_buffers.c ****   ibqp->bsize     = size + sizeof (size_t);
 123               		.loc 1 87 3 is_stmt 1 view .LVU28
 124               		.loc 1 87 19 is_stmt 0 view .LVU29
 125 003e 3687      		std Z+14,r19
 126 0040 2587      		std Z+13,r18
  88:../../../os/hal/src/hal_buffers.c ****   ibqp->bn        = n;
 127               		.loc 1 88 3 is_stmt 1 view .LVU30
 128               		.loc 1 88 19 is_stmt 0 view .LVU31
 129 0042 108B      		std Z+16,r17
 130 0044 0787      		std Z+15,r16
  89:../../../os/hal/src/hal_buffers.c ****   ibqp->buffers   = bp;
 131               		.loc 1 89 3 is_stmt 1 view .LVU32
 132               		.loc 1 89 19 is_stmt 0 view .LVU33
 133 0046 528B      		std Z+18,r21
 134 0048 418B      		std Z+17,r20
  90:../../../os/hal/src/hal_buffers.c ****   ibqp->ptr       = NULL;
 135               		.loc 1 90 3 is_stmt 1 view .LVU34
 136               		.loc 1 90 19 is_stmt 0 view .LVU35
 137 004a 148A      		std Z+20,__zero_reg__
 138 004c 138A      		std Z+19,__zero_reg__
  91:../../../os/hal/src/hal_buffers.c ****   ibqp->top       = NULL;
 139               		.loc 1 91 3 is_stmt 1 view .LVU36
 140               		.loc 1 91 19 is_stmt 0 view .LVU37
 141 004e 168A      		std Z+22,__zero_reg__
 142 0050 158A      		std Z+21,__zero_reg__
  92:../../../os/hal/src/hal_buffers.c ****   ibqp->notify    = infy;
 143               		.loc 1 92 3 is_stmt 1 view .LVU38
 144               		.loc 1 92 19 is_stmt 0 view .LVU39
 145 0052 F08E      		std Z+24,r15
 146 0054 E78A      		std Z+23,r14
  93:../../../os/hal/src/hal_buffers.c ****   ibqp->link      = link;
 147               		.loc 1 93 3 is_stmt 1 view .LVU40
 148               		.loc 1 93 19 is_stmt 0 view .LVU41
 149 0056 D28E      		std Z+26,r13
 150 0058 C18E      		std Z+25,r12
 151               	/* epilogue start */
  94:../../../os/hal/src/hal_buffers.c **** }
 152               		.loc 1 94 1 view .LVU42
 153 005a 1F91      		pop r17
 154 005c 0F91      		pop r16
 155               	.LVL5:
 156               		.loc 1 94 1 view .LVU43
 157 005e FF90      		pop r15
 158 0060 EF90      		pop r14
 159               	.LVL6:
 160               		.loc 1 94 1 view .LVU44
 161 0062 DF90      		pop r13
 162 0064 CF90      		pop r12
 163               	.LVL7:
 164               		.loc 1 94 1 view .LVU45
 165 0066 0895      		ret
 166               		.cfi_endproc
 167               	.LFE173:
 169               		.section	.text.ibqResetI,"ax",@progbits
 170               	.global	ibqResetI
 172               	ibqResetI:
 173               	.LVL8:
 174               	.LFB174:
  95:../../../os/hal/src/hal_buffers.c **** 
  96:../../../os/hal/src/hal_buffers.c **** /**
  97:../../../os/hal/src/hal_buffers.c ****  * @brief   Resets an input buffers queue.
  98:../../../os/hal/src/hal_buffers.c ****  * @details All the data in the input buffers queue is erased and lost, any
  99:../../../os/hal/src/hal_buffers.c ****  *          waiting thread is resumed with status @p MSG_RESET.
 100:../../../os/hal/src/hal_buffers.c ****  * @note    A reset operation can be used by a low level driver in order to
 101:../../../os/hal/src/hal_buffers.c ****  *          obtain immediate attention from the high level layers.
 102:../../../os/hal/src/hal_buffers.c ****  *
 103:../../../os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 104:../../../os/hal/src/hal_buffers.c ****  *
 105:../../../os/hal/src/hal_buffers.c ****  * @iclass
 106:../../../os/hal/src/hal_buffers.c ****  */
 107:../../../os/hal/src/hal_buffers.c **** void ibqResetI(input_buffers_queue_t *ibqp) {
 175               		.loc 1 107 45 is_stmt 1 view -0
 176               		.cfi_startproc
 177               	/* prologue: function */
 178               	/* frame size = 0 */
 179               	/* stack size = 0 */
 180               	.L__stack_usage = 0
 181               		.loc 1 107 45 is_stmt 0 view .LVU47
 182 0000 FC01      		movw r30,r24
 108:../../../os/hal/src/hal_buffers.c **** 
 109:../../../os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 183               		.loc 1 109 23 is_stmt 1 view .LVU48
 110:../../../os/hal/src/hal_buffers.c **** 
 111:../../../os/hal/src/hal_buffers.c ****   ibqp->bcounter  = 0;
 184               		.loc 1 111 3 view .LVU49
 185               		.loc 1 111 19 is_stmt 0 view .LVU50
 186 0002 1682      		std Z+6,__zero_reg__
 187 0004 1582      		std Z+5,__zero_reg__
 112:../../../os/hal/src/hal_buffers.c ****   ibqp->brdptr    = ibqp->buffers;
 188               		.loc 1 112 3 is_stmt 1 view .LVU51
 189               		.loc 1 112 25 is_stmt 0 view .LVU52
 190 0006 8189      		ldd r24,Z+17
 191 0008 9289      		ldd r25,Z+18
 192               	.LVL9:
 193               		.loc 1 112 19 view .LVU53
 194 000a 9287      		std Z+10,r25
 195 000c 8187      		std Z+9,r24
 113:../../../os/hal/src/hal_buffers.c ****   ibqp->bwrptr    = ibqp->buffers;
 196               		.loc 1 113 3 is_stmt 1 view .LVU54
 197               		.loc 1 113 19 is_stmt 0 view .LVU55
 198 000e 9087      		std Z+8,r25
 199 0010 8783      		std Z+7,r24
 114:../../../os/hal/src/hal_buffers.c ****   ibqp->ptr       = NULL;
 200               		.loc 1 114 3 is_stmt 1 view .LVU56
 201               		.loc 1 114 19 is_stmt 0 view .LVU57
 202 0012 148A      		std Z+20,__zero_reg__
 203 0014 138A      		std Z+19,__zero_reg__
 115:../../../os/hal/src/hal_buffers.c ****   ibqp->top       = NULL;
 204               		.loc 1 115 3 is_stmt 1 view .LVU58
 205               		.loc 1 115 19 is_stmt 0 view .LVU59
 206 0016 168A      		std Z+22,__zero_reg__
 207 0018 158A      		std Z+21,__zero_reg__
 116:../../../os/hal/src/hal_buffers.c ****   osalThreadDequeueAllI(&ibqp->waiting, MSG_RESET);
 208               		.loc 1 116 3 is_stmt 1 view .LVU60
 209               	.LVL10:
 210               	.LBB278:
 211               	.LBI278:
 803:../../../os/hal/osal/rt/osal.h **** }
 804:../../../os/hal/osal/rt/osal.h **** 
 805:../../../os/hal/osal/rt/osal.h **** /**
 806:../../../os/hal/osal/rt/osal.h ****  * @brief   Enqueues the caller thread.
 807:../../../os/hal/osal/rt/osal.h ****  * @details The caller thread is enqueued and put to sleep until it is
 808:../../../os/hal/osal/rt/osal.h ****  *          dequeued or the specified timeouts expires.
 809:../../../os/hal/osal/rt/osal.h ****  *
 810:../../../os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 811:../../../os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 812:../../../os/hal/osal/rt/osal.h ****  *                      handled as follow:
 813:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 814:../../../os/hal/osal/rt/osal.h ****  *                        state.
 815:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 816:../../../os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 817:../../../os/hal/osal/rt/osal.h ****  *                        occurred.
 818:../../../os/hal/osal/rt/osal.h ****  *                      .
 819:../../../os/hal/osal/rt/osal.h ****  * @return              The message from @p osalQueueWakeupOneI() or
 820:../../../os/hal/osal/rt/osal.h ****  *                      @p osalQueueWakeupAllI() functions.
 821:../../../os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the thread has not been dequeued within the
 822:../../../os/hal/osal/rt/osal.h ****  *                      specified timeout or if the function has been
 823:../../../os/hal/osal/rt/osal.h ****  *                      invoked with @p TIME_IMMEDIATE as timeout
 824:../../../os/hal/osal/rt/osal.h ****  *                      specification.
 825:../../../os/hal/osal/rt/osal.h ****  *
 826:../../../os/hal/osal/rt/osal.h ****  * @sclass
 827:../../../os/hal/osal/rt/osal.h ****  */
 828:../../../os/hal/osal/rt/osal.h **** static inline msg_t osalThreadEnqueueTimeoutS(threads_queue_t *tqp,
 829:../../../os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 830:../../../os/hal/osal/rt/osal.h **** 
 831:../../../os/hal/osal/rt/osal.h ****   return chThdEnqueueTimeoutS(tqp, timeout);
 832:../../../os/hal/osal/rt/osal.h **** }
 833:../../../os/hal/osal/rt/osal.h **** 
 834:../../../os/hal/osal/rt/osal.h **** /**
 835:../../../os/hal/osal/rt/osal.h ****  * @brief   Dequeues and wakes up one thread from the queue, if any.
 836:../../../os/hal/osal/rt/osal.h ****  *
 837:../../../os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 838:../../../os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 839:../../../os/hal/osal/rt/osal.h ****  *
 840:../../../os/hal/osal/rt/osal.h ****  * @iclass
 841:../../../os/hal/osal/rt/osal.h ****  */
 842:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 843:../../../os/hal/osal/rt/osal.h **** 
 844:../../../os/hal/osal/rt/osal.h ****   chThdDequeueNextI(tqp, msg);
 845:../../../os/hal/osal/rt/osal.h **** }
 846:../../../os/hal/osal/rt/osal.h **** 
 847:../../../os/hal/osal/rt/osal.h **** /**
 848:../../../os/hal/osal/rt/osal.h ****  * @brief   Dequeues and wakes up all threads from the queue.
 849:../../../os/hal/osal/rt/osal.h ****  *
 850:../../../os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 851:../../../os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 852:../../../os/hal/osal/rt/osal.h ****  *
 853:../../../os/hal/osal/rt/osal.h ****  * @iclass
 854:../../../os/hal/osal/rt/osal.h ****  */
 855:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadDequeueAllI(threads_queue_t *tqp, msg_t msg) {
 212               		.loc 2 855 20 view .LVU61
 213               	.LBB279:
 856:../../../os/hal/osal/rt/osal.h **** 
 857:../../../os/hal/osal/rt/osal.h ****   chThdDequeueAllI(tqp, msg);
 214               		.loc 2 857 3 view .LVU62
 215 001a 6EEF      		ldi r22,lo8(-2)
 216 001c 7FEF      		ldi r23,lo8(-1)
 217 001e CF01      		movw r24,r30
 218 0020 0C94 0000 		jmp chThdDequeueAllI
 219               	.LVL11:
 220               		.loc 2 857 3 is_stmt 0 view .LVU63
 221               	.LBE279:
 222               	.LBE278:
 223               		.cfi_endproc
 224               	.LFE174:
 226               		.section	.text.ibqGetEmptyBufferI,"ax",@progbits
 227               	.global	ibqGetEmptyBufferI
 229               	ibqGetEmptyBufferI:
 230               	.LVL12:
 231               	.LFB175:
 117:../../../os/hal/src/hal_buffers.c **** }
 118:../../../os/hal/src/hal_buffers.c **** 
 119:../../../os/hal/src/hal_buffers.c **** /**
 120:../../../os/hal/src/hal_buffers.c ****  * @brief   Gets the next empty buffer from the queue.
 121:../../../os/hal/src/hal_buffers.c ****  * @note    The function always returns the same buffer if called repeatedly.
 122:../../../os/hal/src/hal_buffers.c ****  *
 123:../../../os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 124:../../../os/hal/src/hal_buffers.c ****  * @return              A pointer to the next buffer to be filled.
 125:../../../os/hal/src/hal_buffers.c ****  * @retval NULL         if the queue is full.
 126:../../../os/hal/src/hal_buffers.c ****  *
 127:../../../os/hal/src/hal_buffers.c ****  * @iclass
 128:../../../os/hal/src/hal_buffers.c ****  */
 129:../../../os/hal/src/hal_buffers.c **** uint8_t *ibqGetEmptyBufferI(input_buffers_queue_t *ibqp) {
 232               		.loc 1 129 58 is_stmt 1 view -0
 233               		.cfi_startproc
 234               	/* prologue: function */
 235               	/* frame size = 0 */
 236               	/* stack size = 0 */
 237               	.L__stack_usage = 0
 238               		.loc 1 129 58 is_stmt 0 view .LVU65
 239 0000 FC01      		movw r30,r24
 130:../../../os/hal/src/hal_buffers.c **** 
 131:../../../os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 240               		.loc 1 131 23 is_stmt 1 view .LVU66
 132:../../../os/hal/src/hal_buffers.c **** 
 133:../../../os/hal/src/hal_buffers.c ****   if (ibqIsFullI(ibqp)) {
 241               		.loc 1 133 3 view .LVU67
 242               		.loc 1 133 7 is_stmt 0 view .LVU68
 243 0002 2781      		ldd r18,Z+7
 244 0004 3085      		ldd r19,Z+8
 245 0006 8185      		ldd r24,Z+9
 246 0008 9285      		ldd r25,Z+10
 247               	.LVL13:
 248               		.loc 1 133 7 view .LVU69
 249 000a 2817      		cp r18,r24
 250 000c 3907      		cpc r19,r25
 251 000e 01F0      		breq .L10
 252               	.L5:
 134:../../../os/hal/src/hal_buffers.c ****     return NULL;
 135:../../../os/hal/src/hal_buffers.c ****   }
 136:../../../os/hal/src/hal_buffers.c **** 
 137:../../../os/hal/src/hal_buffers.c ****   return ibqp->bwrptr + sizeof (size_t);
 253               		.loc 1 137 3 is_stmt 1 view .LVU70
 254               		.loc 1 137 23 is_stmt 0 view .LVU71
 255 0010 C901      		movw r24,r18
 256 0012 0296      		adiw r24,2
 257               	/* epilogue start */
 138:../../../os/hal/src/hal_buffers.c **** }
 258               		.loc 1 138 1 view .LVU72
 259 0014 0895      		ret
 260               	.L10:
 133:../../../os/hal/src/hal_buffers.c ****     return NULL;
 261               		.loc 1 133 7 discriminator 1 view .LVU73
 262 0016 8581      		ldd r24,Z+5
 263 0018 9681      		ldd r25,Z+6
 264 001a 892B      		or r24,r25
 265 001c 01F0      		breq .L5
 134:../../../os/hal/src/hal_buffers.c ****     return NULL;
 266               		.loc 1 134 12 view .LVU74
 267 001e 90E0      		ldi r25,0
 268 0020 80E0      		ldi r24,0
 269 0022 0895      		ret
 270               		.cfi_endproc
 271               	.LFE175:
 273               		.section	.text.ibqPostFullBufferI,"ax",@progbits
 274               	.global	ibqPostFullBufferI
 276               	ibqPostFullBufferI:
 277               	.LVL14:
 278               	.LFB176:
 139:../../../os/hal/src/hal_buffers.c **** 
 140:../../../os/hal/src/hal_buffers.c **** /**
 141:../../../os/hal/src/hal_buffers.c ****  * @brief   Posts a new filled buffer to the queue.
 142:../../../os/hal/src/hal_buffers.c ****  *
 143:../../../os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 144:../../../os/hal/src/hal_buffers.c ****  * @param[in] size      used size of the buffer, cannot be zero
 145:../../../os/hal/src/hal_buffers.c ****  *
 146:../../../os/hal/src/hal_buffers.c ****  * @iclass
 147:../../../os/hal/src/hal_buffers.c ****  */
 148:../../../os/hal/src/hal_buffers.c **** void ibqPostFullBufferI(input_buffers_queue_t *ibqp, size_t size) {
 279               		.loc 1 148 67 is_stmt 1 view -0
 280               		.cfi_startproc
 281               	/* prologue: function */
 282               	/* frame size = 0 */
 283               	/* stack size = 0 */
 284               	.L__stack_usage = 0
 285               		.loc 1 148 67 is_stmt 0 view .LVU76
 286 0000 FC01      		movw r30,r24
 149:../../../os/hal/src/hal_buffers.c **** 
 150:../../../os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 287               		.loc 1 150 23 is_stmt 1 view .LVU77
 151:../../../os/hal/src/hal_buffers.c **** 
 152:../../../os/hal/src/hal_buffers.c ****   osalDbgCheck((size > 0U) && (size <= (ibqp->bsize - sizeof (size_t))));
 288               		.loc 1 152 3 view .LVU78
 289               		.loc 1 152 3 view .LVU79
 153:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!ibqIsFullI(ibqp), "buffers queue full");
 290               		.loc 1 153 3 view .LVU80
 291               		.loc 1 153 3 view .LVU81
 154:../../../os/hal/src/hal_buffers.c **** 
 155:../../../os/hal/src/hal_buffers.c ****   /* Writing size field in the buffer.*/
 156:../../../os/hal/src/hal_buffers.c ****   *((size_t *)ibqp->bwrptr) = size;
 292               		.loc 1 156 3 view .LVU82
 293               		.loc 1 156 19 is_stmt 0 view .LVU83
 294 0002 A781      		ldd r26,Z+7
 295 0004 B085      		ldd r27,Z+8
 296               		.loc 1 156 29 view .LVU84
 297 0006 1196      		adiw r26,1
 298 0008 7C93      		st X,r23
 299 000a 6E93      		st -X,r22
 157:../../../os/hal/src/hal_buffers.c **** 
 158:../../../os/hal/src/hal_buffers.c ****   /* Posting the buffer in the queue.*/
 159:../../../os/hal/src/hal_buffers.c ****   ibqp->bcounter++;
 300               		.loc 1 159 3 is_stmt 1 view .LVU85
 301               		.loc 1 159 7 is_stmt 0 view .LVU86
 302 000c 8581      		ldd r24,Z+5
 303 000e 9681      		ldd r25,Z+6
 304               	.LVL15:
 305               		.loc 1 159 17 view .LVU87
 306 0010 0196      		adiw r24,1
 307 0012 9683      		std Z+6,r25
 308 0014 8583      		std Z+5,r24
 160:../../../os/hal/src/hal_buffers.c ****   ibqp->bwrptr += ibqp->bsize;
 309               		.loc 1 160 3 is_stmt 1 view .LVU88
 310               		.loc 1 160 16 is_stmt 0 view .LVU89
 311 0016 8585      		ldd r24,Z+13
 312 0018 9685      		ldd r25,Z+14
 313 001a A80F      		add r26,r24
 314 001c B91F      		adc r27,r25
 315 001e B087      		std Z+8,r27
 316 0020 A783      		std Z+7,r26
 161:../../../os/hal/src/hal_buffers.c ****   if (ibqp->bwrptr >= ibqp->btop) {
 317               		.loc 1 161 3 is_stmt 1 view .LVU90
 318               		.loc 1 161 6 is_stmt 0 view .LVU91
 319 0022 8385      		ldd r24,Z+11
 320 0024 9485      		ldd r25,Z+12
 321 0026 A817      		cp r26,r24
 322 0028 B907      		cpc r27,r25
 323 002a 00F0      		brlo .L12
 162:../../../os/hal/src/hal_buffers.c ****     ibqp->bwrptr = ibqp->buffers;
 324               		.loc 1 162 5 is_stmt 1 view .LVU92
 325               		.loc 1 162 18 is_stmt 0 view .LVU93
 326 002c 8189      		ldd r24,Z+17
 327 002e 9289      		ldd r25,Z+18
 328 0030 9087      		std Z+8,r25
 329 0032 8783      		std Z+7,r24
 330               	.L12:
 163:../../../os/hal/src/hal_buffers.c ****   }
 164:../../../os/hal/src/hal_buffers.c **** 
 165:../../../os/hal/src/hal_buffers.c ****   /* Waking up one waiting thread, if any.*/
 166:../../../os/hal/src/hal_buffers.c ****   osalThreadDequeueNextI(&ibqp->waiting, MSG_OK);
 331               		.loc 1 166 3 is_stmt 1 view .LVU94
 332               	.LVL16:
 333               	.LBB280:
 334               	.LBI280:
 842:../../../os/hal/osal/rt/osal.h **** 
 335               		.loc 2 842 20 view .LVU95
 336               	.LBB281:
 844:../../../os/hal/osal/rt/osal.h **** }
 337               		.loc 2 844 3 view .LVU96
 338 0034 70E0      		ldi r23,0
 339 0036 60E0      		ldi r22,0
 340               	.LVL17:
 844:../../../os/hal/osal/rt/osal.h **** }
 341               		.loc 2 844 3 is_stmt 0 view .LVU97
 342 0038 CF01      		movw r24,r30
 343 003a 0C94 0000 		jmp chThdDequeueNextI
 344               	.LVL18:
 844:../../../os/hal/osal/rt/osal.h **** }
 345               		.loc 2 844 3 view .LVU98
 346               	.LBE281:
 347               	.LBE280:
 348               		.cfi_endproc
 349               	.LFE176:
 351               		.section	.text.ibqGetFullBufferTimeoutS,"ax",@progbits
 352               	.global	ibqGetFullBufferTimeoutS
 354               	ibqGetFullBufferTimeoutS:
 355               	.LVL19:
 356               	.LFB178:
 167:../../../os/hal/src/hal_buffers.c **** }
 168:../../../os/hal/src/hal_buffers.c **** 
 169:../../../os/hal/src/hal_buffers.c **** /**
 170:../../../os/hal/src/hal_buffers.c ****  * @brief   Gets the next filled buffer from the queue.
 171:../../../os/hal/src/hal_buffers.c ****  * @note    The function always acquires the same buffer if called repeatedly.
 172:../../../os/hal/src/hal_buffers.c ****  * @post    After calling the function the fields @p ptr and @p top are set
 173:../../../os/hal/src/hal_buffers.c ****  *          at beginning and end of the buffer data or @p NULL if the queue
 174:../../../os/hal/src/hal_buffers.c ****  *          is empty.
 175:../../../os/hal/src/hal_buffers.c ****  *
 176:../../../os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 177:../../../os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 178:../../../os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 179:../../../os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 180:../../../os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 181:../../../os/hal/src/hal_buffers.c ****  *                      .
 182:../../../os/hal/src/hal_buffers.c ****  * @return              The operation status.
 183:../../../os/hal/src/hal_buffers.c ****  * @retval MSG_OK       if a buffer has been acquired.
 184:../../../os/hal/src/hal_buffers.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 185:../../../os/hal/src/hal_buffers.c ****  * @retval MSG_RESET    if the queue has been reset or has been put in
 186:../../../os/hal/src/hal_buffers.c ****  *                      suspended state.
 187:../../../os/hal/src/hal_buffers.c ****  *
 188:../../../os/hal/src/hal_buffers.c ****  * @api
 189:../../../os/hal/src/hal_buffers.c ****  */
 190:../../../os/hal/src/hal_buffers.c **** msg_t ibqGetFullBufferTimeout(input_buffers_queue_t *ibqp,
 191:../../../os/hal/src/hal_buffers.c ****                               sysinterval_t timeout) {
 192:../../../os/hal/src/hal_buffers.c ****   msg_t msg;
 193:../../../os/hal/src/hal_buffers.c **** 
 194:../../../os/hal/src/hal_buffers.c ****   osalSysLock();
 195:../../../os/hal/src/hal_buffers.c ****   msg = ibqGetFullBufferTimeoutS(ibqp, timeout);
 196:../../../os/hal/src/hal_buffers.c ****   osalSysUnlock();
 197:../../../os/hal/src/hal_buffers.c **** 
 198:../../../os/hal/src/hal_buffers.c ****   return msg;
 199:../../../os/hal/src/hal_buffers.c **** }
 200:../../../os/hal/src/hal_buffers.c **** 
 201:../../../os/hal/src/hal_buffers.c ****   /**
 202:../../../os/hal/src/hal_buffers.c ****    * @brief   Gets the next filled buffer from the queue.
 203:../../../os/hal/src/hal_buffers.c ****    * @note    The function always acquires the same buffer if called repeatedly.
 204:../../../os/hal/src/hal_buffers.c ****    * @post    After calling the function the fields @p ptr and @p top are set
 205:../../../os/hal/src/hal_buffers.c ****    *          at beginning and end of the buffer data or @p NULL if the queue
 206:../../../os/hal/src/hal_buffers.c ****    *          is empty.
 207:../../../os/hal/src/hal_buffers.c ****    *
 208:../../../os/hal/src/hal_buffers.c ****    * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 209:../../../os/hal/src/hal_buffers.c ****    * @param[in] timeout   the number of ticks before the operation timeouts,
 210:../../../os/hal/src/hal_buffers.c ****    *                      the following special values are allowed:
 211:../../../os/hal/src/hal_buffers.c ****    *                      - @a TIME_IMMEDIATE immediate timeout.
 212:../../../os/hal/src/hal_buffers.c ****    *                      - @a TIME_INFINITE no timeout.
 213:../../../os/hal/src/hal_buffers.c ****    *                      .
 214:../../../os/hal/src/hal_buffers.c ****    * @return              The operation status.
 215:../../../os/hal/src/hal_buffers.c ****    * @retval MSG_OK       if a buffer has been acquired.
 216:../../../os/hal/src/hal_buffers.c ****    * @retval MSG_TIMEOUT  if the specified time expired.
 217:../../../os/hal/src/hal_buffers.c ****    * @retval MSG_RESET    if the queue has been reset or has been put in
 218:../../../os/hal/src/hal_buffers.c ****    *                      suspended state.
 219:../../../os/hal/src/hal_buffers.c ****    *
 220:../../../os/hal/src/hal_buffers.c ****    * @sclass
 221:../../../os/hal/src/hal_buffers.c ****    */
 222:../../../os/hal/src/hal_buffers.c ****   msg_t ibqGetFullBufferTimeoutS(input_buffers_queue_t *ibqp,
 223:../../../os/hal/src/hal_buffers.c ****                                  sysinterval_t timeout) {
 357               		.loc 1 223 57 is_stmt 1 view -0
 358               		.cfi_startproc
 359               		.loc 1 223 57 is_stmt 0 view .LVU100
 360 0000 0F93      		push r16
 361               	.LCFI6:
 362               		.cfi_def_cfa_offset 3
 363               		.cfi_offset 16, -2
 364 0002 1F93      		push r17
 365               	.LCFI7:
 366               		.cfi_def_cfa_offset 4
 367               		.cfi_offset 17, -3
 368 0004 CF93      		push r28
 369               	.LCFI8:
 370               		.cfi_def_cfa_offset 5
 371               		.cfi_offset 28, -4
 372 0006 DF93      		push r29
 373               	.LCFI9:
 374               		.cfi_def_cfa_offset 6
 375               		.cfi_offset 29, -5
 376               	/* prologue: function */
 377               	/* frame size = 0 */
 378               	/* stack size = 4 */
 379               	.L__stack_usage = 4
 380 0008 EC01      		movw r28,r24
 381 000a 8B01      		movw r16,r22
 224:../../../os/hal/src/hal_buffers.c **** 
 225:../../../os/hal/src/hal_buffers.c ****   osalDbgCheckClassS();
 382               		.loc 1 225 23 is_stmt 1 view .LVU101
 226:../../../os/hal/src/hal_buffers.c **** 
 227:../../../os/hal/src/hal_buffers.c ****   while (ibqIsEmptyI(ibqp)) {
 383               		.loc 1 227 3 view .LVU102
 384               		.loc 1 227 9 is_stmt 0 view .LVU103
 385 000c 00C0      		rjmp .L14
 386               	.LVL20:
 387               	.L16:
 388               	.LBB290:
 228:../../../os/hal/src/hal_buffers.c ****     if (ibqp->suspended) {
 389               		.loc 1 228 5 is_stmt 1 view .LVU104
 390               		.loc 1 228 8 is_stmt 0 view .LVU105
 391 000e 8C81      		ldd r24,Y+4
 392 0010 8111      		cpse r24,__zero_reg__
 393 0012 00C0      		rjmp .L17
 229:../../../os/hal/src/hal_buffers.c ****       return MSG_RESET;
 230:../../../os/hal/src/hal_buffers.c ****     }
 231:../../../os/hal/src/hal_buffers.c ****     msg_t msg = osalThreadEnqueueTimeoutS(&ibqp->waiting, timeout);
 394               		.loc 1 231 5 is_stmt 1 view .LVU106
 395               	.LVL21:
 396               	.LBB291:
 397               	.LBI291:
 828:../../../os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 398               		.loc 2 828 21 view .LVU107
 399               	.LBB292:
 831:../../../os/hal/osal/rt/osal.h **** }
 400               		.loc 2 831 3 view .LVU108
 831:../../../os/hal/osal/rt/osal.h **** }
 401               		.loc 2 831 10 is_stmt 0 view .LVU109
 402 0014 B801      		movw r22,r16
 403 0016 CE01      		movw r24,r28
 404 0018 0E94 0000 		call chThdEnqueueTimeoutS
 405               	.LVL22:
 831:../../../os/hal/osal/rt/osal.h **** }
 406               		.loc 2 831 10 view .LVU110
 407               	.LBE292:
 408               	.LBE291:
 232:../../../os/hal/src/hal_buffers.c ****     if (msg < MSG_OK) {
 409               		.loc 1 232 5 is_stmt 1 view .LVU111
 410               		.loc 1 232 8 is_stmt 0 view .LVU112
 411 001c 97FD      		sbrc r25,7
 412 001e 00C0      		rjmp .L13
 413               	.LVL23:
 414               	.L14:
 415               		.loc 1 232 8 view .LVU113
 416               	.LBE290:
 227:../../../os/hal/src/hal_buffers.c ****     if (ibqp->suspended) {
 417               		.loc 1 227 10 view .LVU114
 418 0020 8D81      		ldd r24,Y+5
 419 0022 9E81      		ldd r25,Y+6
 227:../../../os/hal/src/hal_buffers.c ****     if (ibqp->suspended) {
 420               		.loc 1 227 9 view .LVU115
 421 0024 892B      		or r24,r25
 422 0026 01F0      		breq .L16
 423               	.LVL24:
 424               	.LBB293:
 425               	.LBB294:
 233:../../../os/hal/src/hal_buffers.c ****        return msg;
 234:../../../os/hal/src/hal_buffers.c ****     }
 235:../../../os/hal/src/hal_buffers.c ****   }
 236:../../../os/hal/src/hal_buffers.c **** 
 237:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!ibqIsEmptyI(ibqp), "still empty");
 426               		.loc 1 237 3 is_stmt 1 view .LVU116
 427               		.loc 1 237 3 view .LVU117
 238:../../../os/hal/src/hal_buffers.c **** 
 239:../../../os/hal/src/hal_buffers.c ****   /* Setting up the "current" buffer and its boundary.*/
 240:../../../os/hal/src/hal_buffers.c ****   ibqp->ptr = ibqp->brdptr + sizeof (size_t);
 428               		.loc 1 240 3 view .LVU118
 429               		.loc 1 240 19 is_stmt 0 view .LVU119
 430 0028 E985      		ldd r30,Y+9
 431 002a FA85      		ldd r31,Y+10
 432               		.loc 1 240 28 view .LVU120
 433 002c CF01      		movw r24,r30
 434 002e 0296      		adiw r24,2
 435               		.loc 1 240 13 view .LVU121
 436 0030 9C8B      		std Y+20,r25
 437 0032 8B8B      		std Y+19,r24
 241:../../../os/hal/src/hal_buffers.c ****   ibqp->top = ibqp->ptr + *((size_t *)ibqp->brdptr);
 438               		.loc 1 241 3 is_stmt 1 view .LVU122
 439               		.loc 1 241 25 is_stmt 0 view .LVU123
 440 0034 2081      		ld r18,Z
 441 0036 3181      		ldd r19,Z+1
 442 0038 820F      		add r24,r18
 443 003a 931F      		adc r25,r19
 444               		.loc 1 241 13 view .LVU124
 445 003c 9E8B      		std Y+22,r25
 446 003e 8D8B      		std Y+21,r24
 242:../../../os/hal/src/hal_buffers.c **** 
 243:../../../os/hal/src/hal_buffers.c ****   return MSG_OK;
 447               		.loc 1 243 3 is_stmt 1 view .LVU125
 448               	.LVL25:
 241:../../../os/hal/src/hal_buffers.c ****   ibqp->top = ibqp->ptr + *((size_t *)ibqp->brdptr);
 449               		.loc 1 241 13 is_stmt 0 view .LVU126
 450 0040 90E0      		ldi r25,0
 451 0042 80E0      		ldi r24,0
 452               	.L13:
 453               	/* epilogue start */
 241:../../../os/hal/src/hal_buffers.c ****   ibqp->top = ibqp->ptr + *((size_t *)ibqp->brdptr);
 454               		.loc 1 241 13 view .LVU127
 455               	.LBE294:
 456               	.LBE293:
 244:../../../os/hal/src/hal_buffers.c **** }
 457               		.loc 1 244 1 view .LVU128
 458 0044 DF91      		pop r29
 459 0046 CF91      		pop r28
 460               	.LVL26:
 461               		.loc 1 244 1 view .LVU129
 462 0048 1F91      		pop r17
 463 004a 0F91      		pop r16
 464               	.LVL27:
 465               		.loc 1 244 1 view .LVU130
 466 004c 0895      		ret
 467               	.LVL28:
 468               	.L17:
 469               	.LBB295:
 229:../../../os/hal/src/hal_buffers.c ****     }
 470               		.loc 1 229 14 view .LVU131
 471 004e 8EEF      		ldi r24,lo8(-2)
 472 0050 9FEF      		ldi r25,lo8(-1)
 473               	/* epilogue start */
 474               	.LBE295:
 475               		.loc 1 244 1 view .LVU132
 476 0052 DF91      		pop r29
 477 0054 CF91      		pop r28
 478               	.LVL29:
 479               		.loc 1 244 1 view .LVU133
 480 0056 1F91      		pop r17
 481 0058 0F91      		pop r16
 482               	.LVL30:
 483               		.loc 1 244 1 view .LVU134
 484 005a 0895      		ret
 485               		.cfi_endproc
 486               	.LFE178:
 488               		.section	.text.ibqGetFullBufferTimeout,"ax",@progbits
 489               	.global	ibqGetFullBufferTimeout
 491               	ibqGetFullBufferTimeout:
 492               	.LVL31:
 493               	.LFB177:
 191:../../../os/hal/src/hal_buffers.c ****   msg_t msg;
 494               		.loc 1 191 54 is_stmt 1 view -0
 495               		.cfi_startproc
 496               	/* prologue: function */
 497               	/* frame size = 0 */
 498               	/* stack size = 0 */
 499               	.L__stack_usage = 0
 192:../../../os/hal/src/hal_buffers.c **** 
 500               		.loc 1 192 3 view .LVU136
 194:../../../os/hal/src/hal_buffers.c ****   msg = ibqGetFullBufferTimeoutS(ibqp, timeout);
 501               		.loc 1 194 3 view .LVU137
 502               	.LBB296:
 503               	.LBI296:
 509:../../../os/hal/osal/rt/osal.h **** 
 504               		.loc 2 509 20 view .LVU138
 505               	.LBE296:
 511:../../../os/hal/osal/rt/osal.h **** }
 506               		.loc 2 511 3 view .LVU139
 507               	.LBB301:
 508               	.LBB297:
 509               	.LBI297:
 510               		.file 5 "../../../os/rt/include/chsys.h"
   1:../../../os/rt/include/chsys.h **** /*
   2:../../../os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/rt/include/chsys.h **** 
   4:../../../os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:../../../os/rt/include/chsys.h **** 
   6:../../../os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:../../../os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/rt/include/chsys.h ****     (at your option) any later version.
  10:../../../os/rt/include/chsys.h **** 
  11:../../../os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:../../../os/rt/include/chsys.h **** 
  16:../../../os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/rt/include/chsys.h **** */
  19:../../../os/rt/include/chsys.h **** 
  20:../../../os/rt/include/chsys.h **** /**
  21:../../../os/rt/include/chsys.h ****  * @file    chsys.h
  22:../../../os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:../../../os/rt/include/chsys.h ****  *
  24:../../../os/rt/include/chsys.h ****  * @addtogroup system
  25:../../../os/rt/include/chsys.h ****  * @{
  26:../../../os/rt/include/chsys.h ****  */
  27:../../../os/rt/include/chsys.h **** 
  28:../../../os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:../../../os/rt/include/chsys.h **** #define CHSYS_H
  30:../../../os/rt/include/chsys.h **** 
  31:../../../os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:../../../os/rt/include/chsys.h **** 
  33:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  34:../../../os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  36:../../../os/rt/include/chsys.h **** 
  37:../../../os/rt/include/chsys.h **** /**
  38:../../../os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:../../../os/rt/include/chsys.h ****  * @{
  40:../../../os/rt/include/chsys.h ****  */
  41:../../../os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:../../../os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:../../../os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:../../../os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:../../../os/rt/include/chsys.h **** /** @} */
  46:../../../os/rt/include/chsys.h **** 
  47:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  48:../../../os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  50:../../../os/rt/include/chsys.h **** 
  51:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  52:../../../os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  54:../../../os/rt/include/chsys.h **** 
  55:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  56:../../../os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  58:../../../os/rt/include/chsys.h **** 
  59:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  60:../../../os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:../../../os/rt/include/chsys.h **** /*===========================================================================*/
  62:../../../os/rt/include/chsys.h **** 
  63:../../../os/rt/include/chsys.h **** /**
  64:../../../os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:../../../os/rt/include/chsys.h ****  */
  66:../../../os/rt/include/chsys.h **** /**
  67:../../../os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:../../../os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:../../../os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:../../../os/rt/include/chsys.h ****  *
  71:../../../os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:../../../os/rt/include/chsys.h ****  * @return              Priority range result.
  73:../../../os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:../../../os/rt/include/chsys.h ****  *                      does not support priorities.
  75:../../../os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:../../../os/rt/include/chsys.h ****  */
  77:../../../os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:../../../os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:../../../os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:../../../os/rt/include/chsys.h **** #else
  81:../../../os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:../../../os/rt/include/chsys.h **** #endif
  83:../../../os/rt/include/chsys.h **** 
  84:../../../os/rt/include/chsys.h **** /**
  85:../../../os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:../../../os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:../../../os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:../../../os/rt/include/chsys.h ****  *
  89:../../../os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:../../../os/rt/include/chsys.h ****  * @return              Priority range result.
  91:../../../os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:../../../os/rt/include/chsys.h ****  *                      does not support priorities.
  93:../../../os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:../../../os/rt/include/chsys.h ****  */
  95:../../../os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:../../../os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:../../../os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:../../../os/rt/include/chsys.h **** #else
  99:../../../os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:../../../os/rt/include/chsys.h **** #endif
 101:../../../os/rt/include/chsys.h **** 
 102:../../../os/rt/include/chsys.h **** /**
 103:../../../os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:../../../os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:../../../os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:../../../os/rt/include/chsys.h ****  *
 107:../../../os/rt/include/chsys.h ****  * @special
 108:../../../os/rt/include/chsys.h ****  */
 109:../../../os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:../../../os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:../../../os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:../../../os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:../../../os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:../../../os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:../../../os/rt/include/chsys.h **** 
 116:../../../os/rt/include/chsys.h **** /**
 117:../../../os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:../../../os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:../../../os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:../../../os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:../../../os/rt/include/chsys.h ****  *
 122:../../../os/rt/include/chsys.h ****  * @special
 123:../../../os/rt/include/chsys.h ****  */
 124:../../../os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:../../../os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:../../../os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:../../../os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:../../../os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:../../../os/rt/include/chsys.h **** 
 130:../../../os/rt/include/chsys.h **** /**
 131:../../../os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:../../../os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:../../../os/rt/include/chsys.h ****  *          port implementation.
 134:../../../os/rt/include/chsys.h ****  *
 135:../../../os/rt/include/chsys.h ****  * @special
 136:../../../os/rt/include/chsys.h ****  */
 137:../../../os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:../../../os/rt/include/chsys.h **** /** @} */
 139:../../../os/rt/include/chsys.h **** 
 140:../../../os/rt/include/chsys.h **** /**
 141:../../../os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:../../../os/rt/include/chsys.h ****  */
 143:../../../os/rt/include/chsys.h **** /**
 144:../../../os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:../../../os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:../../../os/rt/include/chsys.h ****  *          port implementation.
 147:../../../os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:../../../os/rt/include/chsys.h ****  *
 149:../../../os/rt/include/chsys.h ****  * @special
 150:../../../os/rt/include/chsys.h ****  */
 151:../../../os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:../../../os/rt/include/chsys.h **** /** @} */
 153:../../../os/rt/include/chsys.h **** 
 154:../../../os/rt/include/chsys.h **** /**
 155:../../../os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:../../../os/rt/include/chsys.h ****  * @{
 157:../../../os/rt/include/chsys.h ****  */
 158:../../../os/rt/include/chsys.h **** /**
 159:../../../os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:../../../os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:../../../os/rt/include/chsys.h ****  *
 163:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:../../../os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:../../../os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:../../../os/rt/include/chsys.h ****  *
 167:../../../os/rt/include/chsys.h ****  * @api
 168:../../../os/rt/include/chsys.h ****  */
 169:../../../os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:../../../os/rt/include/chsys.h **** 
 171:../../../os/rt/include/chsys.h **** /**
 172:../../../os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:../../../os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:../../../os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:../../../os/rt/include/chsys.h ****  *
 177:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:../../../os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:../../../os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:../../../os/rt/include/chsys.h ****  *
 181:../../../os/rt/include/chsys.h ****  * @api
 182:../../../os/rt/include/chsys.h ****  */
 183:../../../os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:../../../os/rt/include/chsys.h **** 
 185:../../../os/rt/include/chsys.h **** /**
 186:../../../os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:../../../os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:../../../os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:../../../os/rt/include/chsys.h ****  *
 191:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:../../../os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:../../../os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:../../../os/rt/include/chsys.h ****  *
 195:../../../os/rt/include/chsys.h ****  * @api
 196:../../../os/rt/include/chsys.h ****  */
 197:../../../os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:../../../os/rt/include/chsys.h **** 
 199:../../../os/rt/include/chsys.h **** /**
 200:../../../os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:../../../os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:../../../os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:../../../os/rt/include/chsys.h ****  *
 205:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:../../../os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:../../../os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:../../../os/rt/include/chsys.h ****  *
 209:../../../os/rt/include/chsys.h ****  * @api
 210:../../../os/rt/include/chsys.h ****  */
 211:../../../os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:../../../os/rt/include/chsys.h **** 
 213:../../../os/rt/include/chsys.h **** /**
 214:../../../os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:../../../os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:../../../os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:../../../os/rt/include/chsys.h ****  *
 219:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:../../../os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:../../../os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:../../../os/rt/include/chsys.h ****  *
 223:../../../os/rt/include/chsys.h ****  * @api
 224:../../../os/rt/include/chsys.h ****  */
 225:../../../os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:../../../os/rt/include/chsys.h **** 
 227:../../../os/rt/include/chsys.h **** /**
 228:../../../os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:../../../os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:../../../os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:../../../os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:../../../os/rt/include/chsys.h ****  *
 233:../../../os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:../../../os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:../../../os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:../../../os/rt/include/chsys.h ****  *
 237:../../../os/rt/include/chsys.h ****  * @api
 238:../../../os/rt/include/chsys.h ****  */
 239:../../../os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:../../../os/rt/include/chsys.h **** /** @} */
 241:../../../os/rt/include/chsys.h **** 
 242:../../../os/rt/include/chsys.h **** /**
 243:../../../os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:../../../os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:../../../os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:../../../os/rt/include/chsys.h ****  *
 247:../../../os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:../../../os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:../../../os/rt/include/chsys.h ****  *
 250:../../../os/rt/include/chsys.h ****  * @xclass
 251:../../../os/rt/include/chsys.h ****  */
 252:../../../os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:../../../os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:../../../os/rt/include/chsys.h **** #endif
 255:../../../os/rt/include/chsys.h **** 
 256:../../../os/rt/include/chsys.h **** /**
 257:../../../os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:../../../os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:../../../os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:../../../os/rt/include/chsys.h ****  *
 261:../../../os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:../../../os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:../../../os/rt/include/chsys.h ****  *
 264:../../../os/rt/include/chsys.h ****  * @special
 265:../../../os/rt/include/chsys.h ****  */
 266:../../../os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:../../../os/rt/include/chsys.h ****                                                                             \
 268:../../../os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:../../../os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:../../../os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:../../../os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:../../../os/rt/include/chsys.h **** }
 273:../../../os/rt/include/chsys.h **** 
 274:../../../os/rt/include/chsys.h **** /*===========================================================================*/
 275:../../../os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:../../../os/rt/include/chsys.h **** /*===========================================================================*/
 277:../../../os/rt/include/chsys.h **** 
 278:../../../os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:../../../os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:../../../os/rt/include/chsys.h **** #endif
 281:../../../os/rt/include/chsys.h **** 
 282:../../../os/rt/include/chsys.h **** #ifdef __cplusplus
 283:../../../os/rt/include/chsys.h **** extern "C" {
 284:../../../os/rt/include/chsys.h **** #endif
 285:../../../os/rt/include/chsys.h ****   void chSysInit(void);
 286:../../../os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:../../../os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:../../../os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:../../../os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:../../../os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:../../../os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:../../../os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:../../../os/rt/include/chsys.h **** #endif
 294:../../../os/rt/include/chsys.h **** #ifdef __cplusplus
 295:../../../os/rt/include/chsys.h **** }
 296:../../../os/rt/include/chsys.h **** #endif
 297:../../../os/rt/include/chsys.h **** 
 298:../../../os/rt/include/chsys.h **** /*===========================================================================*/
 299:../../../os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:../../../os/rt/include/chsys.h **** /*===========================================================================*/
 301:../../../os/rt/include/chsys.h **** 
 302:../../../os/rt/include/chsys.h **** /**
 303:../../../os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:../../../os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:../../../os/rt/include/chsys.h ****  *          hardware priority.
 306:../../../os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:../../../os/rt/include/chsys.h ****  *
 308:../../../os/rt/include/chsys.h ****  * @special
 309:../../../os/rt/include/chsys.h ****  */
 310:../../../os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:../../../os/rt/include/chsys.h **** 
 312:../../../os/rt/include/chsys.h ****   port_disable();
 313:../../../os/rt/include/chsys.h ****   _dbg_check_disable();
 314:../../../os/rt/include/chsys.h **** }
 315:../../../os/rt/include/chsys.h **** 
 316:../../../os/rt/include/chsys.h **** /**
 317:../../../os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:../../../os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:../../../os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:../../../os/rt/include/chsys.h ****  *          enabled.
 321:../../../os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:../../../os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:../../../os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:../../../os/rt/include/chsys.h ****  *
 325:../../../os/rt/include/chsys.h ****  * @special
 326:../../../os/rt/include/chsys.h ****  */
 327:../../../os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:../../../os/rt/include/chsys.h **** 
 329:../../../os/rt/include/chsys.h ****   port_suspend();
 330:../../../os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:../../../os/rt/include/chsys.h **** }
 332:../../../os/rt/include/chsys.h **** 
 333:../../../os/rt/include/chsys.h **** /**
 334:../../../os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:../../../os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:../../../os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:../../../os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:../../../os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:../../../os/rt/include/chsys.h ****  *
 340:../../../os/rt/include/chsys.h ****  * @special
 341:../../../os/rt/include/chsys.h ****  */
 342:../../../os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:../../../os/rt/include/chsys.h **** 
 344:../../../os/rt/include/chsys.h ****   _dbg_check_enable();
 345:../../../os/rt/include/chsys.h ****   port_enable();
 346:../../../os/rt/include/chsys.h **** }
 347:../../../os/rt/include/chsys.h **** 
 348:../../../os/rt/include/chsys.h **** /**
 349:../../../os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:../../../os/rt/include/chsys.h ****  *
 351:../../../os/rt/include/chsys.h ****  * @special
 352:../../../os/rt/include/chsys.h ****  */
 353:../../../os/rt/include/chsys.h **** static inline void chSysLock(void) {
 511               		.loc 5 353 20 view .LVU140
 512               	.LBE297:
 513               	.LBE301:
 354:../../../os/rt/include/chsys.h **** 
 355:../../../os/rt/include/chsys.h ****   port_lock();
 514               		.loc 5 355 3 view .LVU141
 515               	.LBB302:
 516               	.LBB300:
 517               	.LBB298:
 518               	.LBI298:
 519               		.file 6 "../../../os/common/ports/AVR/chcore.h"
   1:../../../os/common/ports/AVR/chcore.h **** /*
   2:../../../os/common/ports/AVR/chcore.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/common/ports/AVR/chcore.h **** 
   4:../../../os/common/ports/AVR/chcore.h ****     This file is part of ChibiOS.
   5:../../../os/common/ports/AVR/chcore.h **** 
   6:../../../os/common/ports/AVR/chcore.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/common/ports/AVR/chcore.h ****     it under the terms of the GNU General Public License as published by
   8:../../../os/common/ports/AVR/chcore.h ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/common/ports/AVR/chcore.h ****     (at your option) any later version.
  10:../../../os/common/ports/AVR/chcore.h **** 
  11:../../../os/common/ports/AVR/chcore.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/common/ports/AVR/chcore.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/common/ports/AVR/chcore.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/common/ports/AVR/chcore.h ****     GNU General Public License for more details.
  15:../../../os/common/ports/AVR/chcore.h **** 
  16:../../../os/common/ports/AVR/chcore.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/common/ports/AVR/chcore.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/common/ports/AVR/chcore.h **** */
  19:../../../os/common/ports/AVR/chcore.h **** 
  20:../../../os/common/ports/AVR/chcore.h **** /**
  21:../../../os/common/ports/AVR/chcore.h ****  * @file    templates/chcore.h
  22:../../../os/common/ports/AVR/chcore.h ****  * @brief   Port related template macros and structures.
  23:../../../os/common/ports/AVR/chcore.h ****  * @details This file is a template of the system driver macros provided by
  24:../../../os/common/ports/AVR/chcore.h ****  *          a port.
  25:../../../os/common/ports/AVR/chcore.h ****  *
  26:../../../os/common/ports/AVR/chcore.h ****  * @addtogroup core
  27:../../../os/common/ports/AVR/chcore.h ****  * @{
  28:../../../os/common/ports/AVR/chcore.h ****  */
  29:../../../os/common/ports/AVR/chcore.h **** 
  30:../../../os/common/ports/AVR/chcore.h **** #ifndef CHCORE_H
  31:../../../os/common/ports/AVR/chcore.h **** #define CHCORE_H
  32:../../../os/common/ports/AVR/chcore.h **** 
  33:../../../os/common/ports/AVR/chcore.h **** #include <avr/io.h>
  34:../../../os/common/ports/AVR/chcore.h **** #include <avr/interrupt.h>
  35:../../../os/common/ports/AVR/chcore.h **** 
  36:../../../os/common/ports/AVR/chcore.h **** extern bool __avr_in_isr;
  37:../../../os/common/ports/AVR/chcore.h **** 
  38:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  39:../../../os/common/ports/AVR/chcore.h **** /* Module constants.                                                         */
  40:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  41:../../../os/common/ports/AVR/chcore.h **** 
  42:../../../os/common/ports/AVR/chcore.h **** /**
  43:../../../os/common/ports/AVR/chcore.h ****  * @name    Port Capabilities and Constants
  44:../../../os/common/ports/AVR/chcore.h ****  * @{
  45:../../../os/common/ports/AVR/chcore.h ****  */
  46:../../../os/common/ports/AVR/chcore.h **** /**
  47:../../../os/common/ports/AVR/chcore.h ****  * @brief   This port supports a realtime counter.
  48:../../../os/common/ports/AVR/chcore.h ****  */
  49:../../../os/common/ports/AVR/chcore.h **** #define PORT_SUPPORTS_RT                FALSE
  50:../../../os/common/ports/AVR/chcore.h **** 
  51:../../../os/common/ports/AVR/chcore.h **** /**
  52:../../../os/common/ports/AVR/chcore.h ****  * @brief   Natural alignment constant.
  53:../../../os/common/ports/AVR/chcore.h ****  * @note    It is the minimum alignment for pointer-size variables.
  54:../../../os/common/ports/AVR/chcore.h ****  */
  55:../../../os/common/ports/AVR/chcore.h **** #define PORT_NATURAL_ALIGN              1U
  56:../../../os/common/ports/AVR/chcore.h **** 
  57:../../../os/common/ports/AVR/chcore.h **** /**
  58:../../../os/common/ports/AVR/chcore.h ****  * @brief   Stack alignment constant.
  59:../../../os/common/ports/AVR/chcore.h ****  * @note    It is the alignement required for the stack pointer.
  60:../../../os/common/ports/AVR/chcore.h ****  */
  61:../../../os/common/ports/AVR/chcore.h **** #define PORT_STACK_ALIGN                1U
  62:../../../os/common/ports/AVR/chcore.h **** 
  63:../../../os/common/ports/AVR/chcore.h **** /**
  64:../../../os/common/ports/AVR/chcore.h ****  * @brief   Working Areas alignment constant.
  65:../../../os/common/ports/AVR/chcore.h ****  * @note    It is the alignment to be enforced for thread working areas.
  66:../../../os/common/ports/AVR/chcore.h ****  */
  67:../../../os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA_ALIGN         1U
  68:../../../os/common/ports/AVR/chcore.h **** /** @} */
  69:../../../os/common/ports/AVR/chcore.h **** 
  70:../../../os/common/ports/AVR/chcore.h **** /**
  71:../../../os/common/ports/AVR/chcore.h ****  * @name    Architecture and Compiler
  72:../../../os/common/ports/AVR/chcore.h ****  * @{
  73:../../../os/common/ports/AVR/chcore.h ****  */
  74:../../../os/common/ports/AVR/chcore.h **** /**
  75:../../../os/common/ports/AVR/chcore.h ****  * @brief   Macro defining an AVR architecture.
  76:../../../os/common/ports/AVR/chcore.h ****  */
  77:../../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR
  78:../../../os/common/ports/AVR/chcore.h **** 
  79:../../../os/common/ports/AVR/chcore.h **** /**
  80:../../../os/common/ports/AVR/chcore.h ****  * @brief   Macro defining the specific AVR architecture.
  81:../../../os/common/ports/AVR/chcore.h ****  */
  82:../../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR_MEGAAVR
  83:../../../os/common/ports/AVR/chcore.h **** 
  84:../../../os/common/ports/AVR/chcore.h **** /**
  85:../../../os/common/ports/AVR/chcore.h ****  * @brief   Name of the implemented architecture.
  86:../../../os/common/ports/AVR/chcore.h ****  */
  87:../../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_NAME          "MegaAVR"
  88:../../../os/common/ports/AVR/chcore.h **** 
  89:../../../os/common/ports/AVR/chcore.h **** /**
  90:../../../os/common/ports/AVR/chcore.h ****  * @brief   Compiler name and version.
  91:../../../os/common/ports/AVR/chcore.h ****  */
  92:../../../os/common/ports/AVR/chcore.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
  93:../../../os/common/ports/AVR/chcore.h **** #define PORT_COMPILER_NAME              "GCC " __VERSION__
  94:../../../os/common/ports/AVR/chcore.h **** 
  95:../../../os/common/ports/AVR/chcore.h **** #else
  96:../../../os/common/ports/AVR/chcore.h **** #error "unsupported compiler"
  97:../../../os/common/ports/AVR/chcore.h **** #endif
  98:../../../os/common/ports/AVR/chcore.h **** 
  99:../../../os/common/ports/AVR/chcore.h **** /**
 100:../../../os/common/ports/AVR/chcore.h ****  * @brief   Port-specific information string.
 101:../../../os/common/ports/AVR/chcore.h ****  */
 102:../../../os/common/ports/AVR/chcore.h **** #define PORT_INFO                       "None"
 103:../../../os/common/ports/AVR/chcore.h **** /** @} */
 104:../../../os/common/ports/AVR/chcore.h **** 
 105:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 106:../../../os/common/ports/AVR/chcore.h **** /* Module pre-compile time settings.                                         */
 107:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 108:../../../os/common/ports/AVR/chcore.h **** 
 109:../../../os/common/ports/AVR/chcore.h **** /**
 110:../../../os/common/ports/AVR/chcore.h ****  * @brief   Stack size for the system idle thread.
 111:../../../os/common/ports/AVR/chcore.h ****  * @details This size depends on the idle thread implementation, usually
 112:../../../os/common/ports/AVR/chcore.h ****  *          the idle thread should take no more space than those reserved
 113:../../../os/common/ports/AVR/chcore.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 114:../../../os/common/ports/AVR/chcore.h ****  */
 115:../../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 116:../../../os/common/ports/AVR/chcore.h **** #define PORT_IDLE_THREAD_STACK_SIZE     8
 117:../../../os/common/ports/AVR/chcore.h **** #endif
 118:../../../os/common/ports/AVR/chcore.h **** 
 119:../../../os/common/ports/AVR/chcore.h **** /**
 120:../../../os/common/ports/AVR/chcore.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 121:../../../os/common/ports/AVR/chcore.h ****  * @details This constant is used in the calculation of the correct working
 122:../../../os/common/ports/AVR/chcore.h ****  *          area size.
 123:../../../os/common/ports/AVR/chcore.h ****  */
 124:../../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 125:../../../os/common/ports/AVR/chcore.h **** #define PORT_INT_REQUIRED_STACK         32
 126:../../../os/common/ports/AVR/chcore.h **** #endif
 127:../../../os/common/ports/AVR/chcore.h **** 
 128:../../../os/common/ports/AVR/chcore.h **** /**
 129:../../../os/common/ports/AVR/chcore.h ****  * @brief   Enables an alternative timer implementation.
 130:../../../os/common/ports/AVR/chcore.h ****  * @details Usually the port uses a timer interface defined in the file
 131:../../../os/common/ports/AVR/chcore.h ****  *          @p chcore_timer.h, if this option is enabled then the file
 132:../../../os/common/ports/AVR/chcore.h ****  *          @p chcore_timer_alt.h is included instead.
 133:../../../os/common/ports/AVR/chcore.h ****  */
 134:../../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_USE_ALT_TIMER) || defined(__DOXYGEN__)
 135:../../../os/common/ports/AVR/chcore.h **** #define PORT_USE_ALT_TIMER              FALSE
 136:../../../os/common/ports/AVR/chcore.h **** #endif
 137:../../../os/common/ports/AVR/chcore.h **** 
 138:../../../os/common/ports/AVR/chcore.h **** /**
 139:../../../os/common/ports/AVR/chcore.h ****  * @brief   Enables a "wait for interrupt" instruction in the idle loop.
 140:../../../os/common/ports/AVR/chcore.h ****  */
 141:../../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_AVR_WFI_SLEEP_IDLE) || defined(__DOXYGEN__)
 142:../../../os/common/ports/AVR/chcore.h **** #define PORT_AVR_WFI_SLEEP_IDLE      FALSE
 143:../../../os/common/ports/AVR/chcore.h **** #endif
 144:../../../os/common/ports/AVR/chcore.h **** 
 145:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 146:../../../os/common/ports/AVR/chcore.h **** /* Derived constants and error checks.                                       */
 147:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 148:../../../os/common/ports/AVR/chcore.h **** 
 149:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 150:../../../os/common/ports/AVR/chcore.h **** /* Module data structures and types.                                         */
 151:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 152:../../../os/common/ports/AVR/chcore.h **** 
 153:../../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 154:../../../os/common/ports/AVR/chcore.h ****    asm module.*/
 155:../../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 156:../../../os/common/ports/AVR/chcore.h **** 
 157:../../../os/common/ports/AVR/chcore.h **** /**
 158:../../../os/common/ports/AVR/chcore.h ****  * @brief   Type of stack and memory alignment enforcement.
 159:../../../os/common/ports/AVR/chcore.h ****  * @note    In this architecture the stack alignment is enforced to 8 bits.
 160:../../../os/common/ports/AVR/chcore.h ****  */
 161:../../../os/common/ports/AVR/chcore.h **** typedef uint8_t stkalign_t;
 162:../../../os/common/ports/AVR/chcore.h **** 
 163:../../../os/common/ports/AVR/chcore.h **** /**
 164:../../../os/common/ports/AVR/chcore.h ****  * @brief   Interrupt saved context.
 165:../../../os/common/ports/AVR/chcore.h ****  * @details This structure represents the stack frame saved during a
 166:../../../os/common/ports/AVR/chcore.h ****  *          preemption-capable interrupt handler.
 167:../../../os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 168:../../../os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 169:../../../os/common/ports/AVR/chcore.h ****  */
 170:../../../os/common/ports/AVR/chcore.h **** struct port_extctx {
 171:../../../os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 172:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r31;
 173:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r30;
 174:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r27;
 175:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r26;
 176:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r25;
 177:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r24;
 178:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r23;
 179:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r22;
 180:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r21;
 181:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r20;
 182:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r19;
 183:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r18;
 184:../../../os/common/ports/AVR/chcore.h ****   uint8_t       sr;
 185:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r1;
 186:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r0;
 187:../../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 188:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 189:../../../os/common/ports/AVR/chcore.h **** #endif
 190:../../../os/common/ports/AVR/chcore.h ****   uint16_t      pc;
 191:../../../os/common/ports/AVR/chcore.h **** };
 192:../../../os/common/ports/AVR/chcore.h **** 
 193:../../../os/common/ports/AVR/chcore.h **** /**
 194:../../../os/common/ports/AVR/chcore.h ****  * @brief   System saved context.
 195:../../../os/common/ports/AVR/chcore.h ****  * @details This structure represents the inner stack frame during a context
 196:../../../os/common/ports/AVR/chcore.h ****  *          switching.
 197:../../../os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 198:../../../os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 199:../../../os/common/ports/AVR/chcore.h ****  * @note    LR is stored in the caller context so it is not present in this
 200:../../../os/common/ports/AVR/chcore.h ****  *          structure.
 201:../../../os/common/ports/AVR/chcore.h ****  */
 202:../../../os/common/ports/AVR/chcore.h **** struct port_intctx {
 203:../../../os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 204:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r29;
 205:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r28;
 206:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r17;
 207:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r16;
 208:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r15;
 209:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r14;
 210:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r13;
 211:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r12;
 212:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r11;
 213:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r10;
 214:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r9;
 215:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r8;
 216:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r7;
 217:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r6;
 218:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r5;
 219:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r4;
 220:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r3;
 221:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r2;
 222:../../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 223:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 224:../../../os/common/ports/AVR/chcore.h **** #endif
 225:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pcl;
 226:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pch;
 227:../../../os/common/ports/AVR/chcore.h **** };
 228:../../../os/common/ports/AVR/chcore.h **** 
 229:../../../os/common/ports/AVR/chcore.h **** /**
 230:../../../os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p thread_t structure.
 231:../../../os/common/ports/AVR/chcore.h ****  * @details This structure usually contains just the saved stack pointer
 232:../../../os/common/ports/AVR/chcore.h ****  *          defined as a pointer to a @p port_intctx structure.
 233:../../../os/common/ports/AVR/chcore.h ****  */
 234:../../../os/common/ports/AVR/chcore.h **** struct port_context {
 235:../../../os/common/ports/AVR/chcore.h ****   struct port_intctx *sp;
 236:../../../os/common/ports/AVR/chcore.h **** };
 237:../../../os/common/ports/AVR/chcore.h **** 
 238:../../../os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 239:../../../os/common/ports/AVR/chcore.h **** 
 240:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 241:../../../os/common/ports/AVR/chcore.h **** /* Module macros.                                                            */
 242:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 243:../../../os/common/ports/AVR/chcore.h **** 
 244:../../../os/common/ports/AVR/chcore.h **** /**
 245:../../../os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 246:../../../os/common/ports/AVR/chcore.h ****  * @details This code usually setup the context switching frame represented
 247:../../../os/common/ports/AVR/chcore.h ****  *          by an @p port_intctx structure.
 248:../../../os/common/ports/AVR/chcore.h ****  */
 249:../../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__) || defined(__DOXYGEN__)
 250:../../../os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 251:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 252:../../../os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 253:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 254:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 255:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 256:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 257:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcx = (uint8_t)0;                                             \
 258:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 259:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 260:../../../os/common/ports/AVR/chcore.h **** }
 261:../../../os/common/ports/AVR/chcore.h **** #else /* !__AVR_3_BYTE_PC__ */
 262:../../../os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 263:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 264:../../../os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 265:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 266:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 267:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 268:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 269:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 270:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 271:../../../os/common/ports/AVR/chcore.h **** }
 272:../../../os/common/ports/AVR/chcore.h **** #endif /* !__AVR_3_BYTE_PC__ */
 273:../../../os/common/ports/AVR/chcore.h **** 
 274:../../../os/common/ports/AVR/chcore.h **** /**
 275:../../../os/common/ports/AVR/chcore.h ****  * @brief   Computes the thread working area global size.
 276:../../../os/common/ports/AVR/chcore.h ****  * @note    There is no need to perform alignments in this macro.
 277:../../../os/common/ports/AVR/chcore.h ****  */
 278:../../../os/common/ports/AVR/chcore.h **** #define PORT_WA_SIZE(n) ((sizeof(struct port_intctx) - 1) +                \
 279:../../../os/common/ports/AVR/chcore.h ****                          (sizeof(struct port_extctx) - 1) +                \
 280:../../../os/common/ports/AVR/chcore.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 281:../../../os/common/ports/AVR/chcore.h **** 
 282:../../../os/common/ports/AVR/chcore.h **** /**
 283:../../../os/common/ports/AVR/chcore.h ****  * @brief   Static working area allocation.
 284:../../../os/common/ports/AVR/chcore.h ****  * @details This macro is used to allocate a static thread working area
 285:../../../os/common/ports/AVR/chcore.h ****  *          aligned as both position and size.
 286:../../../os/common/ports/AVR/chcore.h ****  *
 287:../../../os/common/ports/AVR/chcore.h ****  * @param[in] s         the name to be assigned to the stack array
 288:../../../os/common/ports/AVR/chcore.h ****  * @param[in] n         the stack size to be assigned to the thread
 289:../../../os/common/ports/AVR/chcore.h ****  */
 290:../../../os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA(s, n)                                             \
 291:../../../os/common/ports/AVR/chcore.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 292:../../../os/common/ports/AVR/chcore.h **** 
 293:../../../os/common/ports/AVR/chcore.h **** /**
 294:../../../os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 295:../../../os/common/ports/AVR/chcore.h ****  */
 296:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_PRIORITY(n) false
 297:../../../os/common/ports/AVR/chcore.h **** 
 298:../../../os/common/ports/AVR/chcore.h **** /**
 299:../../../os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 300:../../../os/common/ports/AVR/chcore.h ****  */
 301:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_KERNEL_PRIORITY(n) false
 302:../../../os/common/ports/AVR/chcore.h **** 
 303:../../../os/common/ports/AVR/chcore.h **** /**
 304:../../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ prologue code.
 305:../../../os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 306:../../../os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 307:../../../os/common/ports/AVR/chcore.h ****  * @note    This code tricks the compiler to save all the specified registers
 308:../../../os/common/ports/AVR/chcore.h ****  *          by "touching" them.
 309:../../../os/common/ports/AVR/chcore.h ****  */
 310:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_PROLOGUE() {                                               \
 311:../../../os/common/ports/AVR/chcore.h ****   asm ("" : : : "r18", "r19", "r20", "r21", "r22", "r23", "r24",            \
 312:../../../os/common/ports/AVR/chcore.h ****                 "r25", "r26", "r27", "r30", "r31");                         \
 313:../../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 314:../../../os/common/ports/AVR/chcore.h **** }
 315:../../../os/common/ports/AVR/chcore.h **** 
 316:../../../os/common/ports/AVR/chcore.h **** /**
 317:../../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ epilogue code.
 318:../../../os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 319:../../../os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 320:../../../os/common/ports/AVR/chcore.h ****  */
 321:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_EPILOGUE() {                                               \
 322:../../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = false;                                                     \
 323:../../../os/common/ports/AVR/chcore.h ****   _dbg_check_lock();                                                        \
 324:../../../os/common/ports/AVR/chcore.h ****   if (chSchIsPreemptionRequired())                                          \
 325:../../../os/common/ports/AVR/chcore.h ****     chSchDoReschedule();                                                    \
 326:../../../os/common/ports/AVR/chcore.h ****   _dbg_check_unlock();                                                      \
 327:../../../os/common/ports/AVR/chcore.h **** }
 328:../../../os/common/ports/AVR/chcore.h **** 
 329:../../../os/common/ports/AVR/chcore.h **** /**
 330:../../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ handler function declaration.
 331:../../../os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 332:../../../os/common/ports/AVR/chcore.h ****  *          port implementation.
 333:../../../os/common/ports/AVR/chcore.h ****  */
 334:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_HANDLER(id) ISR(id)
 335:../../../os/common/ports/AVR/chcore.h **** 
 336:../../../os/common/ports/AVR/chcore.h **** /**
 337:../../../os/common/ports/AVR/chcore.h ****  * @brief   Fast IRQ handler function declaration.
 338:../../../os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 339:../../../os/common/ports/AVR/chcore.h ****  *          port implementation.
 340:../../../os/common/ports/AVR/chcore.h ****  */
 341:../../../os/common/ports/AVR/chcore.h **** #define PORT_FAST_IRQ_HANDLER(id) ISR(id)
 342:../../../os/common/ports/AVR/chcore.h **** 
 343:../../../os/common/ports/AVR/chcore.h **** /**
 344:../../../os/common/ports/AVR/chcore.h ****  * @brief   Performs a context switch between two threads.
 345:../../../os/common/ports/AVR/chcore.h ****  * @details This is the most critical code in any port, this function
 346:../../../os/common/ports/AVR/chcore.h ****  *          is responsible for the context switch between 2 threads.
 347:../../../os/common/ports/AVR/chcore.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 348:../../../os/common/ports/AVR/chcore.h ****  *          switch performance so optimize here as much as you can.
 349:../../../os/common/ports/AVR/chcore.h ****  *
 350:../../../os/common/ports/AVR/chcore.h ****  * @param[in] ntp       the thread to be switched in
 351:../../../os/common/ports/AVR/chcore.h ****  * @param[in] otp       the thread to be switched out
 352:../../../os/common/ports/AVR/chcore.h ****  */
 353:../../../os/common/ports/AVR/chcore.h **** #define port_switch(ntp, otp) {                                             \
 354:../../../os/common/ports/AVR/chcore.h ****   _port_switch(ntp, otp);                                                   \
 355:../../../os/common/ports/AVR/chcore.h ****   asm volatile ("" : : : "memory");                                         \
 356:../../../os/common/ports/AVR/chcore.h **** }
 357:../../../os/common/ports/AVR/chcore.h **** 
 358:../../../os/common/ports/AVR/chcore.h **** 
 359:../../../os/common/ports/AVR/chcore.h **** /**
 360:../../../os/common/ports/AVR/chcore.h ****  * @brief   Port-related initialization code.
 361:../../../os/common/ports/AVR/chcore.h ****  * @note    This function is empty in this port.
 362:../../../os/common/ports/AVR/chcore.h ****  */
 363:../../../os/common/ports/AVR/chcore.h **** #define port_init() {                                                       \
 364:../../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 365:../../../os/common/ports/AVR/chcore.h **** }
 366:../../../os/common/ports/AVR/chcore.h **** 
 367:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 368:../../../os/common/ports/AVR/chcore.h **** /* External declarations.                                                    */
 369:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 370:../../../os/common/ports/AVR/chcore.h **** 
 371:../../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 372:../../../os/common/ports/AVR/chcore.h ****    asm module.*/
 373:../../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 374:../../../os/common/ports/AVR/chcore.h **** 
 375:../../../os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 376:../../../os/common/ports/AVR/chcore.h **** extern "C" {
 377:../../../os/common/ports/AVR/chcore.h **** #endif
 378:../../../os/common/ports/AVR/chcore.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 379:../../../os/common/ports/AVR/chcore.h ****   void _port_thread_start(void);
 380:../../../os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 381:../../../os/common/ports/AVR/chcore.h **** }
 382:../../../os/common/ports/AVR/chcore.h **** #endif
 383:../../../os/common/ports/AVR/chcore.h **** 
 384:../../../os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 385:../../../os/common/ports/AVR/chcore.h **** 
 386:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 387:../../../os/common/ports/AVR/chcore.h **** /* Module inline functions.                                                  */
 388:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 389:../../../os/common/ports/AVR/chcore.h **** 
 390:../../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 391:../../../os/common/ports/AVR/chcore.h ****    asm module.*/
 392:../../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 393:../../../os/common/ports/AVR/chcore.h **** 
 394:../../../os/common/ports/AVR/chcore.h **** /**
 395:../../../os/common/ports/AVR/chcore.h ****  * @brief   Returns a word encoding the current interrupts status.
 396:../../../os/common/ports/AVR/chcore.h ****  *
 397:../../../os/common/ports/AVR/chcore.h ****  * @return              The interrupts status.
 398:../../../os/common/ports/AVR/chcore.h ****  */
 399:../../../os/common/ports/AVR/chcore.h **** static inline syssts_t port_get_irq_status(void) {
 400:../../../os/common/ports/AVR/chcore.h **** 
 401:../../../os/common/ports/AVR/chcore.h ****   return SREG;
 402:../../../os/common/ports/AVR/chcore.h **** }
 403:../../../os/common/ports/AVR/chcore.h **** 
 404:../../../os/common/ports/AVR/chcore.h **** /**
 405:../../../os/common/ports/AVR/chcore.h ****  * @brief   Checks the interrupt status.
 406:../../../os/common/ports/AVR/chcore.h ****  *
 407:../../../os/common/ports/AVR/chcore.h ****  * @param[in] sts       the interrupt status word
 408:../../../os/common/ports/AVR/chcore.h ****  *
 409:../../../os/common/ports/AVR/chcore.h ****  * @return              The interrupt status.
 410:../../../os/common/ports/AVR/chcore.h ****  * @retval false        the word specified a disabled interrupts status.
 411:../../../os/common/ports/AVR/chcore.h ****  * @retval true         the word specified an enabled interrupts status.
 412:../../../os/common/ports/AVR/chcore.h ****  */
 413:../../../os/common/ports/AVR/chcore.h **** static inline bool port_irq_enabled(syssts_t sts) {
 414:../../../os/common/ports/AVR/chcore.h **** 
 415:../../../os/common/ports/AVR/chcore.h ****   return (bool)((sts & 0x80) != 0);
 416:../../../os/common/ports/AVR/chcore.h **** }
 417:../../../os/common/ports/AVR/chcore.h **** 
 418:../../../os/common/ports/AVR/chcore.h **** /**
 419:../../../os/common/ports/AVR/chcore.h ****  * @brief   Determines the current execution context.
 420:../../../os/common/ports/AVR/chcore.h ****  *
 421:../../../os/common/ports/AVR/chcore.h ****  * @return              The execution context.
 422:../../../os/common/ports/AVR/chcore.h ****  * @retval false        not running in ISR mode.
 423:../../../os/common/ports/AVR/chcore.h ****  * @retval true         running in ISR mode.
 424:../../../os/common/ports/AVR/chcore.h ****  */
 425:../../../os/common/ports/AVR/chcore.h **** static inline bool port_is_isr_context(void) {
 426:../../../os/common/ports/AVR/chcore.h **** 
 427:../../../os/common/ports/AVR/chcore.h ****   return __avr_in_isr;
 428:../../../os/common/ports/AVR/chcore.h **** }
 429:../../../os/common/ports/AVR/chcore.h **** 
 430:../../../os/common/ports/AVR/chcore.h **** /**
 431:../../../os/common/ports/AVR/chcore.h ****  * @brief   Kernel-lock action.
 432:../../../os/common/ports/AVR/chcore.h ****  * @details Usually this function just disables interrupts but may perform more
 433:../../../os/common/ports/AVR/chcore.h ****  *          actions.
 434:../../../os/common/ports/AVR/chcore.h ****  */
 435:../../../os/common/ports/AVR/chcore.h **** static inline void port_lock(void) {
 520               		.loc 6 435 20 view .LVU142
 521               	.LBB299:
 436:../../../os/common/ports/AVR/chcore.h **** 
 437:../../../os/common/ports/AVR/chcore.h ****   asm volatile ("cli" : : : "memory");
 522               		.loc 6 437 3 view .LVU143
 523               	/* #APP */
 524               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 525 0000 F894      		cli
 526               	 ;  0 "" 2
 527               	/* #NOAPP */
 528               	.LBE299:
 529               	.LBE298:
 530               	.LBE300:
 531               	.LBE302:
 356:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 532               		.loc 5 356 34 view .LVU144
 357:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 533               		.loc 5 357 20 view .LVU145
 195:../../../os/hal/src/hal_buffers.c ****   osalSysUnlock();
 534               		.loc 1 195 3 view .LVU146
 195:../../../os/hal/src/hal_buffers.c ****   osalSysUnlock();
 535               		.loc 1 195 9 is_stmt 0 view .LVU147
 536 0002 0E94 0000 		call ibqGetFullBufferTimeoutS
 537               	.LVL32:
 196:../../../os/hal/src/hal_buffers.c **** 
 538               		.loc 1 196 3 is_stmt 1 view .LVU148
 539               	.LBB303:
 540               	.LBI303:
 520:../../../os/hal/osal/rt/osal.h **** 
 541               		.loc 2 520 20 view .LVU149
 542               	.LBE303:
 522:../../../os/hal/osal/rt/osal.h **** }
 543               		.loc 2 522 3 view .LVU150
 544               	.LBB308:
 545               	.LBB304:
 546               	.LBI304:
 358:../../../os/rt/include/chsys.h **** }
 359:../../../os/rt/include/chsys.h **** 
 360:../../../os/rt/include/chsys.h **** /**
 361:../../../os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:../../../os/rt/include/chsys.h ****  *
 363:../../../os/rt/include/chsys.h ****  * @special
 364:../../../os/rt/include/chsys.h ****  */
 365:../../../os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 547               		.loc 5 365 20 view .LVU151
 548               	.LBB305:
 366:../../../os/rt/include/chsys.h **** 
 367:../../../os/rt/include/chsys.h ****   _dbg_check_unlock();
 549               		.loc 5 367 22 view .LVU152
 368:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 550               		.loc 5 368 33 view .LVU153
 369:../../../os/rt/include/chsys.h **** 
 370:../../../os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:../../../os/rt/include/chsys.h ****      in a critical section not followed by a chSchResceduleS(), this means
 372:../../../os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:../../../os/rt/include/chsys.h ****      the ready list.*/
 374:../../../os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 551               		.loc 5 374 3 view .LVU154
 552               		.loc 5 374 3 view .LVU155
 375:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:../../../os/rt/include/chsys.h ****               "priority order violation");
 377:../../../os/rt/include/chsys.h **** 
 378:../../../os/rt/include/chsys.h ****   port_unlock();
 553               		.loc 5 378 3 view .LVU156
 554               	.LBB306:
 555               	.LBI306:
 438:../../../os/common/ports/AVR/chcore.h **** }
 439:../../../os/common/ports/AVR/chcore.h **** 
 440:../../../os/common/ports/AVR/chcore.h **** /**
 441:../../../os/common/ports/AVR/chcore.h ****  * @brief   Kernel-unlock action.
 442:../../../os/common/ports/AVR/chcore.h ****  * @details Usually this function just enables interrupts but may perform more
 443:../../../os/common/ports/AVR/chcore.h ****  *          actions.
 444:../../../os/common/ports/AVR/chcore.h ****  */
 445:../../../os/common/ports/AVR/chcore.h **** static inline void port_unlock(void) {
 556               		.loc 6 445 20 view .LVU157
 557               	.LBB307:
 446:../../../os/common/ports/AVR/chcore.h **** 
 447:../../../os/common/ports/AVR/chcore.h ****   asm volatile ("sei" : : : "memory");
 558               		.loc 6 447 3 view .LVU158
 559               	/* #APP */
 560               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 561 0006 7894      		sei
 562               	 ;  0 "" 2
 563               	/* #NOAPP */
 564               	.LBE307:
 565               	.LBE306:
 566               	.LBE305:
 567               	.LBE304:
 568               	.LBE308:
 198:../../../os/hal/src/hal_buffers.c **** }
 569               		.loc 1 198 3 view .LVU159
 570               	/* epilogue start */
 199:../../../os/hal/src/hal_buffers.c **** 
 571               		.loc 1 199 1 is_stmt 0 view .LVU160
 572 0008 0895      		ret
 573               		.cfi_endproc
 574               	.LFE177:
 576               		.section	.text.ibqReleaseEmptyBuffer,"ax",@progbits
 577               	.global	ibqReleaseEmptyBuffer
 579               	ibqReleaseEmptyBuffer:
 580               	.LVL33:
 581               	.LFB179:
 245:../../../os/hal/src/hal_buffers.c **** 
 246:../../../os/hal/src/hal_buffers.c **** /**
 247:../../../os/hal/src/hal_buffers.c ****  * @brief   Releases the buffer back in the queue.
 248:../../../os/hal/src/hal_buffers.c ****  * @note    The object callback is called after releasing the buffer.
 249:../../../os/hal/src/hal_buffers.c ****  *
 250:../../../os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 251:../../../os/hal/src/hal_buffers.c ****  *
 252:../../../os/hal/src/hal_buffers.c ****  * @api
 253:../../../os/hal/src/hal_buffers.c ****  */
 254:../../../os/hal/src/hal_buffers.c **** void ibqReleaseEmptyBuffer(input_buffers_queue_t *ibqp) {
 582               		.loc 1 254 57 is_stmt 1 view -0
 583               		.cfi_startproc
 584               	/* prologue: function */
 585               	/* frame size = 0 */
 586               	/* stack size = 0 */
 587               	.L__stack_usage = 0
 588               		.loc 1 254 57 is_stmt 0 view .LVU162
 589 0000 DC01      		movw r26,r24
 255:../../../os/hal/src/hal_buffers.c **** 
 256:../../../os/hal/src/hal_buffers.c ****   osalSysLock();
 590               		.loc 1 256 3 is_stmt 1 view .LVU163
 591               	.LBB309:
 592               	.LBI309:
 509:../../../os/hal/osal/rt/osal.h **** 
 593               		.loc 2 509 20 view .LVU164
 594               	.LBE309:
 511:../../../os/hal/osal/rt/osal.h **** }
 595               		.loc 2 511 3 view .LVU165
 596               	.LBB314:
 597               	.LBB310:
 598               	.LBI310:
 353:../../../os/rt/include/chsys.h **** 
 599               		.loc 5 353 20 view .LVU166
 600               	.LBE310:
 601               	.LBE314:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 602               		.loc 5 355 3 view .LVU167
 603               	.LBB315:
 604               	.LBB313:
 605               	.LBB311:
 606               	.LBI311:
 435:../../../os/common/ports/AVR/chcore.h **** 
 607               		.loc 6 435 20 view .LVU168
 608               	.LBB312:
 437:../../../os/common/ports/AVR/chcore.h **** }
 609               		.loc 6 437 3 view .LVU169
 610               	/* #APP */
 611               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 612 0002 F894      		cli
 613               	 ;  0 "" 2
 614               	/* #NOAPP */
 615               	.LBE312:
 616               	.LBE311:
 617               	.LBE313:
 618               	.LBE315:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 619               		.loc 5 356 34 view .LVU170
 357:../../../os/rt/include/chsys.h **** }
 620               		.loc 5 357 20 view .LVU171
 257:../../../os/hal/src/hal_buffers.c ****   ibqReleaseEmptyBufferS(ibqp);
 621               		.loc 1 257 3 view .LVU172
 622               	.LVL34:
 623               	.LBB316:
 624               	.LBI316:
 258:../../../os/hal/src/hal_buffers.c ****   osalSysUnlock();
 259:../../../os/hal/src/hal_buffers.c **** }
 260:../../../os/hal/src/hal_buffers.c **** 
 261:../../../os/hal/src/hal_buffers.c ****   /**
 262:../../../os/hal/src/hal_buffers.c ****    * @brief   Releases the buffer back in the queue.
 263:../../../os/hal/src/hal_buffers.c ****    * @note    The object callback is called after releasing the buffer.
 264:../../../os/hal/src/hal_buffers.c ****    *
 265:../../../os/hal/src/hal_buffers.c ****    * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 266:../../../os/hal/src/hal_buffers.c ****    *
 267:../../../os/hal/src/hal_buffers.c ****    * @sclass
 268:../../../os/hal/src/hal_buffers.c ****    */
 269:../../../os/hal/src/hal_buffers.c ****   void ibqReleaseEmptyBufferS(input_buffers_queue_t *ibqp) {
 625               		.loc 1 269 8 view .LVU173
 626               	.LBB317:
 270:../../../os/hal/src/hal_buffers.c **** 
 271:../../../os/hal/src/hal_buffers.c ****   osalDbgCheckClassS();
 627               		.loc 1 271 23 view .LVU174
 272:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!ibqIsEmptyI(ibqp), "buffers queue empty");
 628               		.loc 1 272 3 view .LVU175
 629               		.loc 1 272 3 view .LVU176
 273:../../../os/hal/src/hal_buffers.c **** 
 274:../../../os/hal/src/hal_buffers.c ****   /* Freeing a buffer slot in the queue.*/
 275:../../../os/hal/src/hal_buffers.c ****   ibqp->bcounter--;
 630               		.loc 1 275 3 view .LVU177
 631               		.loc 1 275 7 is_stmt 0 view .LVU178
 632 0004 1596      		adiw r26,5
 633 0006 8D91      		ld r24,X+
 634 0008 9C91      		ld r25,X
 635 000a 1697      		sbiw r26,5+1
 636               	.LVL35:
 637               		.loc 1 275 17 view .LVU179
 638 000c 0197      		sbiw r24,1
 639 000e 1696      		adiw r26,5+1
 640 0010 9C93      		st X,r25
 641 0012 8E93      		st -X,r24
 642 0014 1597      		sbiw r26,5
 276:../../../os/hal/src/hal_buffers.c ****   ibqp->brdptr += ibqp->bsize;
 643               		.loc 1 276 3 is_stmt 1 view .LVU180
 644               		.loc 1 276 16 is_stmt 0 view .LVU181
 645 0016 1996      		adiw r26,9
 646 0018 8D91      		ld r24,X+
 647 001a 9C91      		ld r25,X
 648 001c 1A97      		sbiw r26,9+1
 649 001e 1D96      		adiw r26,13
 650 0020 2D91      		ld r18,X+
 651 0022 3C91      		ld r19,X
 652 0024 1E97      		sbiw r26,13+1
 653 0026 820F      		add r24,r18
 654 0028 931F      		adc r25,r19
 655 002a 1A96      		adiw r26,9+1
 656 002c 9C93      		st X,r25
 657 002e 8E93      		st -X,r24
 658 0030 1997      		sbiw r26,9
 277:../../../os/hal/src/hal_buffers.c ****   if (ibqp->brdptr >= ibqp->btop) {
 659               		.loc 1 277 3 is_stmt 1 view .LVU182
 660               		.loc 1 277 6 is_stmt 0 view .LVU183
 661 0032 1B96      		adiw r26,11
 662 0034 2D91      		ld r18,X+
 663 0036 3C91      		ld r19,X
 664 0038 1C97      		sbiw r26,11+1
 665 003a 8217      		cp r24,r18
 666 003c 9307      		cpc r25,r19
 667 003e 00F0      		brlo .L20
 278:../../../os/hal/src/hal_buffers.c ****     ibqp->brdptr = ibqp->buffers;
 668               		.loc 1 278 5 is_stmt 1 view .LVU184
 669               		.loc 1 278 18 is_stmt 0 view .LVU185
 670 0040 5196      		adiw r26,17
 671 0042 8D91      		ld r24,X+
 672 0044 9C91      		ld r25,X
 673 0046 5297      		sbiw r26,17+1
 674 0048 1A96      		adiw r26,9+1
 675 004a 9C93      		st X,r25
 676 004c 8E93      		st -X,r24
 677 004e 1997      		sbiw r26,9
 678               	.L20:
 279:../../../os/hal/src/hal_buffers.c ****   }
 280:../../../os/hal/src/hal_buffers.c **** 
 281:../../../os/hal/src/hal_buffers.c ****   /* No "current" buffer.*/
 282:../../../os/hal/src/hal_buffers.c ****   ibqp->ptr = NULL;
 679               		.loc 1 282 3 is_stmt 1 view .LVU186
 680               		.loc 1 282 13 is_stmt 0 view .LVU187
 681 0050 5496      		adiw r26,19+1
 682 0052 1C92      		st X,__zero_reg__
 683 0054 1E92      		st -X,__zero_reg__
 684 0056 5397      		sbiw r26,19
 283:../../../os/hal/src/hal_buffers.c **** 
 284:../../../os/hal/src/hal_buffers.c ****   /* Notifying the buffer release.*/
 285:../../../os/hal/src/hal_buffers.c ****   if (ibqp->notify != NULL) {
 685               		.loc 1 285 3 is_stmt 1 view .LVU188
 686               		.loc 1 285 11 is_stmt 0 view .LVU189
 687 0058 5796      		adiw r26,23
 688 005a ED91      		ld r30,X+
 689 005c FC91      		ld r31,X
 690 005e 5897      		sbiw r26,23+1
 691               		.loc 1 285 6 view .LVU190
 692 0060 3097      		sbiw r30,0
 693 0062 01F0      		breq .L21
 286:../../../os/hal/src/hal_buffers.c ****     ibqp->notify(ibqp);
 694               		.loc 1 286 5 is_stmt 1 view .LVU191
 695 0064 CD01      		movw r24,r26
 696 0066 0995      		icall
 697               	.LVL36:
 698               	.L21:
 699               		.loc 1 286 5 is_stmt 0 view .LVU192
 700               	.LBE317:
 701               	.LBE316:
 258:../../../os/hal/src/hal_buffers.c **** }
 702               		.loc 1 258 3 is_stmt 1 view .LVU193
 703               	.LBB318:
 704               	.LBI318:
 520:../../../os/hal/osal/rt/osal.h **** 
 705               		.loc 2 520 20 view .LVU194
 706               	.LBE318:
 522:../../../os/hal/osal/rt/osal.h **** }
 707               		.loc 2 522 3 view .LVU195
 708               	.LBB323:
 709               	.LBB319:
 710               	.LBI319:
 365:../../../os/rt/include/chsys.h **** 
 711               		.loc 5 365 20 view .LVU196
 712               	.LBB320:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 713               		.loc 5 367 22 view .LVU197
 368:../../../os/rt/include/chsys.h **** 
 714               		.loc 5 368 33 view .LVU198
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 715               		.loc 5 374 3 view .LVU199
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 716               		.loc 5 374 3 view .LVU200
 717               		.loc 5 378 3 view .LVU201
 718               	.LBB321:
 719               	.LBI321:
 445:../../../os/common/ports/AVR/chcore.h **** 
 720               		.loc 6 445 20 view .LVU202
 721               	.LBB322:
 722               		.loc 6 447 3 view .LVU203
 723               	/* #APP */
 724               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 725 0068 7894      		sei
 726               	 ;  0 "" 2
 727               	/* #NOAPP */
 728               	/* epilogue start */
 729               	.LBE322:
 730               	.LBE321:
 731               	.LBE320:
 732               	.LBE319:
 733               	.LBE323:
 259:../../../os/hal/src/hal_buffers.c **** 
 734               		.loc 1 259 1 is_stmt 0 view .LVU204
 735 006a 0895      		ret
 736               		.cfi_endproc
 737               	.LFE179:
 739               		.section	.text.ibqReleaseEmptyBufferS,"ax",@progbits
 740               	.global	ibqReleaseEmptyBufferS
 742               	ibqReleaseEmptyBufferS:
 743               	.LVL37:
 744               	.LFB180:
 269:../../../os/hal/src/hal_buffers.c **** 
 745               		.loc 1 269 60 is_stmt 1 view -0
 746               		.cfi_startproc
 747               	/* prologue: function */
 748               	/* frame size = 0 */
 749               	/* stack size = 0 */
 750               	.L__stack_usage = 0
 269:../../../os/hal/src/hal_buffers.c **** 
 751               		.loc 1 269 60 is_stmt 0 view .LVU206
 752 0000 DC01      		movw r26,r24
 271:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!ibqIsEmptyI(ibqp), "buffers queue empty");
 753               		.loc 1 271 23 is_stmt 1 view .LVU207
 272:../../../os/hal/src/hal_buffers.c **** 
 754               		.loc 1 272 3 view .LVU208
 272:../../../os/hal/src/hal_buffers.c **** 
 755               		.loc 1 272 3 view .LVU209
 275:../../../os/hal/src/hal_buffers.c ****   ibqp->brdptr += ibqp->bsize;
 756               		.loc 1 275 3 view .LVU210
 275:../../../os/hal/src/hal_buffers.c ****   ibqp->brdptr += ibqp->bsize;
 757               		.loc 1 275 7 is_stmt 0 view .LVU211
 758 0002 1596      		adiw r26,5
 759 0004 8D91      		ld r24,X+
 760 0006 9C91      		ld r25,X
 761 0008 1697      		sbiw r26,5+1
 762               	.LVL38:
 275:../../../os/hal/src/hal_buffers.c ****   ibqp->brdptr += ibqp->bsize;
 763               		.loc 1 275 17 view .LVU212
 764 000a 0197      		sbiw r24,1
 765 000c 1696      		adiw r26,5+1
 766 000e 9C93      		st X,r25
 767 0010 8E93      		st -X,r24
 768 0012 1597      		sbiw r26,5
 276:../../../os/hal/src/hal_buffers.c ****   if (ibqp->brdptr >= ibqp->btop) {
 769               		.loc 1 276 3 is_stmt 1 view .LVU213
 276:../../../os/hal/src/hal_buffers.c ****   if (ibqp->brdptr >= ibqp->btop) {
 770               		.loc 1 276 16 is_stmt 0 view .LVU214
 771 0014 1996      		adiw r26,9
 772 0016 8D91      		ld r24,X+
 773 0018 9C91      		ld r25,X
 774 001a 1A97      		sbiw r26,9+1
 775 001c 1D96      		adiw r26,13
 776 001e 2D91      		ld r18,X+
 777 0020 3C91      		ld r19,X
 778 0022 1E97      		sbiw r26,13+1
 779 0024 820F      		add r24,r18
 780 0026 931F      		adc r25,r19
 781 0028 1A96      		adiw r26,9+1
 782 002a 9C93      		st X,r25
 783 002c 8E93      		st -X,r24
 784 002e 1997      		sbiw r26,9
 277:../../../os/hal/src/hal_buffers.c ****     ibqp->brdptr = ibqp->buffers;
 785               		.loc 1 277 3 is_stmt 1 view .LVU215
 277:../../../os/hal/src/hal_buffers.c ****     ibqp->brdptr = ibqp->buffers;
 786               		.loc 1 277 6 is_stmt 0 view .LVU216
 787 0030 1B96      		adiw r26,11
 788 0032 2D91      		ld r18,X+
 789 0034 3C91      		ld r19,X
 790 0036 1C97      		sbiw r26,11+1
 791 0038 8217      		cp r24,r18
 792 003a 9307      		cpc r25,r19
 793 003c 00F0      		brlo .L26
 278:../../../os/hal/src/hal_buffers.c ****   }
 794               		.loc 1 278 5 is_stmt 1 view .LVU217
 278:../../../os/hal/src/hal_buffers.c ****   }
 795               		.loc 1 278 18 is_stmt 0 view .LVU218
 796 003e 5196      		adiw r26,17
 797 0040 8D91      		ld r24,X+
 798 0042 9C91      		ld r25,X
 799 0044 5297      		sbiw r26,17+1
 800 0046 1A96      		adiw r26,9+1
 801 0048 9C93      		st X,r25
 802 004a 8E93      		st -X,r24
 803 004c 1997      		sbiw r26,9
 804               	.L26:
 282:../../../os/hal/src/hal_buffers.c **** 
 805               		.loc 1 282 3 is_stmt 1 view .LVU219
 282:../../../os/hal/src/hal_buffers.c **** 
 806               		.loc 1 282 13 is_stmt 0 view .LVU220
 807 004e 5496      		adiw r26,19+1
 808 0050 1C92      		st X,__zero_reg__
 809 0052 1E92      		st -X,__zero_reg__
 810 0054 5397      		sbiw r26,19
 285:../../../os/hal/src/hal_buffers.c ****     ibqp->notify(ibqp);
 811               		.loc 1 285 3 is_stmt 1 view .LVU221
 285:../../../os/hal/src/hal_buffers.c ****     ibqp->notify(ibqp);
 812               		.loc 1 285 11 is_stmt 0 view .LVU222
 813 0056 5796      		adiw r26,23
 814 0058 ED91      		ld r30,X+
 815 005a FC91      		ld r31,X
 816 005c 5897      		sbiw r26,23+1
 285:../../../os/hal/src/hal_buffers.c ****     ibqp->notify(ibqp);
 817               		.loc 1 285 6 view .LVU223
 818 005e 3097      		sbiw r30,0
 819 0060 01F0      		breq .L25
 820               		.loc 1 286 5 is_stmt 1 view .LVU224
 821 0062 CD01      		movw r24,r26
 822 0064 0994      		ijmp
 823               	.LVL39:
 824               	.L25:
 825               	/* epilogue start */
 287:../../../os/hal/src/hal_buffers.c ****   }
 288:../../../os/hal/src/hal_buffers.c **** }
 826               		.loc 1 288 1 is_stmt 0 view .LVU225
 827 0066 0895      		ret
 828               		.cfi_endproc
 829               	.LFE180:
 831               		.section	.text.ibqGetTimeout,"ax",@progbits
 832               	.global	ibqGetTimeout
 834               	ibqGetTimeout:
 835               	.LVL40:
 836               	.LFB181:
 289:../../../os/hal/src/hal_buffers.c **** 
 290:../../../os/hal/src/hal_buffers.c **** /**
 291:../../../os/hal/src/hal_buffers.c ****  * @brief   Input queue read with timeout.
 292:../../../os/hal/src/hal_buffers.c ****  * @details This function reads a byte value from an input queue. If
 293:../../../os/hal/src/hal_buffers.c ****  *          the queue is empty then the calling thread is suspended until a
 294:../../../os/hal/src/hal_buffers.c ****  *          new buffer arrives in the queue or a timeout occurs.
 295:../../../os/hal/src/hal_buffers.c ****  *
 296:../../../os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 297:../../../os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 298:../../../os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 299:../../../os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 300:../../../os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 301:../../../os/hal/src/hal_buffers.c ****  *                      .
 302:../../../os/hal/src/hal_buffers.c ****  * @return              A byte value from the queue.
 303:../../../os/hal/src/hal_buffers.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 304:../../../os/hal/src/hal_buffers.c ****  * @retval MSG_RESET    if the queue has been reset or has been put in
 305:../../../os/hal/src/hal_buffers.c ****  *                      suspended state.
 306:../../../os/hal/src/hal_buffers.c ****  *
 307:../../../os/hal/src/hal_buffers.c ****  * @api
 308:../../../os/hal/src/hal_buffers.c ****  */
 309:../../../os/hal/src/hal_buffers.c **** msg_t ibqGetTimeout(input_buffers_queue_t *ibqp, sysinterval_t timeout) {
 837               		.loc 1 309 73 is_stmt 1 view -0
 838               		.cfi_startproc
 839               		.loc 1 309 73 is_stmt 0 view .LVU227
 840 0000 0F93      		push r16
 841               	.LCFI10:
 842               		.cfi_def_cfa_offset 3
 843               		.cfi_offset 16, -2
 844 0002 1F93      		push r17
 845               	.LCFI11:
 846               		.cfi_def_cfa_offset 4
 847               		.cfi_offset 17, -3
 848 0004 CF93      		push r28
 849               	.LCFI12:
 850               		.cfi_def_cfa_offset 5
 851               		.cfi_offset 28, -4
 852 0006 DF93      		push r29
 853               	.LCFI13:
 854               		.cfi_def_cfa_offset 6
 855               		.cfi_offset 29, -5
 856               	/* prologue: function */
 857               	/* frame size = 0 */
 858               	/* stack size = 4 */
 859               	.L__stack_usage = 4
 860 0008 EC01      		movw r28,r24
 310:../../../os/hal/src/hal_buffers.c ****   msg_t msg;
 861               		.loc 1 310 3 is_stmt 1 view .LVU228
 311:../../../os/hal/src/hal_buffers.c **** 
 312:../../../os/hal/src/hal_buffers.c ****   osalSysLock();
 862               		.loc 1 312 3 view .LVU229
 863               	.LBB324:
 864               	.LBI324:
 509:../../../os/hal/osal/rt/osal.h **** 
 865               		.loc 2 509 20 view .LVU230
 866               	.LBE324:
 511:../../../os/hal/osal/rt/osal.h **** }
 867               		.loc 2 511 3 view .LVU231
 868               	.LBB329:
 869               	.LBB325:
 870               	.LBI325:
 353:../../../os/rt/include/chsys.h **** 
 871               		.loc 5 353 20 view .LVU232
 872               	.LBE325:
 873               	.LBE329:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 874               		.loc 5 355 3 view .LVU233
 875               	.LBB330:
 876               	.LBB328:
 877               	.LBB326:
 878               	.LBI326:
 435:../../../os/common/ports/AVR/chcore.h **** 
 879               		.loc 6 435 20 view .LVU234
 880               	.LBB327:
 437:../../../os/common/ports/AVR/chcore.h **** }
 881               		.loc 6 437 3 view .LVU235
 882               	/* #APP */
 883               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 884 000a F894      		cli
 885               	 ;  0 "" 2
 886               	/* #NOAPP */
 887               	.LBE327:
 888               	.LBE326:
 889               	.LBE328:
 890               	.LBE330:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 891               		.loc 5 356 34 view .LVU236
 357:../../../os/rt/include/chsys.h **** }
 892               		.loc 5 357 20 view .LVU237
 313:../../../os/hal/src/hal_buffers.c **** 
 314:../../../os/hal/src/hal_buffers.c ****   /* This condition indicates that a new buffer must be acquired.*/
 315:../../../os/hal/src/hal_buffers.c ****   if (ibqp->ptr == NULL) {
 893               		.loc 1 315 3 view .LVU238
 894               		.loc 1 315 11 is_stmt 0 view .LVU239
 895 000c EB89      		ldd r30,Y+19
 896 000e FC89      		ldd r31,Y+20
 897               		.loc 1 315 6 view .LVU240
 898 0010 3097      		sbiw r30,0
 899 0012 01F0      		breq .L39
 900               	.LVL41:
 901               	.L29:
 316:../../../os/hal/src/hal_buffers.c ****     msg = ibqGetFullBufferTimeoutS(ibqp, timeout);
 317:../../../os/hal/src/hal_buffers.c ****     if (msg != MSG_OK) {
 318:../../../os/hal/src/hal_buffers.c ****       osalSysUnlock();
 319:../../../os/hal/src/hal_buffers.c ****       return msg;
 320:../../../os/hal/src/hal_buffers.c ****     }
 321:../../../os/hal/src/hal_buffers.c ****   }
 322:../../../os/hal/src/hal_buffers.c **** 
 323:../../../os/hal/src/hal_buffers.c ****   /* Next byte from the buffer.*/
 324:../../../os/hal/src/hal_buffers.c ****   msg = (msg_t)*ibqp->ptr;
 902               		.loc 1 324 3 is_stmt 1 view .LVU241
 903               		.loc 1 324 7 is_stmt 0 view .LVU242
 904 0014 0191      		ld r16,Z+
 905 0016 10E0      		ldi r17,0
 906               	.LVL42:
 325:../../../os/hal/src/hal_buffers.c ****   ibqp->ptr++;
 907               		.loc 1 325 3 is_stmt 1 view .LVU243
 908               		.loc 1 325 12 is_stmt 0 view .LVU244
 909 0018 FC8B      		std Y+20,r31
 910 001a EB8B      		std Y+19,r30
 326:../../../os/hal/src/hal_buffers.c **** 
 327:../../../os/hal/src/hal_buffers.c ****   /* If the current buffer has been fully read then it is returned as
 328:../../../os/hal/src/hal_buffers.c ****      empty in the queue.*/
 329:../../../os/hal/src/hal_buffers.c ****   if (ibqp->ptr >= ibqp->top) {
 911               		.loc 1 329 3 is_stmt 1 view .LVU245
 912               		.loc 1 329 6 is_stmt 0 view .LVU246
 913 001c 8D89      		ldd r24,Y+21
 914 001e 9E89      		ldd r25,Y+22
 915 0020 E817      		cp r30,r24
 916 0022 F907      		cpc r31,r25
 917 0024 00F0      		brlo .L33
 330:../../../os/hal/src/hal_buffers.c ****     ibqReleaseEmptyBufferS(ibqp);
 918               		.loc 1 330 5 is_stmt 1 view .LVU247
 919               	.LVL43:
 920               	.LBB331:
 921               	.LBI331:
 269:../../../os/hal/src/hal_buffers.c **** 
 922               		.loc 1 269 8 view .LVU248
 923               	.LBB332:
 271:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!ibqIsEmptyI(ibqp), "buffers queue empty");
 924               		.loc 1 271 23 view .LVU249
 272:../../../os/hal/src/hal_buffers.c **** 
 925               		.loc 1 272 3 view .LVU250
 272:../../../os/hal/src/hal_buffers.c **** 
 926               		.loc 1 272 3 view .LVU251
 275:../../../os/hal/src/hal_buffers.c ****   ibqp->brdptr += ibqp->bsize;
 927               		.loc 1 275 3 view .LVU252
 275:../../../os/hal/src/hal_buffers.c ****   ibqp->brdptr += ibqp->bsize;
 928               		.loc 1 275 7 is_stmt 0 view .LVU253
 929 0026 8D81      		ldd r24,Y+5
 930 0028 9E81      		ldd r25,Y+6
 275:../../../os/hal/src/hal_buffers.c ****   ibqp->brdptr += ibqp->bsize;
 931               		.loc 1 275 17 view .LVU254
 932 002a 0197      		sbiw r24,1
 933 002c 9E83      		std Y+6,r25
 934 002e 8D83      		std Y+5,r24
 276:../../../os/hal/src/hal_buffers.c ****   if (ibqp->brdptr >= ibqp->btop) {
 935               		.loc 1 276 3 is_stmt 1 view .LVU255
 276:../../../os/hal/src/hal_buffers.c ****   if (ibqp->brdptr >= ibqp->btop) {
 936               		.loc 1 276 16 is_stmt 0 view .LVU256
 937 0030 8985      		ldd r24,Y+9
 938 0032 9A85      		ldd r25,Y+10
 939 0034 2D85      		ldd r18,Y+13
 940 0036 3E85      		ldd r19,Y+14
 941 0038 820F      		add r24,r18
 942 003a 931F      		adc r25,r19
 943 003c 9A87      		std Y+10,r25
 944 003e 8987      		std Y+9,r24
 277:../../../os/hal/src/hal_buffers.c ****     ibqp->brdptr = ibqp->buffers;
 945               		.loc 1 277 3 is_stmt 1 view .LVU257
 277:../../../os/hal/src/hal_buffers.c ****     ibqp->brdptr = ibqp->buffers;
 946               		.loc 1 277 6 is_stmt 0 view .LVU258
 947 0040 2B85      		ldd r18,Y+11
 948 0042 3C85      		ldd r19,Y+12
 949 0044 8217      		cp r24,r18
 950 0046 9307      		cpc r25,r19
 951 0048 00F0      		brlo .L34
 278:../../../os/hal/src/hal_buffers.c ****   }
 952               		.loc 1 278 5 is_stmt 1 view .LVU259
 278:../../../os/hal/src/hal_buffers.c ****   }
 953               		.loc 1 278 18 is_stmt 0 view .LVU260
 954 004a 8989      		ldd r24,Y+17
 955 004c 9A89      		ldd r25,Y+18
 956 004e 9A87      		std Y+10,r25
 957 0050 8987      		std Y+9,r24
 958               	.L34:
 282:../../../os/hal/src/hal_buffers.c **** 
 959               		.loc 1 282 3 is_stmt 1 view .LVU261
 282:../../../os/hal/src/hal_buffers.c **** 
 960               		.loc 1 282 13 is_stmt 0 view .LVU262
 961 0052 1C8A      		std Y+20,__zero_reg__
 962 0054 1B8A      		std Y+19,__zero_reg__
 285:../../../os/hal/src/hal_buffers.c ****     ibqp->notify(ibqp);
 963               		.loc 1 285 3 is_stmt 1 view .LVU263
 285:../../../os/hal/src/hal_buffers.c ****     ibqp->notify(ibqp);
 964               		.loc 1 285 11 is_stmt 0 view .LVU264
 965 0056 EF89      		ldd r30,Y+23
 966 0058 F88D      		ldd r31,Y+24
 285:../../../os/hal/src/hal_buffers.c ****     ibqp->notify(ibqp);
 967               		.loc 1 285 6 view .LVU265
 968 005a 3097      		sbiw r30,0
 969 005c 01F0      		breq .L33
 286:../../../os/hal/src/hal_buffers.c ****   }
 970               		.loc 1 286 5 is_stmt 1 view .LVU266
 971 005e CE01      		movw r24,r28
 972 0060 0995      		icall
 973               	.LVL44:
 974               	.L33:
 286:../../../os/hal/src/hal_buffers.c ****   }
 975               		.loc 1 286 5 is_stmt 0 view .LVU267
 976               	.LBE332:
 977               	.LBE331:
 331:../../../os/hal/src/hal_buffers.c ****   }
 332:../../../os/hal/src/hal_buffers.c **** 
 333:../../../os/hal/src/hal_buffers.c ****   osalSysUnlock();
 978               		.loc 1 333 3 is_stmt 1 view .LVU268
 979               	.LBB333:
 980               	.LBI333:
 520:../../../os/hal/osal/rt/osal.h **** 
 981               		.loc 2 520 20 view .LVU269
 982               	.LBE333:
 522:../../../os/hal/osal/rt/osal.h **** }
 983               		.loc 2 522 3 view .LVU270
 984               	.LBB338:
 985               	.LBB334:
 986               	.LBI334:
 365:../../../os/rt/include/chsys.h **** 
 987               		.loc 5 365 20 view .LVU271
 988               	.LBB335:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 989               		.loc 5 367 22 view .LVU272
 368:../../../os/rt/include/chsys.h **** 
 990               		.loc 5 368 33 view .LVU273
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 991               		.loc 5 374 3 view .LVU274
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 992               		.loc 5 374 3 view .LVU275
 993               		.loc 5 378 3 view .LVU276
 994               	.LBB336:
 995               	.LBI336:
 445:../../../os/common/ports/AVR/chcore.h **** 
 996               		.loc 6 445 20 view .LVU277
 997               	.LBB337:
 998               		.loc 6 447 3 view .LVU278
 999               	/* #APP */
 1000               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1001 0062 7894      		sei
 1002               	 ;  0 "" 2
 1003               	/* #NOAPP */
 1004               	.LBE337:
 1005               	.LBE336:
 1006               	.LBE335:
 1007               	.LBE334:
 1008               	.LBE338:
 334:../../../os/hal/src/hal_buffers.c ****   return msg;
 1009               		.loc 1 334 3 view .LVU279
 335:../../../os/hal/src/hal_buffers.c **** }
 1010               		.loc 1 335 1 is_stmt 0 view .LVU280
 1011 0064 C801      		movw r24,r16
 1012               	/* epilogue start */
 1013 0066 DF91      		pop r29
 1014 0068 CF91      		pop r28
 1015               	.LVL45:
 1016               		.loc 1 335 1 view .LVU281
 1017 006a 1F91      		pop r17
 1018 006c 0F91      		pop r16
 1019               	.LVL46:
 1020               		.loc 1 335 1 view .LVU282
 1021 006e 0895      		ret
 1022               	.LVL47:
 1023               	.L39:
 316:../../../os/hal/src/hal_buffers.c ****     if (msg != MSG_OK) {
 1024               		.loc 1 316 5 is_stmt 1 view .LVU283
 316:../../../os/hal/src/hal_buffers.c ****     if (msg != MSG_OK) {
 1025               		.loc 1 316 11 is_stmt 0 view .LVU284
 1026 0070 0E94 0000 		call ibqGetFullBufferTimeoutS
 1027               	.LVL48:
 316:../../../os/hal/src/hal_buffers.c ****     if (msg != MSG_OK) {
 1028               		.loc 1 316 11 view .LVU285
 1029 0074 8C01      		movw r16,r24
 1030               	.LVL49:
 317:../../../os/hal/src/hal_buffers.c ****       osalSysUnlock();
 1031               		.loc 1 317 5 is_stmt 1 view .LVU286
 317:../../../os/hal/src/hal_buffers.c ****       osalSysUnlock();
 1032               		.loc 1 317 8 is_stmt 0 view .LVU287
 1033 0076 892B      		or r24,r25
 1034 0078 01F4      		brne .L33
 1035 007a EB89      		ldd r30,Y+19
 1036 007c FC89      		ldd r31,Y+20
 1037 007e 00C0      		rjmp .L29
 1038               		.cfi_endproc
 1039               	.LFE181:
 1041               		.section	.text.ibqReadTimeout,"ax",@progbits
 1042               	.global	ibqReadTimeout
 1044               	ibqReadTimeout:
 1045               	.LVL50:
 1046               	.LFB182:
 336:../../../os/hal/src/hal_buffers.c **** 
 337:../../../os/hal/src/hal_buffers.c **** /**
 338:../../../os/hal/src/hal_buffers.c ****  * @brief   Input queue read with timeout.
 339:../../../os/hal/src/hal_buffers.c ****  * @details The function reads data from an input queue into a buffer.
 340:../../../os/hal/src/hal_buffers.c ****  *          The operation completes when the specified amount of data has been
 341:../../../os/hal/src/hal_buffers.c ****  *          transferred or after the specified timeout or if the queue has
 342:../../../os/hal/src/hal_buffers.c ****  *          been reset.
 343:../../../os/hal/src/hal_buffers.c ****  *
 344:../../../os/hal/src/hal_buffers.c ****  * @param[in] ibqp      pointer to the @p input_buffers_queue_t object
 345:../../../os/hal/src/hal_buffers.c ****  * @param[out] bp       pointer to the data buffer
 346:../../../os/hal/src/hal_buffers.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 347:../../../os/hal/src/hal_buffers.c ****  *                      value 0 is reserved
 348:../../../os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 349:../../../os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 350:../../../os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 351:../../../os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 352:../../../os/hal/src/hal_buffers.c ****  *                      .
 353:../../../os/hal/src/hal_buffers.c ****  * @return              The number of bytes effectively transferred.
 354:../../../os/hal/src/hal_buffers.c ****  * @retval 0            if a timeout occurred.
 355:../../../os/hal/src/hal_buffers.c ****  *
 356:../../../os/hal/src/hal_buffers.c ****  * @api
 357:../../../os/hal/src/hal_buffers.c ****  */
 358:../../../os/hal/src/hal_buffers.c **** size_t ibqReadTimeout(input_buffers_queue_t *ibqp, uint8_t *bp,
 359:../../../os/hal/src/hal_buffers.c ****                       size_t n, sysinterval_t timeout) {
 1047               		.loc 1 359 56 is_stmt 1 view -0
 1048               		.cfi_startproc
 1049               		.loc 1 359 56 is_stmt 0 view .LVU289
 1050 0000 4F92      		push r4
 1051               	.LCFI14:
 1052               		.cfi_def_cfa_offset 3
 1053               		.cfi_offset 4, -2
 1054 0002 5F92      		push r5
 1055               	.LCFI15:
 1056               		.cfi_def_cfa_offset 4
 1057               		.cfi_offset 5, -3
 1058 0004 6F92      		push r6
 1059               	.LCFI16:
 1060               		.cfi_def_cfa_offset 5
 1061               		.cfi_offset 6, -4
 1062 0006 7F92      		push r7
 1063               	.LCFI17:
 1064               		.cfi_def_cfa_offset 6
 1065               		.cfi_offset 7, -5
 1066 0008 8F92      		push r8
 1067               	.LCFI18:
 1068               		.cfi_def_cfa_offset 7
 1069               		.cfi_offset 8, -6
 1070 000a 9F92      		push r9
 1071               	.LCFI19:
 1072               		.cfi_def_cfa_offset 8
 1073               		.cfi_offset 9, -7
 1074 000c AF92      		push r10
 1075               	.LCFI20:
 1076               		.cfi_def_cfa_offset 9
 1077               		.cfi_offset 10, -8
 1078 000e BF92      		push r11
 1079               	.LCFI21:
 1080               		.cfi_def_cfa_offset 10
 1081               		.cfi_offset 11, -9
 1082 0010 CF92      		push r12
 1083               	.LCFI22:
 1084               		.cfi_def_cfa_offset 11
 1085               		.cfi_offset 12, -10
 1086 0012 DF92      		push r13
 1087               	.LCFI23:
 1088               		.cfi_def_cfa_offset 12
 1089               		.cfi_offset 13, -11
 1090 0014 EF92      		push r14
 1091               	.LCFI24:
 1092               		.cfi_def_cfa_offset 13
 1093               		.cfi_offset 14, -12
 1094 0016 FF92      		push r15
 1095               	.LCFI25:
 1096               		.cfi_def_cfa_offset 14
 1097               		.cfi_offset 15, -13
 1098 0018 0F93      		push r16
 1099               	.LCFI26:
 1100               		.cfi_def_cfa_offset 15
 1101               		.cfi_offset 16, -14
 1102 001a 1F93      		push r17
 1103               	.LCFI27:
 1104               		.cfi_def_cfa_offset 16
 1105               		.cfi_offset 17, -15
 1106 001c CF93      		push r28
 1107               	.LCFI28:
 1108               		.cfi_def_cfa_offset 17
 1109               		.cfi_offset 28, -16
 1110 001e DF93      		push r29
 1111               	.LCFI29:
 1112               		.cfi_def_cfa_offset 18
 1113               		.cfi_offset 29, -17
 1114               	/* prologue: function */
 1115               	/* frame size = 0 */
 1116               	/* stack size = 16 */
 1117               	.L__stack_usage = 16
 1118 0020 EC01      		movw r28,r24
 1119 0022 6B01      		movw r12,r22
 1120 0024 5A01      		movw r10,r20
 1121 0026 4901      		movw r8,r18
 360:../../../os/hal/src/hal_buffers.c ****   size_t r = 0;
 1122               		.loc 1 360 3 is_stmt 1 view .LVU290
 1123               	.LVL51:
 361:../../../os/hal/src/hal_buffers.c ****   systime_t deadline;
 1124               		.loc 1 361 3 view .LVU291
 362:../../../os/hal/src/hal_buffers.c **** 
 363:../../../os/hal/src/hal_buffers.c ****   osalDbgCheck(n > 0U);
 1125               		.loc 1 363 3 view .LVU292
 1126               		.loc 1 363 3 view .LVU293
 364:../../../os/hal/src/hal_buffers.c **** 
 365:../../../os/hal/src/hal_buffers.c ****   osalSysLock();
 1127               		.loc 1 365 3 view .LVU294
 1128               	.LBB339:
 1129               	.LBI339:
 509:../../../os/hal/osal/rt/osal.h **** 
 1130               		.loc 2 509 20 view .LVU295
 1131               	.LBE339:
 511:../../../os/hal/osal/rt/osal.h **** }
 1132               		.loc 2 511 3 view .LVU296
 1133               	.LBB344:
 1134               	.LBB340:
 1135               	.LBI340:
 353:../../../os/rt/include/chsys.h **** 
 1136               		.loc 5 353 20 view .LVU297
 1137               	.LBE340:
 1138               	.LBE344:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1139               		.loc 5 355 3 view .LVU298
 1140               	.LBB345:
 1141               	.LBB343:
 1142               	.LBB341:
 1143               	.LBI341:
 435:../../../os/common/ports/AVR/chcore.h **** 
 1144               		.loc 6 435 20 view .LVU299
 1145               	.LBB342:
 437:../../../os/common/ports/AVR/chcore.h **** }
 1146               		.loc 6 437 3 view .LVU300
 1147               	/* #APP */
 1148               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 1149 0028 F894      		cli
 1150               	 ;  0 "" 2
 1151               	/* #NOAPP */
 1152               	.LBE342:
 1153               	.LBE341:
 1154               	.LBE343:
 1155               	.LBE345:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 1156               		.loc 5 356 34 view .LVU301
 357:../../../os/rt/include/chsys.h **** }
 1157               		.loc 5 357 20 view .LVU302
 366:../../../os/hal/src/hal_buffers.c **** 
 367:../../../os/hal/src/hal_buffers.c ****   /* Time window for the whole operation.*/
 368:../../../os/hal/src/hal_buffers.c ****   deadline = osalTimeAddX(osalOsGetSystemTimeX(), timeout);
 1158               		.loc 1 368 3 view .LVU303
 1159               	.LBB346:
 1160               	.LBI346:
 634:../../../os/hal/osal/rt/osal.h **** 
 1161               		.loc 2 634 25 view .LVU304
 1162               	.LBE346:
 636:../../../os/hal/osal/rt/osal.h **** }
 1163               		.loc 2 636 3 view .LVU305
 1164               	.LBB354:
 1165               	.LBB347:
 1166               	.LBI347:
 1167               		.file 7 "../../../os/rt/include/chvt.h"
   1:../../../os/rt/include/chvt.h **** /*
   2:../../../os/rt/include/chvt.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/rt/include/chvt.h **** 
   4:../../../os/rt/include/chvt.h ****     This file is part of ChibiOS.
   5:../../../os/rt/include/chvt.h **** 
   6:../../../os/rt/include/chvt.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/rt/include/chvt.h ****     it under the terms of the GNU General Public License as published by
   8:../../../os/rt/include/chvt.h ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/rt/include/chvt.h ****     (at your option) any later version.
  10:../../../os/rt/include/chvt.h **** 
  11:../../../os/rt/include/chvt.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/rt/include/chvt.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/rt/include/chvt.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/rt/include/chvt.h ****     GNU General Public License for more details.
  15:../../../os/rt/include/chvt.h **** 
  16:../../../os/rt/include/chvt.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/rt/include/chvt.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/rt/include/chvt.h **** */
  19:../../../os/rt/include/chvt.h **** 
  20:../../../os/rt/include/chvt.h **** /**
  21:../../../os/rt/include/chvt.h ****  * @file    chvt.h
  22:../../../os/rt/include/chvt.h ****  * @brief   Time and Virtual Timers module macros and structures.
  23:../../../os/rt/include/chvt.h ****  *
  24:../../../os/rt/include/chvt.h ****  * @addtogroup time
  25:../../../os/rt/include/chvt.h ****  * @{
  26:../../../os/rt/include/chvt.h ****  */
  27:../../../os/rt/include/chvt.h **** 
  28:../../../os/rt/include/chvt.h **** #ifndef CHVT_H
  29:../../../os/rt/include/chvt.h **** #define CHVT_H
  30:../../../os/rt/include/chvt.h **** 
  31:../../../os/rt/include/chvt.h **** /*===========================================================================*/
  32:../../../os/rt/include/chvt.h **** /* Module constants.                                                         */
  33:../../../os/rt/include/chvt.h **** /*===========================================================================*/
  34:../../../os/rt/include/chvt.h **** 
  35:../../../os/rt/include/chvt.h **** /*===========================================================================*/
  36:../../../os/rt/include/chvt.h **** /* Module pre-compile time settings.                                         */
  37:../../../os/rt/include/chvt.h **** /*===========================================================================*/
  38:../../../os/rt/include/chvt.h **** 
  39:../../../os/rt/include/chvt.h **** /*===========================================================================*/
  40:../../../os/rt/include/chvt.h **** /* Derived constants and error checks.                                       */
  41:../../../os/rt/include/chvt.h **** /*===========================================================================*/
  42:../../../os/rt/include/chvt.h **** 
  43:../../../os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA < 0) || (CH_CFG_ST_TIMEDELTA == 1)
  44:../../../os/rt/include/chvt.h **** #error "invalid CH_CFG_ST_TIMEDELTA specified, must "                       \
  45:../../../os/rt/include/chvt.h ****        "be zero or greater than one"
  46:../../../os/rt/include/chvt.h **** #endif
  47:../../../os/rt/include/chvt.h **** 
  48:../../../os/rt/include/chvt.h **** //#if (CH_CFG_ST_TIMEDELTA > 0) && (CH_CFG_TIME_QUANTUM > 0)
  49:../../../os/rt/include/chvt.h **** //#error "CH_CFG_TIME_QUANTUM not supported in tickless mode"
  50:../../../os/rt/include/chvt.h **** //#endif
  51:../../../os/rt/include/chvt.h **** 
  52:../../../os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_DBG_THREADS_PROFILING == TRUE)
  53:../../../os/rt/include/chvt.h **** #error "CH_DBG_THREADS_PROFILING not supported in tickless mode"
  54:../../../os/rt/include/chvt.h **** #endif
  55:../../../os/rt/include/chvt.h **** 
  56:../../../os/rt/include/chvt.h **** /*===========================================================================*/
  57:../../../os/rt/include/chvt.h **** /* Module data structures and types.                                         */
  58:../../../os/rt/include/chvt.h **** /*===========================================================================*/
  59:../../../os/rt/include/chvt.h **** 
  60:../../../os/rt/include/chvt.h **** /*===========================================================================*/
  61:../../../os/rt/include/chvt.h **** /* Module macros.                                                            */
  62:../../../os/rt/include/chvt.h **** /*===========================================================================*/
  63:../../../os/rt/include/chvt.h **** 
  64:../../../os/rt/include/chvt.h **** /*===========================================================================*/
  65:../../../os/rt/include/chvt.h **** /* External declarations.                                                    */
  66:../../../os/rt/include/chvt.h **** /*===========================================================================*/
  67:../../../os/rt/include/chvt.h **** 
  68:../../../os/rt/include/chvt.h **** /*
  69:../../../os/rt/include/chvt.h ****  * Virtual Timers APIs.
  70:../../../os/rt/include/chvt.h ****  */
  71:../../../os/rt/include/chvt.h **** #ifdef __cplusplus
  72:../../../os/rt/include/chvt.h **** extern "C" {
  73:../../../os/rt/include/chvt.h **** #endif
  74:../../../os/rt/include/chvt.h ****   void _vt_init(void);
  75:../../../os/rt/include/chvt.h ****   void chVTDoSetI(virtual_timer_t *vtp, sysinterval_t delay,
  76:../../../os/rt/include/chvt.h ****                   vtfunc_t vtfunc, void *par);
  77:../../../os/rt/include/chvt.h ****   void chVTDoResetI(virtual_timer_t *vtp);
  78:../../../os/rt/include/chvt.h **** #ifdef __cplusplus
  79:../../../os/rt/include/chvt.h **** }
  80:../../../os/rt/include/chvt.h **** #endif
  81:../../../os/rt/include/chvt.h **** 
  82:../../../os/rt/include/chvt.h **** /*===========================================================================*/
  83:../../../os/rt/include/chvt.h **** /* Module inline functions.                                                  */
  84:../../../os/rt/include/chvt.h **** /*===========================================================================*/
  85:../../../os/rt/include/chvt.h **** 
  86:../../../os/rt/include/chvt.h **** /**
  87:../../../os/rt/include/chvt.h ****  * @brief   Initializes a @p virtual_timer_t object.
  88:../../../os/rt/include/chvt.h ****  * @note    Initializing a timer object is not strictly required because
  89:../../../os/rt/include/chvt.h ****  *          the function @p chVTSetI() initializes the object too. This
  90:../../../os/rt/include/chvt.h ****  *          function is only useful if you need to perform a @p chVTIsArmed()
  91:../../../os/rt/include/chvt.h ****  *          check before calling @p chVTSetI().
  92:../../../os/rt/include/chvt.h ****  *
  93:../../../os/rt/include/chvt.h ****  * @param[out] vtp      the @p virtual_timer_t structure pointer
  94:../../../os/rt/include/chvt.h ****  *
  95:../../../os/rt/include/chvt.h ****  * @init
  96:../../../os/rt/include/chvt.h ****  */
  97:../../../os/rt/include/chvt.h **** static inline void chVTObjectInit(virtual_timer_t *vtp) {
  98:../../../os/rt/include/chvt.h **** 
  99:../../../os/rt/include/chvt.h ****   vtp->func = NULL;
 100:../../../os/rt/include/chvt.h **** }
 101:../../../os/rt/include/chvt.h **** 
 102:../../../os/rt/include/chvt.h **** /**
 103:../../../os/rt/include/chvt.h ****  * @brief   Current system time.
 104:../../../os/rt/include/chvt.h ****  * @details Returns the number of system ticks since the @p chSysInit()
 105:../../../os/rt/include/chvt.h ****  *          invocation.
 106:../../../os/rt/include/chvt.h ****  * @note    The counter can reach its maximum and then restart from zero.
 107:../../../os/rt/include/chvt.h ****  * @note    This function can be called from any context but its atomicity
 108:../../../os/rt/include/chvt.h ****  *          is not guaranteed on architectures whose word size is less than
 109:../../../os/rt/include/chvt.h ****  *          @p systime_t size.
 110:../../../os/rt/include/chvt.h ****  *
 111:../../../os/rt/include/chvt.h ****  * @return              The system time in ticks.
 112:../../../os/rt/include/chvt.h ****  *
 113:../../../os/rt/include/chvt.h ****  * @xclass
 114:../../../os/rt/include/chvt.h ****  */
 115:../../../os/rt/include/chvt.h **** static inline systime_t chVTGetSystemTimeX(void) {
 1168               		.loc 7 115 25 view .LVU306
 1169               	.LBE347:
 1170               	.LBE354:
 116:../../../os/rt/include/chvt.h **** 
 117:../../../os/rt/include/chvt.h **** #if CH_CFG_ST_TIMEDELTA == 0
 118:../../../os/rt/include/chvt.h ****   return ch.vtlist.systime;
 119:../../../os/rt/include/chvt.h **** #else /* CH_CFG_ST_TIMEDELTA > 0 */
 120:../../../os/rt/include/chvt.h ****   return port_timer_get_time();
 1171               		.loc 7 120 3 view .LVU307
 1172               	.LBB355:
 1173               	.LBB352:
 1174               	.LBB348:
 1175               	.LBI348:
 1176               		.file 8 "../../../os/common/ports/AVR/chcore_timer.h"
   1:../../../os/common/ports/AVR/chcore_timer.h **** /*
   2:../../../os/common/ports/AVR/chcore_timer.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/common/ports/AVR/chcore_timer.h **** 
   4:../../../os/common/ports/AVR/chcore_timer.h ****     This file is part of ChibiOS.
   5:../../../os/common/ports/AVR/chcore_timer.h **** 
   6:../../../os/common/ports/AVR/chcore_timer.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/common/ports/AVR/chcore_timer.h ****     it under the terms of the GNU General Public License as published by
   8:../../../os/common/ports/AVR/chcore_timer.h ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/common/ports/AVR/chcore_timer.h ****     (at your option) any later version.
  10:../../../os/common/ports/AVR/chcore_timer.h **** 
  11:../../../os/common/ports/AVR/chcore_timer.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/common/ports/AVR/chcore_timer.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/common/ports/AVR/chcore_timer.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/common/ports/AVR/chcore_timer.h ****     GNU General Public License for more details.
  15:../../../os/common/ports/AVR/chcore_timer.h **** 
  16:../../../os/common/ports/AVR/chcore_timer.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/common/ports/AVR/chcore_timer.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/common/ports/AVR/chcore_timer.h **** */
  19:../../../os/common/ports/AVR/chcore_timer.h **** 
  20:../../../os/common/ports/AVR/chcore_timer.h **** /**
  21:../../../os/common/ports/AVR/chcore_timer.h ****  * @file    AVR/chcore_timer.h
  22:../../../os/common/ports/AVR/chcore_timer.h ****  * @brief   System timer header file.
  23:../../../os/common/ports/AVR/chcore_timer.h ****  *
  24:../../../os/common/ports/AVR/chcore_timer.h ****  * @addtogroup AVR_TIMER
  25:../../../os/common/ports/AVR/chcore_timer.h ****  * @{
  26:../../../os/common/ports/AVR/chcore_timer.h ****  */
  27:../../../os/common/ports/AVR/chcore_timer.h **** 
  28:../../../os/common/ports/AVR/chcore_timer.h **** #ifndef CHCORE_TIMER_H
  29:../../../os/common/ports/AVR/chcore_timer.h **** #define CHCORE_TIMER_H
  30:../../../os/common/ports/AVR/chcore_timer.h **** 
  31:../../../os/common/ports/AVR/chcore_timer.h **** /* This is the only header in the HAL designed to be include-able alone.*/
  32:../../../os/common/ports/AVR/chcore_timer.h **** #include "hal_st.h"
  33:../../../os/common/ports/AVR/chcore_timer.h **** 
  34:../../../os/common/ports/AVR/chcore_timer.h **** /*===========================================================================*/
  35:../../../os/common/ports/AVR/chcore_timer.h **** /* Module constants.                                                         */
  36:../../../os/common/ports/AVR/chcore_timer.h **** /*===========================================================================*/
  37:../../../os/common/ports/AVR/chcore_timer.h **** 
  38:../../../os/common/ports/AVR/chcore_timer.h **** /*===========================================================================*/
  39:../../../os/common/ports/AVR/chcore_timer.h **** /* Module pre-compile time settings.                                         */
  40:../../../os/common/ports/AVR/chcore_timer.h **** /*===========================================================================*/
  41:../../../os/common/ports/AVR/chcore_timer.h **** 
  42:../../../os/common/ports/AVR/chcore_timer.h **** /*===========================================================================*/
  43:../../../os/common/ports/AVR/chcore_timer.h **** /* Derived constants and error checks.                                       */
  44:../../../os/common/ports/AVR/chcore_timer.h **** /*===========================================================================*/
  45:../../../os/common/ports/AVR/chcore_timer.h **** 
  46:../../../os/common/ports/AVR/chcore_timer.h **** /*===========================================================================*/
  47:../../../os/common/ports/AVR/chcore_timer.h **** /* Module data structures and types.                                         */
  48:../../../os/common/ports/AVR/chcore_timer.h **** /*===========================================================================*/
  49:../../../os/common/ports/AVR/chcore_timer.h **** 
  50:../../../os/common/ports/AVR/chcore_timer.h **** /*===========================================================================*/
  51:../../../os/common/ports/AVR/chcore_timer.h **** /* Module macros.                                                            */
  52:../../../os/common/ports/AVR/chcore_timer.h **** /*===========================================================================*/
  53:../../../os/common/ports/AVR/chcore_timer.h **** 
  54:../../../os/common/ports/AVR/chcore_timer.h **** /*===========================================================================*/
  55:../../../os/common/ports/AVR/chcore_timer.h **** /* External declarations.                                                    */
  56:../../../os/common/ports/AVR/chcore_timer.h **** /*===========================================================================*/
  57:../../../os/common/ports/AVR/chcore_timer.h **** 
  58:../../../os/common/ports/AVR/chcore_timer.h **** /*===========================================================================*/
  59:../../../os/common/ports/AVR/chcore_timer.h **** /* Module inline functions.                                                  */
  60:../../../os/common/ports/AVR/chcore_timer.h **** /*===========================================================================*/
  61:../../../os/common/ports/AVR/chcore_timer.h **** 
  62:../../../os/common/ports/AVR/chcore_timer.h **** /**
  63:../../../os/common/ports/AVR/chcore_timer.h ****  * @brief   Starts the alarm.
  64:../../../os/common/ports/AVR/chcore_timer.h ****  * @note    Makes sure that no spurious alarms are triggered after
  65:../../../os/common/ports/AVR/chcore_timer.h ****  *          this call.
  66:../../../os/common/ports/AVR/chcore_timer.h ****  *
  67:../../../os/common/ports/AVR/chcore_timer.h ****  * @param[in] time      the time to be set for the first alarm
  68:../../../os/common/ports/AVR/chcore_timer.h ****  *
  69:../../../os/common/ports/AVR/chcore_timer.h ****  * @notapi
  70:../../../os/common/ports/AVR/chcore_timer.h ****  */
  71:../../../os/common/ports/AVR/chcore_timer.h **** static inline void port_timer_start_alarm(systime_t time) {
  72:../../../os/common/ports/AVR/chcore_timer.h **** 
  73:../../../os/common/ports/AVR/chcore_timer.h ****   stStartAlarm(time);
  74:../../../os/common/ports/AVR/chcore_timer.h **** }
  75:../../../os/common/ports/AVR/chcore_timer.h **** 
  76:../../../os/common/ports/AVR/chcore_timer.h **** /**
  77:../../../os/common/ports/AVR/chcore_timer.h ****  * @brief   Stops the alarm interrupt.
  78:../../../os/common/ports/AVR/chcore_timer.h ****  *
  79:../../../os/common/ports/AVR/chcore_timer.h ****  * @notapi
  80:../../../os/common/ports/AVR/chcore_timer.h ****  */
  81:../../../os/common/ports/AVR/chcore_timer.h **** static inline void port_timer_stop_alarm(void) {
  82:../../../os/common/ports/AVR/chcore_timer.h **** 
  83:../../../os/common/ports/AVR/chcore_timer.h ****   stStopAlarm();
  84:../../../os/common/ports/AVR/chcore_timer.h **** }
  85:../../../os/common/ports/AVR/chcore_timer.h **** 
  86:../../../os/common/ports/AVR/chcore_timer.h **** /**
  87:../../../os/common/ports/AVR/chcore_timer.h ****  * @brief   Sets the alarm time.
  88:../../../os/common/ports/AVR/chcore_timer.h ****  *
  89:../../../os/common/ports/AVR/chcore_timer.h ****  * @param[in] time      the time to be set for the next alarm
  90:../../../os/common/ports/AVR/chcore_timer.h ****  *
  91:../../../os/common/ports/AVR/chcore_timer.h ****  * @notapi
  92:../../../os/common/ports/AVR/chcore_timer.h ****  */
  93:../../../os/common/ports/AVR/chcore_timer.h **** static inline void port_timer_set_alarm(systime_t time) {
  94:../../../os/common/ports/AVR/chcore_timer.h **** 
  95:../../../os/common/ports/AVR/chcore_timer.h ****   stSetAlarm(time);
  96:../../../os/common/ports/AVR/chcore_timer.h **** }
  97:../../../os/common/ports/AVR/chcore_timer.h **** 
  98:../../../os/common/ports/AVR/chcore_timer.h **** /**
  99:../../../os/common/ports/AVR/chcore_timer.h ****  * @brief   Returns the system time.
 100:../../../os/common/ports/AVR/chcore_timer.h ****  *
 101:../../../os/common/ports/AVR/chcore_timer.h ****  * @return              The system time.
 102:../../../os/common/ports/AVR/chcore_timer.h ****  *
 103:../../../os/common/ports/AVR/chcore_timer.h ****  * @notapi
 104:../../../os/common/ports/AVR/chcore_timer.h ****  */
 105:../../../os/common/ports/AVR/chcore_timer.h **** static inline systime_t port_timer_get_time(void) {
 1177               		.loc 8 105 25 view .LVU308
 1178               	.LBE348:
 1179               	.LBE352:
 1180               	.LBE355:
 106:../../../os/common/ports/AVR/chcore_timer.h **** 
 107:../../../os/common/ports/AVR/chcore_timer.h ****   return stGetCounter();
 1181               		.loc 8 107 3 view .LVU309
 1182               	.LBB356:
 1183               	.LBB353:
 1184               	.LBB351:
 1185               	.LBB349:
 1186               	.LBI349:
 1187               		.file 9 "../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h"
   1:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*
   2:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
   4:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     you may not use this file except in compliance with the License.
   6:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     You may obtain a copy of the License at
   7:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
   8:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  10:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     Unless required by applicable law or agreed to in writing, software
  11:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     See the License for the specific language governing permissions and
  14:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****     limitations under the License.
  15:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** */
  16:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  17:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /**
  18:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @file    TIMv1/hal_st_lld.h
  19:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @brief   AVR/MEGA ST subsystem low level driver header.
  20:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @details This header is designed to be include-able without having to
  21:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *          include other files from the HAL.
  22:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *
  23:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @addtogroup AVR
  24:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @{
  25:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  */
  26:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  27:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #ifndef HAL_ST_LLD_H
  28:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #define HAL_ST_LLD_H
  29:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  30:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #include <avr/io.h>
  31:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  32:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  33:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* Driver constants.                                                        */
  34:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  35:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  36:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  37:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* Driver pre-compile time settings.                                        */
  38:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  39:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  40:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* TODO: for models that have many timers, could add AVR_ST_USE_TIMER.      */
  41:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  42:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  43:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* Derived constants and error checks.                                      */
  44:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  45:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  46:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* TODO: error checks for valid timer selected.                             */
  47:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  48:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  49:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* Driver data structures and types.                                        */
  50:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  51:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  52:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  53:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* Driver macros.                                                           */
  54:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  55:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  56:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  57:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* External declarations.                                                   */
  58:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  59:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  60:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #ifdef __cplusplus
  61:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** extern "C" {
  62:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #endif
  63:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****   void st_lld_init(void);
  64:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #ifdef __cplusplus
  65:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** }
  66:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #endif
  67:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  68:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #if defined(__AVR_ATmega128__) || defined(__AVR_ATmega162__)
  69:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #define TIFR_REG TIFR
  70:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #define TIMSK_REG TIMSK
  71:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #else
  72:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #define TIFR_REG TIFR1
  73:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #define TIMSK_REG TIMSK1
  74:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** #endif
  75:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  76:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  77:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /* Driver inline functions.                                                 */
  78:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /*==========================================================================*/
  79:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  80:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** /**
  81:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @brief   Returns the time counter value.
  82:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *
  83:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @return              The counter value.
  84:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  *
  85:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  * @notapi
  86:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****  */
  87:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** static inline systime_t st_lld_get_counter(void) {
 1188               		.loc 9 87 25 view .LVU310
 1189               	.LBB350:
  88:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
  89:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h ****   return (systime_t) TCNT1;
 1190               		.loc 9 89 3 view .LVU311
 1191               		.loc 9 89 10 is_stmt 0 view .LVU312
 1192 002a 4090 8400 		lds r4,132
 1193 002e 5090 8500 		lds r5,132+1
 1194               	.LVL52:
 1195               		.loc 9 89 10 view .LVU313
 1196               	.LBE350:
 1197               	.LBE349:
 1198               	.LBE351:
 1199               	.LBE353:
 1200               	.LBE356:
 1201               	.LBB357:
 1202               	.LBI357:
 648:../../../os/hal/osal/rt/osal.h ****                                      sysinterval_t interval) {
 1203               		.loc 2 648 25 is_stmt 1 view .LVU314
 1204               	.LBE357:
 651:../../../os/hal/osal/rt/osal.h **** }
 1205               		.loc 2 651 3 view .LVU315
 1206               	.LBB360:
 1207               	.LBB358:
 1208               	.LBI358:
 1209               		.file 10 "../../../os/rt/include/chtime.h"
   1:../../../os/rt/include/chtime.h **** /*
   2:../../../os/rt/include/chtime.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/rt/include/chtime.h **** 
   4:../../../os/rt/include/chtime.h ****     This file is part of ChibiOS.
   5:../../../os/rt/include/chtime.h **** 
   6:../../../os/rt/include/chtime.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/rt/include/chtime.h ****     it under the terms of the GNU General Public License as published by
   8:../../../os/rt/include/chtime.h ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/rt/include/chtime.h ****     (at your option) any later version.
  10:../../../os/rt/include/chtime.h **** 
  11:../../../os/rt/include/chtime.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/rt/include/chtime.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/rt/include/chtime.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/rt/include/chtime.h ****     GNU General Public License for more details.
  15:../../../os/rt/include/chtime.h **** 
  16:../../../os/rt/include/chtime.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/rt/include/chtime.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/rt/include/chtime.h **** */
  19:../../../os/rt/include/chtime.h **** 
  20:../../../os/rt/include/chtime.h **** /**
  21:../../../os/rt/include/chtime.h ****  * @file    chtime.h
  22:../../../os/rt/include/chtime.h ****  * @brief   Time and intervals macros and structures.
  23:../../../os/rt/include/chtime.h ****  *
  24:../../../os/rt/include/chtime.h ****  * @addtogroup time_intervals
  25:../../../os/rt/include/chtime.h ****  * @{
  26:../../../os/rt/include/chtime.h ****  */
  27:../../../os/rt/include/chtime.h **** 
  28:../../../os/rt/include/chtime.h **** #ifndef CHTIME_H
  29:../../../os/rt/include/chtime.h **** #define CHTIME_H
  30:../../../os/rt/include/chtime.h **** 
  31:../../../os/rt/include/chtime.h **** /*===========================================================================*/
  32:../../../os/rt/include/chtime.h **** /* Module constants.                                                         */
  33:../../../os/rt/include/chtime.h **** /*===========================================================================*/
  34:../../../os/rt/include/chtime.h **** 
  35:../../../os/rt/include/chtime.h **** /**
  36:../../../os/rt/include/chtime.h ****  * @name    Special time constants
  37:../../../os/rt/include/chtime.h ****  * @{
  38:../../../os/rt/include/chtime.h ****  */
  39:../../../os/rt/include/chtime.h **** /**
  40:../../../os/rt/include/chtime.h ****  * @brief   Zero interval specification for some functions with a timeout
  41:../../../os/rt/include/chtime.h ****  *          specification.
  42:../../../os/rt/include/chtime.h ****  * @note    Not all functions accept @p TIME_IMMEDIATE as timeout parameter,
  43:../../../os/rt/include/chtime.h ****  *          see the specific function documentation.
  44:../../../os/rt/include/chtime.h ****  */
  45:../../../os/rt/include/chtime.h **** #define TIME_IMMEDIATE      ((sysinterval_t)0)
  46:../../../os/rt/include/chtime.h **** 
  47:../../../os/rt/include/chtime.h **** /**
  48:../../../os/rt/include/chtime.h ****  * @brief   Infinite interval specification for all functions with a timeout
  49:../../../os/rt/include/chtime.h ****  *          specification.
  50:../../../os/rt/include/chtime.h ****  * @note    Not all functions accept @p TIME_INFINITE as timeout parameter,
  51:../../../os/rt/include/chtime.h ****  *          see the specific function documentation.
  52:../../../os/rt/include/chtime.h ****  */
  53:../../../os/rt/include/chtime.h **** #define TIME_INFINITE       ((sysinterval_t)-1)
  54:../../../os/rt/include/chtime.h **** 
  55:../../../os/rt/include/chtime.h **** /**
  56:../../../os/rt/include/chtime.h ****  * @brief   Maximum interval constant usable as timeout.
  57:../../../os/rt/include/chtime.h ****  */
  58:../../../os/rt/include/chtime.h **** #define TIME_MAX_INTERVAL   ((sysinterval_t)-2)
  59:../../../os/rt/include/chtime.h **** 
  60:../../../os/rt/include/chtime.h **** /**
  61:../../../os/rt/include/chtime.h ****  * @brief   Maximum system of system time before it wraps.
  62:../../../os/rt/include/chtime.h ****  */
  63:../../../os/rt/include/chtime.h **** #define TIME_MAX_SYSTIME    ((systime_t)-1)
  64:../../../os/rt/include/chtime.h **** /** @} */
  65:../../../os/rt/include/chtime.h **** 
  66:../../../os/rt/include/chtime.h **** /*===========================================================================*/
  67:../../../os/rt/include/chtime.h **** /* Module pre-compile time settings.                                         */
  68:../../../os/rt/include/chtime.h **** /*===========================================================================*/
  69:../../../os/rt/include/chtime.h **** 
  70:../../../os/rt/include/chtime.h **** /**
  71:../../../os/rt/include/chtime.h ****  * @brief   System time counter resolution.
  72:../../../os/rt/include/chtime.h ****  * @note    Allowed values are 16, 32 or 64 bits.
  73:../../../os/rt/include/chtime.h ****  */
  74:../../../os/rt/include/chtime.h **** #if !defined(CH_CFG_ST_RESOLUTION) || defined(__DOXYGEN__)
  75:../../../os/rt/include/chtime.h **** #define CH_CFG_ST_RESOLUTION                32
  76:../../../os/rt/include/chtime.h **** #endif
  77:../../../os/rt/include/chtime.h **** 
  78:../../../os/rt/include/chtime.h **** /**
  79:../../../os/rt/include/chtime.h ****  * @brief   System tick frequency.
  80:../../../os/rt/include/chtime.h ****  * @details Frequency of the system timer that drives the system ticks. This
  81:../../../os/rt/include/chtime.h ****  *          setting also defines the system tick time unit.
  82:../../../os/rt/include/chtime.h ****  */
  83:../../../os/rt/include/chtime.h **** #if !defined(CH_CFG_ST_FREQUENCY) || defined(__DOXYGEN__)
  84:../../../os/rt/include/chtime.h **** #define CH_CFG_ST_FREQUENCY                 1000
  85:../../../os/rt/include/chtime.h **** #endif
  86:../../../os/rt/include/chtime.h **** 
  87:../../../os/rt/include/chtime.h **** /**
  88:../../../os/rt/include/chtime.h ****  * @brief   Time intervals data size.
  89:../../../os/rt/include/chtime.h ****  * @note    Allowed values are 16, 32 or 64 bits.
  90:../../../os/rt/include/chtime.h ****  */
  91:../../../os/rt/include/chtime.h **** #if !defined(CH_CFG_INTERVALS_SIZE) || defined(__DOXYGEN__)
  92:../../../os/rt/include/chtime.h **** #define CH_CFG_INTERVALS_SIZE               32
  93:../../../os/rt/include/chtime.h **** #endif
  94:../../../os/rt/include/chtime.h **** 
  95:../../../os/rt/include/chtime.h **** /**
  96:../../../os/rt/include/chtime.h ****  * @brief   Time types data size.
  97:../../../os/rt/include/chtime.h ****  * @note    Allowed values are 16 or 32 bits.
  98:../../../os/rt/include/chtime.h ****  */
  99:../../../os/rt/include/chtime.h **** #if !defined(CH_CFG_TIME_TYPES_SIZE) || defined(__DOXYGEN__)
 100:../../../os/rt/include/chtime.h **** #define CH_CFG_TIME_TYPES_SIZE              32
 101:../../../os/rt/include/chtime.h **** #endif
 102:../../../os/rt/include/chtime.h **** 
 103:../../../os/rt/include/chtime.h **** /*===========================================================================*/
 104:../../../os/rt/include/chtime.h **** /* Derived constants and error checks.                                       */
 105:../../../os/rt/include/chtime.h **** /*===========================================================================*/
 106:../../../os/rt/include/chtime.h **** 
 107:../../../os/rt/include/chtime.h **** #if (CH_CFG_ST_RESOLUTION != 16) && (CH_CFG_ST_RESOLUTION != 32) &&         \
 108:../../../os/rt/include/chtime.h ****     (CH_CFG_ST_RESOLUTION != 64)
 109:../../../os/rt/include/chtime.h **** #error "invalid CH_CFG_ST_RESOLUTION specified, must be 16, 32 or 64"
 110:../../../os/rt/include/chtime.h **** #endif
 111:../../../os/rt/include/chtime.h **** 
 112:../../../os/rt/include/chtime.h **** #if CH_CFG_ST_FREQUENCY < 10
 113:../../../os/rt/include/chtime.h **** #error "invalid CH_CFG_ST_FREQUENCY specified, must be >= 10"
 114:../../../os/rt/include/chtime.h **** #endif
 115:../../../os/rt/include/chtime.h **** 
 116:../../../os/rt/include/chtime.h **** #if (CH_CFG_INTERVALS_SIZE != 16) && (CH_CFG_INTERVALS_SIZE != 32) &&       \
 117:../../../os/rt/include/chtime.h ****     (CH_CFG_INTERVALS_SIZE != 64)
 118:../../../os/rt/include/chtime.h **** #error "invalid CH_CFG_INTERVALS_SIZE specified, must be 16, 32 or 64"
 119:../../../os/rt/include/chtime.h **** #endif
 120:../../../os/rt/include/chtime.h **** 
 121:../../../os/rt/include/chtime.h **** #if (CH_CFG_TIME_TYPES_SIZE != 16) && (CH_CFG_TIME_TYPES_SIZE != 32)
 122:../../../os/rt/include/chtime.h **** #error "invalid CH_CFG_TIME_TYPES_SIZE specified, must be 16 or 32"
 123:../../../os/rt/include/chtime.h **** #endif
 124:../../../os/rt/include/chtime.h **** 
 125:../../../os/rt/include/chtime.h **** #if CH_CFG_INTERVALS_SIZE < CH_CFG_ST_RESOLUTION
 126:../../../os/rt/include/chtime.h **** #error "CH_CFG_INTERVALS_SIZE must be >= CH_CFG_ST_RESOLUTION"
 127:../../../os/rt/include/chtime.h **** #endif
 128:../../../os/rt/include/chtime.h **** 
 129:../../../os/rt/include/chtime.h **** /*===========================================================================*/
 130:../../../os/rt/include/chtime.h **** /* Module data structures and types.                                         */
 131:../../../os/rt/include/chtime.h **** /*===========================================================================*/
 132:../../../os/rt/include/chtime.h **** 
 133:../../../os/rt/include/chtime.h **** /**
 134:../../../os/rt/include/chtime.h ****  * @brief   Type of system time.
 135:../../../os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16, 32 or 64 bits.
 136:../../../os/rt/include/chtime.h ****  */
 137:../../../os/rt/include/chtime.h **** #if (CH_CFG_ST_RESOLUTION == 64) || defined(__DOXYGEN__)
 138:../../../os/rt/include/chtime.h **** typedef uint64_t systime_t;
 139:../../../os/rt/include/chtime.h **** #elif CH_CFG_ST_RESOLUTION == 32
 140:../../../os/rt/include/chtime.h **** typedef uint32_t systime_t;
 141:../../../os/rt/include/chtime.h **** #elif CH_CFG_ST_RESOLUTION == 16
 142:../../../os/rt/include/chtime.h **** typedef uint16_t systime_t;
 143:../../../os/rt/include/chtime.h **** #endif
 144:../../../os/rt/include/chtime.h **** 
 145:../../../os/rt/include/chtime.h **** /**
 146:../../../os/rt/include/chtime.h ****  * @brief   Type of time interval.
 147:../../../os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16, 32 or 64 bits.
 148:../../../os/rt/include/chtime.h ****  */
 149:../../../os/rt/include/chtime.h **** #if (CH_CFG_INTERVALS_SIZE == 64) || defined(__DOXYGEN__)
 150:../../../os/rt/include/chtime.h **** typedef uint64_t sysinterval_t;
 151:../../../os/rt/include/chtime.h **** #elif CH_CFG_INTERVALS_SIZE == 32
 152:../../../os/rt/include/chtime.h **** typedef uint32_t sysinterval_t;
 153:../../../os/rt/include/chtime.h **** #elif CH_CFG_INTERVALS_SIZE == 16
 154:../../../os/rt/include/chtime.h **** typedef uint16_t sysinterval_t;
 155:../../../os/rt/include/chtime.h **** #endif
 156:../../../os/rt/include/chtime.h **** 
 157:../../../os/rt/include/chtime.h **** #if (CH_CFG_TIME_TYPES_SIZE == 32) || defined(__DOXYGEN__)
 158:../../../os/rt/include/chtime.h **** /**
 159:../../../os/rt/include/chtime.h ****  * @brief   Type of seconds.
 160:../../../os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 161:../../../os/rt/include/chtime.h ****  */
 162:../../../os/rt/include/chtime.h **** typedef uint32_t time_secs_t;
 163:../../../os/rt/include/chtime.h **** 
 164:../../../os/rt/include/chtime.h **** /**
 165:../../../os/rt/include/chtime.h ****  * @brief   Type of milliseconds.
 166:../../../os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 167:../../../os/rt/include/chtime.h ****  */
 168:../../../os/rt/include/chtime.h **** typedef uint32_t time_msecs_t;
 169:../../../os/rt/include/chtime.h **** 
 170:../../../os/rt/include/chtime.h **** /**
 171:../../../os/rt/include/chtime.h ****  * @brief   Type of microseconds.
 172:../../../os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 173:../../../os/rt/include/chtime.h ****  */
 174:../../../os/rt/include/chtime.h **** typedef uint32_t time_usecs_t;
 175:../../../os/rt/include/chtime.h **** 
 176:../../../os/rt/include/chtime.h **** /**
 177:../../../os/rt/include/chtime.h ****  * @brief   Type of time conversion variable.
 178:../../../os/rt/include/chtime.h ****  * @note    This type must have double width than other time types, it is
 179:../../../os/rt/include/chtime.h ****  *          only used internally for conversions.
 180:../../../os/rt/include/chtime.h ****  */
 181:../../../os/rt/include/chtime.h **** typedef uint64_t time_conv_t;
 182:../../../os/rt/include/chtime.h **** 
 183:../../../os/rt/include/chtime.h **** #else
 184:../../../os/rt/include/chtime.h **** typedef uint16_t time_secs_t;
 185:../../../os/rt/include/chtime.h **** typedef uint16_t time_msecs_t;
 186:../../../os/rt/include/chtime.h **** typedef uint16_t time_usecs_t;
 187:../../../os/rt/include/chtime.h **** typedef uint32_t time_conv_t;
 188:../../../os/rt/include/chtime.h **** #endif
 189:../../../os/rt/include/chtime.h **** 
 190:../../../os/rt/include/chtime.h **** /*===========================================================================*/
 191:../../../os/rt/include/chtime.h **** /* Module macros.                                                            */
 192:../../../os/rt/include/chtime.h **** /*===========================================================================*/
 193:../../../os/rt/include/chtime.h **** 
 194:../../../os/rt/include/chtime.h **** 
 195:../../../os/rt/include/chtime.h **** /**
 196:../../../os/rt/include/chtime.h ****  * @name    Fast time conversion utilities
 197:../../../os/rt/include/chtime.h ****  * @{
 198:../../../os/rt/include/chtime.h ****  */
 199:../../../os/rt/include/chtime.h **** /**
 200:../../../os/rt/include/chtime.h ****  * @brief   Seconds to time interval.
 201:../../../os/rt/include/chtime.h ****  * @details Converts from seconds to system ticks number.
 202:../../../os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 203:../../../os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 204:../../../os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 205:../../../os/rt/include/chtime.h ****  *          converted.
 206:../../../os/rt/include/chtime.h ****  *
 207:../../../os/rt/include/chtime.h ****  * @param[in] secs      number of seconds
 208:../../../os/rt/include/chtime.h ****  * @return              The number of ticks.
 209:../../../os/rt/include/chtime.h ****  *
 210:../../../os/rt/include/chtime.h ****  * @api
 211:../../../os/rt/include/chtime.h ****  */
 212:../../../os/rt/include/chtime.h **** #define TIME_S2I(secs)                                                      \
 213:../../../os/rt/include/chtime.h ****   ((sysinterval_t)((time_conv_t)(secs) * (time_conv_t)CH_CFG_ST_FREQUENCY))
 214:../../../os/rt/include/chtime.h **** 
 215:../../../os/rt/include/chtime.h **** /**
 216:../../../os/rt/include/chtime.h ****  * @brief   Milliseconds to time interval.
 217:../../../os/rt/include/chtime.h ****  * @details Converts from milliseconds to system ticks number.
 218:../../../os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 219:../../../os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 220:../../../os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 221:../../../os/rt/include/chtime.h ****  *          converted.
 222:../../../os/rt/include/chtime.h ****  *
 223:../../../os/rt/include/chtime.h ****  * @param[in] msecs     number of milliseconds
 224:../../../os/rt/include/chtime.h ****  * @return              The number of ticks.
 225:../../../os/rt/include/chtime.h ****  *
 226:../../../os/rt/include/chtime.h ****  * @api
 227:../../../os/rt/include/chtime.h ****  */
 228:../../../os/rt/include/chtime.h **** #define TIME_MS2I(msecs)                                                    \
 229:../../../os/rt/include/chtime.h ****   ((sysinterval_t)((((time_conv_t)(msecs) *                                 \
 230:../../../os/rt/include/chtime.h ****                      (time_conv_t)CH_CFG_ST_FREQUENCY) +                    \
 231:../../../os/rt/include/chtime.h ****                     (time_conv_t)999) / (time_conv_t)1000))
 232:../../../os/rt/include/chtime.h **** 
 233:../../../os/rt/include/chtime.h **** /**
 234:../../../os/rt/include/chtime.h ****  * @brief   Microseconds to time interval.
 235:../../../os/rt/include/chtime.h ****  * @details Converts from microseconds to system ticks number.
 236:../../../os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 237:../../../os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 238:../../../os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 239:../../../os/rt/include/chtime.h ****  *          converted.
 240:../../../os/rt/include/chtime.h ****  *
 241:../../../os/rt/include/chtime.h ****  * @param[in] usecs     number of microseconds
 242:../../../os/rt/include/chtime.h ****  * @return              The number of ticks.
 243:../../../os/rt/include/chtime.h ****  *
 244:../../../os/rt/include/chtime.h ****  * @api
 245:../../../os/rt/include/chtime.h ****  */
 246:../../../os/rt/include/chtime.h **** #define TIME_US2I(usecs)                                                    \
 247:../../../os/rt/include/chtime.h ****   ((sysinterval_t)((((time_conv_t)(usecs) *                                 \
 248:../../../os/rt/include/chtime.h ****                      (time_conv_t)CH_CFG_ST_FREQUENCY) +                    \
 249:../../../os/rt/include/chtime.h ****                     (time_conv_t)999999) / (time_conv_t)1000000))
 250:../../../os/rt/include/chtime.h **** 
 251:../../../os/rt/include/chtime.h **** /**
 252:../../../os/rt/include/chtime.h ****  * @brief   Time interval to seconds.
 253:../../../os/rt/include/chtime.h ****  * @details Converts from system ticks number to seconds.
 254:../../../os/rt/include/chtime.h ****  * @note    The result is rounded up to the next second boundary.
 255:../../../os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 256:../../../os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 257:../../../os/rt/include/chtime.h ****  *          converted.
 258:../../../os/rt/include/chtime.h ****  *
 259:../../../os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 260:../../../os/rt/include/chtime.h ****  * @return              The number of seconds.
 261:../../../os/rt/include/chtime.h ****  *
 262:../../../os/rt/include/chtime.h ****  * @api
 263:../../../os/rt/include/chtime.h ****  */
 264:../../../os/rt/include/chtime.h **** #define TIME_I2S(interval)                                                  \
 265:../../../os/rt/include/chtime.h ****   (time_secs_t)(((time_conv_t)(interval) +                                  \
 266:../../../os/rt/include/chtime.h ****                  (time_conv_t)CH_CFG_ST_FREQUENCY -                         \
 267:../../../os/rt/include/chtime.h ****                  (time_conv_t)1) / (time_conv_t)CH_CFG_ST_FREQUENCY)
 268:../../../os/rt/include/chtime.h **** 
 269:../../../os/rt/include/chtime.h **** /**
 270:../../../os/rt/include/chtime.h ****  * @brief   Time interval to milliseconds.
 271:../../../os/rt/include/chtime.h ****  * @details Converts from system ticks number to milliseconds.
 272:../../../os/rt/include/chtime.h ****  * @note    The result is rounded up to the next millisecond boundary.
 273:../../../os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 274:../../../os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 275:../../../os/rt/include/chtime.h ****  *          converted.
 276:../../../os/rt/include/chtime.h ****  *
 277:../../../os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 278:../../../os/rt/include/chtime.h ****  * @return              The number of milliseconds.
 279:../../../os/rt/include/chtime.h ****  *
 280:../../../os/rt/include/chtime.h ****  * @api
 281:../../../os/rt/include/chtime.h ****  */
 282:../../../os/rt/include/chtime.h **** #define TIME_I2MS(interval)                                                 \
 283:../../../os/rt/include/chtime.h ****   (time_msecs_t)((((time_conv_t)(interval) * (time_conv_t)1000) +           \
 284:../../../os/rt/include/chtime.h ****                   (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /      \
 285:../../../os/rt/include/chtime.h ****                  (time_conv_t)CH_CFG_ST_FREQUENCY)
 286:../../../os/rt/include/chtime.h **** 
 287:../../../os/rt/include/chtime.h **** /**
 288:../../../os/rt/include/chtime.h ****  * @brief   Time interval to microseconds.
 289:../../../os/rt/include/chtime.h ****  * @details Converts from system ticks number to microseconds.
 290:../../../os/rt/include/chtime.h ****  * @note    The result is rounded up to the next microsecond boundary.
 291:../../../os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 292:../../../os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 293:../../../os/rt/include/chtime.h ****  *          converted.
 294:../../../os/rt/include/chtime.h ****  *
 295:../../../os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 296:../../../os/rt/include/chtime.h ****  * @return              The number of microseconds.
 297:../../../os/rt/include/chtime.h ****  *
 298:../../../os/rt/include/chtime.h ****  * @api
 299:../../../os/rt/include/chtime.h ****  */
 300:../../../os/rt/include/chtime.h **** #define TIME_I2US(interval)                                                 \
 301:../../../os/rt/include/chtime.h ****     (time_msecs_t)((((time_conv_t)(interval) * (time_conv_t)1000000) +      \
 302:../../../os/rt/include/chtime.h ****                     (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /    \
 303:../../../os/rt/include/chtime.h ****                    (time_conv_t)CH_CFG_ST_FREQUENCY)
 304:../../../os/rt/include/chtime.h **** /** @} */
 305:../../../os/rt/include/chtime.h **** 
 306:../../../os/rt/include/chtime.h **** /*===========================================================================*/
 307:../../../os/rt/include/chtime.h **** /* External declarations.                                                    */
 308:../../../os/rt/include/chtime.h **** /*===========================================================================*/
 309:../../../os/rt/include/chtime.h **** 
 310:../../../os/rt/include/chtime.h **** /*
 311:../../../os/rt/include/chtime.h ****  * Virtual Timers APIs.
 312:../../../os/rt/include/chtime.h ****  */
 313:../../../os/rt/include/chtime.h **** #ifdef __cplusplus
 314:../../../os/rt/include/chtime.h **** extern "C" {
 315:../../../os/rt/include/chtime.h **** #endif
 316:../../../os/rt/include/chtime.h **** 
 317:../../../os/rt/include/chtime.h **** #ifdef __cplusplus
 318:../../../os/rt/include/chtime.h **** }
 319:../../../os/rt/include/chtime.h **** #endif
 320:../../../os/rt/include/chtime.h **** 
 321:../../../os/rt/include/chtime.h **** /*===========================================================================*/
 322:../../../os/rt/include/chtime.h **** /* Module inline functions.                                                  */
 323:../../../os/rt/include/chtime.h **** /*===========================================================================*/
 324:../../../os/rt/include/chtime.h **** 
 325:../../../os/rt/include/chtime.h **** /**
 326:../../../os/rt/include/chtime.h ****  * @name    Secure time conversion utilities
 327:../../../os/rt/include/chtime.h ****  * @{
 328:../../../os/rt/include/chtime.h ****  */
 329:../../../os/rt/include/chtime.h **** /**
 330:../../../os/rt/include/chtime.h ****  * @brief   Seconds to time interval.
 331:../../../os/rt/include/chtime.h ****  * @details Converts from seconds to system ticks number.
 332:../../../os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 333:../../../os/rt/include/chtime.h ****  *
 334:../../../os/rt/include/chtime.h ****  * @param[in] secs      number of seconds
 335:../../../os/rt/include/chtime.h ****  * @return              The number of ticks.
 336:../../../os/rt/include/chtime.h ****  *
 337:../../../os/rt/include/chtime.h ****  * @special
 338:../../../os/rt/include/chtime.h ****  */
 339:../../../os/rt/include/chtime.h **** static inline sysinterval_t chTimeS2I(time_secs_t secs) {
 340:../../../os/rt/include/chtime.h ****   time_conv_t ticks;
 341:../../../os/rt/include/chtime.h **** 
 342:../../../os/rt/include/chtime.h ****   ticks = (time_conv_t)secs * (time_conv_t)CH_CFG_ST_FREQUENCY;
 343:../../../os/rt/include/chtime.h **** 
 344:../../../os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 345:../../../os/rt/include/chtime.h ****               "conversion overflow");
 346:../../../os/rt/include/chtime.h **** 
 347:../../../os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 348:../../../os/rt/include/chtime.h **** }
 349:../../../os/rt/include/chtime.h **** 
 350:../../../os/rt/include/chtime.h **** /**
 351:../../../os/rt/include/chtime.h ****  * @brief   Milliseconds to time interval.
 352:../../../os/rt/include/chtime.h ****  * @details Converts from milliseconds to system ticks number.
 353:../../../os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 354:../../../os/rt/include/chtime.h ****  *
 355:../../../os/rt/include/chtime.h ****  * @param[in] msec      number of milliseconds
 356:../../../os/rt/include/chtime.h ****  * @return              The number of ticks.
 357:../../../os/rt/include/chtime.h ****  *
 358:../../../os/rt/include/chtime.h ****  * @special
 359:../../../os/rt/include/chtime.h ****  */
 360:../../../os/rt/include/chtime.h **** static inline sysinterval_t chTimeMS2I(time_msecs_t msec) {
 361:../../../os/rt/include/chtime.h ****   time_conv_t ticks;
 362:../../../os/rt/include/chtime.h **** 
 363:../../../os/rt/include/chtime.h ****   ticks = (((time_conv_t)msec * (time_conv_t)CH_CFG_ST_FREQUENCY) +
 364:../../../os/rt/include/chtime.h ****            (time_conv_t)999) / (time_conv_t)1000;
 365:../../../os/rt/include/chtime.h **** 
 366:../../../os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 367:../../../os/rt/include/chtime.h ****               "conversion overflow");
 368:../../../os/rt/include/chtime.h **** 
 369:../../../os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 370:../../../os/rt/include/chtime.h **** }
 371:../../../os/rt/include/chtime.h **** 
 372:../../../os/rt/include/chtime.h **** /**
 373:../../../os/rt/include/chtime.h ****  * @brief   Microseconds to time interval.
 374:../../../os/rt/include/chtime.h ****  * @details Converts from microseconds to system ticks number.
 375:../../../os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 376:../../../os/rt/include/chtime.h ****  *
 377:../../../os/rt/include/chtime.h ****  * @param[in] usec      number of microseconds
 378:../../../os/rt/include/chtime.h ****  * @return              The number of ticks.
 379:../../../os/rt/include/chtime.h ****  *
 380:../../../os/rt/include/chtime.h ****  * @special
 381:../../../os/rt/include/chtime.h ****  */
 382:../../../os/rt/include/chtime.h **** static inline sysinterval_t chTimeUS2I(time_usecs_t usec) {
 383:../../../os/rt/include/chtime.h ****   time_conv_t ticks;
 384:../../../os/rt/include/chtime.h **** 
 385:../../../os/rt/include/chtime.h ****   ticks = (((time_conv_t)usec * (time_conv_t)CH_CFG_ST_FREQUENCY) +
 386:../../../os/rt/include/chtime.h ****            (time_conv_t)999999) / (time_conv_t)1000000;
 387:../../../os/rt/include/chtime.h **** 
 388:../../../os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 389:../../../os/rt/include/chtime.h ****               "conversion overflow");
 390:../../../os/rt/include/chtime.h **** 
 391:../../../os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 392:../../../os/rt/include/chtime.h **** }
 393:../../../os/rt/include/chtime.h **** 
 394:../../../os/rt/include/chtime.h **** /**
 395:../../../os/rt/include/chtime.h ****  * @brief   Time interval to seconds.
 396:../../../os/rt/include/chtime.h ****  * @details Converts from system interval to seconds.
 397:../../../os/rt/include/chtime.h ****  * @note    The result is rounded up to the next second boundary.
 398:../../../os/rt/include/chtime.h ****  *
 399:../../../os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 400:../../../os/rt/include/chtime.h ****  * @return              The number of seconds.
 401:../../../os/rt/include/chtime.h ****  *
 402:../../../os/rt/include/chtime.h ****  * @special
 403:../../../os/rt/include/chtime.h ****  */
 404:../../../os/rt/include/chtime.h **** static inline time_secs_t chTimeI2S(sysinterval_t interval) {
 405:../../../os/rt/include/chtime.h ****   time_conv_t secs;
 406:../../../os/rt/include/chtime.h **** 
 407:../../../os/rt/include/chtime.h ****   secs = ((time_conv_t)interval +
 408:../../../os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY -
 409:../../../os/rt/include/chtime.h ****           (time_conv_t)1) / (time_conv_t)CH_CFG_ST_FREQUENCY;
 410:../../../os/rt/include/chtime.h **** 
 411:../../../os/rt/include/chtime.h ****   chDbgAssert(secs < (time_conv_t)((time_secs_t)-1),
 412:../../../os/rt/include/chtime.h ****               "conversion overflow");
 413:../../../os/rt/include/chtime.h **** 
 414:../../../os/rt/include/chtime.h ****   return (time_secs_t)secs;
 415:../../../os/rt/include/chtime.h **** }
 416:../../../os/rt/include/chtime.h **** 
 417:../../../os/rt/include/chtime.h **** /**
 418:../../../os/rt/include/chtime.h ****  * @brief   Time interval to milliseconds.
 419:../../../os/rt/include/chtime.h ****  * @details Converts from system interval to milliseconds.
 420:../../../os/rt/include/chtime.h ****  * @note    The result is rounded up to the next millisecond boundary.
 421:../../../os/rt/include/chtime.h ****  *
 422:../../../os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 423:../../../os/rt/include/chtime.h ****  * @return              The number of milliseconds.
 424:../../../os/rt/include/chtime.h ****  *
 425:../../../os/rt/include/chtime.h ****  * @special
 426:../../../os/rt/include/chtime.h ****  */
 427:../../../os/rt/include/chtime.h **** static inline time_msecs_t chTimeI2MS(sysinterval_t interval) {
 428:../../../os/rt/include/chtime.h ****   time_conv_t msecs;
 429:../../../os/rt/include/chtime.h **** 
 430:../../../os/rt/include/chtime.h ****   msecs = (((time_conv_t)interval * (time_conv_t)1000) +
 431:../../../os/rt/include/chtime.h ****            (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /
 432:../../../os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY;
 433:../../../os/rt/include/chtime.h **** 
 434:../../../os/rt/include/chtime.h ****   chDbgAssert(msecs < (time_conv_t)((time_msecs_t)-1),
 435:../../../os/rt/include/chtime.h ****               "conversion overflow");
 436:../../../os/rt/include/chtime.h **** 
 437:../../../os/rt/include/chtime.h ****   return (time_msecs_t)msecs;
 438:../../../os/rt/include/chtime.h **** }
 439:../../../os/rt/include/chtime.h **** 
 440:../../../os/rt/include/chtime.h **** /**
 441:../../../os/rt/include/chtime.h ****  * @brief   Time interval to microseconds.
 442:../../../os/rt/include/chtime.h ****  * @details Converts from system interval to microseconds.
 443:../../../os/rt/include/chtime.h ****  * @note    The result is rounded up to the next microsecond boundary.
 444:../../../os/rt/include/chtime.h ****  *
 445:../../../os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 446:../../../os/rt/include/chtime.h ****  * @return              The number of microseconds.
 447:../../../os/rt/include/chtime.h ****  *
 448:../../../os/rt/include/chtime.h ****  * @special
 449:../../../os/rt/include/chtime.h ****  */
 450:../../../os/rt/include/chtime.h **** static inline time_usecs_t chTimeI2US(sysinterval_t interval) {
 451:../../../os/rt/include/chtime.h ****   time_conv_t usecs;
 452:../../../os/rt/include/chtime.h **** 
 453:../../../os/rt/include/chtime.h ****   usecs = (((time_conv_t)interval * (time_conv_t)1000000) +
 454:../../../os/rt/include/chtime.h ****            (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /
 455:../../../os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY;
 456:../../../os/rt/include/chtime.h **** 
 457:../../../os/rt/include/chtime.h ****   chDbgAssert(usecs <= (time_conv_t)((time_usecs_t)-1),
 458:../../../os/rt/include/chtime.h ****               "conversion overflow");
 459:../../../os/rt/include/chtime.h **** 
 460:../../../os/rt/include/chtime.h ****   return (time_usecs_t)usecs;
 461:../../../os/rt/include/chtime.h **** }
 462:../../../os/rt/include/chtime.h **** 
 463:../../../os/rt/include/chtime.h **** /**
 464:../../../os/rt/include/chtime.h ****  * @brief   Adds an interval to a system time returning a system time.
 465:../../../os/rt/include/chtime.h ****  *
 466:../../../os/rt/include/chtime.h ****  * @param[in] systime   base system time
 467:../../../os/rt/include/chtime.h ****  * @param[in] interval  interval to be added
 468:../../../os/rt/include/chtime.h ****  * @return              The new system time.
 469:../../../os/rt/include/chtime.h ****  *
 470:../../../os/rt/include/chtime.h ****  * @xclass
 471:../../../os/rt/include/chtime.h ****  */
 472:../../../os/rt/include/chtime.h **** static inline systime_t chTimeAddX(systime_t systime,
 1210               		.loc 10 472 25 view .LVU316
 1211               	.LBB359:
 473:../../../os/rt/include/chtime.h ****                                    sysinterval_t interval) {
 474:../../../os/rt/include/chtime.h **** 
 475:../../../os/rt/include/chtime.h **** #if CH_CFG_ST_RESOLUTION != CH_CFG_INTERVALS_SIZE
 476:../../../os/rt/include/chtime.h ****   chDbgCheck(interval <= (sysinterval_t)((systime_t)-1));
 477:../../../os/rt/include/chtime.h **** #endif
 478:../../../os/rt/include/chtime.h **** 
 479:../../../os/rt/include/chtime.h ****   return systime + (systime_t)interval;
 1212               		.loc 10 479 3 view .LVU317
 1213               		.loc 10 479 18 is_stmt 0 view .LVU318
 1214 0032 420E      		add r4,r18
 1215 0034 531E      		adc r5,r19
 1216               	.LVL53:
 1217               		.loc 10 479 18 view .LVU319
 1218               	.LBE359:
 1219               	.LBE358:
 1220               	.LBE360:
 360:../../../os/hal/src/hal_buffers.c ****   systime_t deadline;
 1221               		.loc 1 360 10 view .LVU320
 1222 0036 F12C      		mov r15,__zero_reg__
 1223 0038 E12C      		mov r14,__zero_reg__
 1224               	.LBB361:
 1225               	.LBB362:
 369:../../../os/hal/src/hal_buffers.c **** 
 370:../../../os/hal/src/hal_buffers.c ****   while (true) {
 371:../../../os/hal/src/hal_buffers.c ****     size_t size;
 372:../../../os/hal/src/hal_buffers.c **** 
 373:../../../os/hal/src/hal_buffers.c ****     /* This condition indicates that a new buffer must be acquired.*/
 374:../../../os/hal/src/hal_buffers.c ****     if (ibqp->ptr == NULL) {
 375:../../../os/hal/src/hal_buffers.c ****       msg_t msg;
 376:../../../os/hal/src/hal_buffers.c **** 
 377:../../../os/hal/src/hal_buffers.c ****       /* TIME_INFINITE and TIME_IMMEDIATE are handled differently, no
 378:../../../os/hal/src/hal_buffers.c ****          deadline.*/
 379:../../../os/hal/src/hal_buffers.c ****       if ((timeout == TIME_INFINITE) || (timeout == TIME_IMMEDIATE)) {
 1226               		.loc 1 379 38 view .LVU321
 1227 003a 3901      		movw r6,r18
 1228 003c 21E0      		ldi r18,1
 1229 003e 621A      		sub r6,r18
 1230 0040 7108      		sbc r7,__zero_reg__
 1231               	.LVL54:
 1232               		.loc 1 379 38 view .LVU322
 1233 0042 00C0      		rjmp .L54
 1234               	.LVL55:
 1235               	.L59:
 1236               		.loc 1 379 38 view .LVU323
 1237               	.LBE362:
 380:../../../os/hal/src/hal_buffers.c ****         msg = ibqGetFullBufferTimeoutS(ibqp, timeout);
 381:../../../os/hal/src/hal_buffers.c ****       }
 382:../../../os/hal/src/hal_buffers.c ****       else {
 383:../../../os/hal/src/hal_buffers.c ****         sysinterval_t next_timeout = osalTimeDiffX(osalOsGetSystemTimeX(),
 384:../../../os/hal/src/hal_buffers.c ****                                                    deadline);
 385:../../../os/hal/src/hal_buffers.c **** 
 386:../../../os/hal/src/hal_buffers.c ****         /* Handling the case where the system time went past the deadline,
 387:../../../os/hal/src/hal_buffers.c ****            in this case next becomes a very high number because the system
 388:../../../os/hal/src/hal_buffers.c ****            time is an unsigned type.*/
 389:../../../os/hal/src/hal_buffers.c ****         if (next_timeout > timeout) {
 390:../../../os/hal/src/hal_buffers.c ****           osalSysUnlock();
 391:../../../os/hal/src/hal_buffers.c ****           return r;
 392:../../../os/hal/src/hal_buffers.c ****         }
 393:../../../os/hal/src/hal_buffers.c ****         msg = ibqGetFullBufferTimeoutS(ibqp, next_timeout);
 394:../../../os/hal/src/hal_buffers.c ****       }
 395:../../../os/hal/src/hal_buffers.c **** 
 396:../../../os/hal/src/hal_buffers.c ****       /* Anything except MSG_OK interrupts the operation.*/
 397:../../../os/hal/src/hal_buffers.c ****       if (msg != MSG_OK) {
 398:../../../os/hal/src/hal_buffers.c ****         osalSysUnlock();
 399:../../../os/hal/src/hal_buffers.c ****         return r;
 400:../../../os/hal/src/hal_buffers.c ****       }
 401:../../../os/hal/src/hal_buffers.c ****     }
 402:../../../os/hal/src/hal_buffers.c **** 
 403:../../../os/hal/src/hal_buffers.c ****     /* Size of the data chunk present in the current buffer.*/
 404:../../../os/hal/src/hal_buffers.c ****     size = (size_t)ibqp->top - (size_t)ibqp->ptr;
 405:../../../os/hal/src/hal_buffers.c ****     if (size > (n - r)) {
 406:../../../os/hal/src/hal_buffers.c ****       size = n - r;
 407:../../../os/hal/src/hal_buffers.c ****     }
 408:../../../os/hal/src/hal_buffers.c **** 
 409:../../../os/hal/src/hal_buffers.c ****     /* Smaller chunks in order to not make the critical zone too long,
 410:../../../os/hal/src/hal_buffers.c ****        this impacts throughput however.*/
 411:../../../os/hal/src/hal_buffers.c ****     if (size > 64U) {
 412:../../../os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 413:../../../os/hal/src/hal_buffers.c ****       memcpy(bp, ibqp->ptr, 64U);
 1238               		.loc 1 413 7 is_stmt 1 view .LVU324
 1239 0044 80E4      		ldi r24,lo8(64)
 1240 0046 FB01      		movw r30,r22
 1241 0048 D601      		movw r26,r12
 1242               		0:
 1243 004a 0190      		ld r0,Z+
 1244 004c 0D92      		st X+,r0
 1245 004e 8A95      		dec r24
 1246 0050 01F4      		brne 0b
 414:../../../os/hal/src/hal_buffers.c ****       bp        += 64U;
 1247               		.loc 1 414 7 view .LVU325
 1248               		.loc 1 414 17 is_stmt 0 view .LVU326
 1249 0052 20E4      		ldi r18,64
 1250 0054 C20E      		add r12,r18
 1251 0056 D11C      		adc r13,__zero_reg__
 1252               	.LVL56:
 415:../../../os/hal/src/hal_buffers.c ****       ibqp->ptr += 64U;
 1253               		.loc 1 415 7 is_stmt 1 view .LVU327
 1254               		.loc 1 415 17 is_stmt 0 view .LVU328
 1255 0058 8B89      		ldd r24,Y+19
 1256 005a 9C89      		ldd r25,Y+20
 1257 005c 805C      		subi r24,-64
 1258 005e 9F4F      		sbci r25,-1
 1259 0060 9C8B      		std Y+20,r25
 1260 0062 8B8B      		std Y+19,r24
 416:../../../os/hal/src/hal_buffers.c ****       r         += 64U;
 1261               		.loc 1 416 7 is_stmt 1 view .LVU329
 1262               		.loc 1 416 17 is_stmt 0 view .LVU330
 1263 0064 20E4      		ldi r18,64
 1264 0066 E20E      		add r14,r18
 1265 0068 F11C      		adc r15,__zero_reg__
 1266               	.LVL57:
 1267               	.L49:
 417:../../../os/hal/src/hal_buffers.c ****     }
 418:../../../os/hal/src/hal_buffers.c ****     else {
 419:../../../os/hal/src/hal_buffers.c ****       memcpy(bp, ibqp->ptr, size);
 420:../../../os/hal/src/hal_buffers.c ****       bp        += size;
 421:../../../os/hal/src/hal_buffers.c ****       ibqp->ptr += size;
 422:../../../os/hal/src/hal_buffers.c ****       r         += size;
 423:../../../os/hal/src/hal_buffers.c ****     }
 424:../../../os/hal/src/hal_buffers.c **** 
 425:../../../os/hal/src/hal_buffers.c ****     /* Has the current data buffer been finished? if so then release it.*/
 426:../../../os/hal/src/hal_buffers.c ****     if (ibqp->ptr >= ibqp->top) {
 1268               		.loc 1 426 5 is_stmt 1 view .LVU331
 1269               		.loc 1 426 8 is_stmt 0 view .LVU332
 1270 006a 2D89      		ldd r18,Y+21
 1271 006c 3E89      		ldd r19,Y+22
 1272 006e 8217      		cp r24,r18
 1273 0070 9307      		cpc r25,r19
 1274 0072 00F0      		brlo .L51
 427:../../../os/hal/src/hal_buffers.c ****       ibqReleaseEmptyBufferS(ibqp);
 1275               		.loc 1 427 7 is_stmt 1 view .LVU333
 1276               	.LVL58:
 1277               	.LBB389:
 1278               	.LBI389:
 269:../../../os/hal/src/hal_buffers.c **** 
 1279               		.loc 1 269 8 view .LVU334
 1280               	.LBB390:
 271:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!ibqIsEmptyI(ibqp), "buffers queue empty");
 1281               		.loc 1 271 23 view .LVU335
 272:../../../os/hal/src/hal_buffers.c **** 
 1282               		.loc 1 272 3 view .LVU336
 272:../../../os/hal/src/hal_buffers.c **** 
 1283               		.loc 1 272 3 view .LVU337
 275:../../../os/hal/src/hal_buffers.c ****   ibqp->brdptr += ibqp->bsize;
 1284               		.loc 1 275 3 view .LVU338
 275:../../../os/hal/src/hal_buffers.c ****   ibqp->brdptr += ibqp->bsize;
 1285               		.loc 1 275 7 is_stmt 0 view .LVU339
 1286 0074 8D81      		ldd r24,Y+5
 1287 0076 9E81      		ldd r25,Y+6
 275:../../../os/hal/src/hal_buffers.c ****   ibqp->brdptr += ibqp->bsize;
 1288               		.loc 1 275 17 view .LVU340
 1289 0078 0197      		sbiw r24,1
 1290 007a 9E83      		std Y+6,r25
 1291 007c 8D83      		std Y+5,r24
 276:../../../os/hal/src/hal_buffers.c ****   if (ibqp->brdptr >= ibqp->btop) {
 1292               		.loc 1 276 3 is_stmt 1 view .LVU341
 276:../../../os/hal/src/hal_buffers.c ****   if (ibqp->brdptr >= ibqp->btop) {
 1293               		.loc 1 276 16 is_stmt 0 view .LVU342
 1294 007e 8985      		ldd r24,Y+9
 1295 0080 9A85      		ldd r25,Y+10
 1296 0082 2D85      		ldd r18,Y+13
 1297 0084 3E85      		ldd r19,Y+14
 1298 0086 820F      		add r24,r18
 1299 0088 931F      		adc r25,r19
 1300 008a 9A87      		std Y+10,r25
 1301 008c 8987      		std Y+9,r24
 277:../../../os/hal/src/hal_buffers.c ****     ibqp->brdptr = ibqp->buffers;
 1302               		.loc 1 277 3 is_stmt 1 view .LVU343
 277:../../../os/hal/src/hal_buffers.c ****     ibqp->brdptr = ibqp->buffers;
 1303               		.loc 1 277 6 is_stmt 0 view .LVU344
 1304 008e 2B85      		ldd r18,Y+11
 1305 0090 3C85      		ldd r19,Y+12
 1306 0092 8217      		cp r24,r18
 1307 0094 9307      		cpc r25,r19
 1308 0096 00F0      		brlo .L52
 278:../../../os/hal/src/hal_buffers.c ****   }
 1309               		.loc 1 278 5 is_stmt 1 view .LVU345
 278:../../../os/hal/src/hal_buffers.c ****   }
 1310               		.loc 1 278 18 is_stmt 0 view .LVU346
 1311 0098 8989      		ldd r24,Y+17
 1312 009a 9A89      		ldd r25,Y+18
 1313 009c 9A87      		std Y+10,r25
 1314 009e 8987      		std Y+9,r24
 1315               	.L52:
 282:../../../os/hal/src/hal_buffers.c **** 
 1316               		.loc 1 282 3 is_stmt 1 view .LVU347
 282:../../../os/hal/src/hal_buffers.c **** 
 1317               		.loc 1 282 13 is_stmt 0 view .LVU348
 1318 00a0 1C8A      		std Y+20,__zero_reg__
 1319 00a2 1B8A      		std Y+19,__zero_reg__
 285:../../../os/hal/src/hal_buffers.c ****     ibqp->notify(ibqp);
 1320               		.loc 1 285 3 is_stmt 1 view .LVU349
 285:../../../os/hal/src/hal_buffers.c ****     ibqp->notify(ibqp);
 1321               		.loc 1 285 11 is_stmt 0 view .LVU350
 1322 00a4 EF89      		ldd r30,Y+23
 1323 00a6 F88D      		ldd r31,Y+24
 285:../../../os/hal/src/hal_buffers.c ****     ibqp->notify(ibqp);
 1324               		.loc 1 285 6 view .LVU351
 1325 00a8 3097      		sbiw r30,0
 1326 00aa 01F0      		breq .L51
 286:../../../os/hal/src/hal_buffers.c ****   }
 1327               		.loc 1 286 5 is_stmt 1 view .LVU352
 1328 00ac CE01      		movw r24,r28
 1329 00ae 0995      		icall
 1330               	.LVL59:
 1331               	.L51:
 286:../../../os/hal/src/hal_buffers.c ****   }
 1332               		.loc 1 286 5 is_stmt 0 view .LVU353
 1333               	.LBE390:
 1334               	.LBE389:
 428:../../../os/hal/src/hal_buffers.c ****     }
 429:../../../os/hal/src/hal_buffers.c **** 
 430:../../../os/hal/src/hal_buffers.c ****     /* Giving a preemption chance.*/
 431:../../../os/hal/src/hal_buffers.c ****     osalSysUnlock();
 1335               		.loc 1 431 5 is_stmt 1 view .LVU354
 1336               	.LBB391:
 1337               	.LBI391:
 520:../../../os/hal/osal/rt/osal.h **** 
 1338               		.loc 2 520 20 view .LVU355
 1339               	.LBE391:
 1340               	.LBE361:
 522:../../../os/hal/osal/rt/osal.h **** }
 1341               		.loc 2 522 3 view .LVU356
 1342               	.LBB410:
 1343               	.LBB396:
 1344               	.LBB392:
 1345               	.LBI392:
 365:../../../os/rt/include/chsys.h **** 
 1346               		.loc 5 365 20 view .LVU357
 1347               	.LBB393:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1348               		.loc 5 367 22 view .LVU358
 368:../../../os/rt/include/chsys.h **** 
 1349               		.loc 5 368 33 view .LVU359
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1350               		.loc 5 374 3 view .LVU360
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1351               		.loc 5 374 3 view .LVU361
 1352               		.loc 5 378 3 view .LVU362
 1353               	.LBB394:
 1354               	.LBI394:
 445:../../../os/common/ports/AVR/chcore.h **** 
 1355               		.loc 6 445 20 view .LVU363
 1356               	.LBB395:
 1357               		.loc 6 447 3 view .LVU364
 1358               	/* #APP */
 1359               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1360 00b0 7894      		sei
 1361               	 ;  0 "" 2
 1362               	/* #NOAPP */
 1363               	.LBE395:
 1364               	.LBE394:
 1365               	.LBE393:
 1366               	.LBE392:
 1367               	.LBE396:
 432:../../../os/hal/src/hal_buffers.c ****     if (r >= n) {
 1368               		.loc 1 432 5 view .LVU365
 1369               		.loc 1 432 8 is_stmt 0 view .LVU366
 1370 00b2 EA14      		cp r14,r10
 1371 00b4 FB04      		cpc r15,r11
 1372 00b6 00F0      		brlo .+2
 1373 00b8 00C0      		rjmp .L40
 433:../../../os/hal/src/hal_buffers.c ****       return r;
 434:../../../os/hal/src/hal_buffers.c ****     }
 435:../../../os/hal/src/hal_buffers.c ****     osalSysLock();
 1374               		.loc 1 435 5 is_stmt 1 view .LVU367
 1375               	.LBB397:
 1376               	.LBI397:
 509:../../../os/hal/osal/rt/osal.h **** 
 1377               		.loc 2 509 20 view .LVU368
 1378               	.LBE397:
 1379               	.LBE410:
 511:../../../os/hal/osal/rt/osal.h **** }
 1380               		.loc 2 511 3 view .LVU369
 1381               	.LBB411:
 1382               	.LBB402:
 1383               	.LBB398:
 1384               	.LBI398:
 353:../../../os/rt/include/chsys.h **** 
 1385               		.loc 5 353 20 view .LVU370
 1386               	.LBE398:
 1387               	.LBE402:
 1388               	.LBE411:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1389               		.loc 5 355 3 view .LVU371
 1390               	.LBB412:
 1391               	.LBB403:
 1392               	.LBB401:
 1393               	.LBB399:
 1394               	.LBI399:
 435:../../../os/common/ports/AVR/chcore.h **** 
 1395               		.loc 6 435 20 view .LVU372
 1396               	.LBB400:
 437:../../../os/common/ports/AVR/chcore.h **** }
 1397               		.loc 6 437 3 view .LVU373
 1398               	/* #APP */
 1399               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 1400 00ba F894      		cli
 1401               	 ;  0 "" 2
 1402               	/* #NOAPP */
 1403               	.LBE400:
 1404               	.LBE399:
 1405               	.LBE401:
 1406               	.LBE403:
 1407               	.LBE412:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 1408               		.loc 5 356 34 view .LVU374
 357:../../../os/rt/include/chsys.h **** }
 1409               		.loc 5 357 20 view .LVU375
 1410               	.LVL60:
 1411               	.L54:
 370:../../../os/hal/src/hal_buffers.c ****     size_t size;
 1412               		.loc 1 370 3 view .LVU376
 1413               	.LBB413:
 371:../../../os/hal/src/hal_buffers.c **** 
 1414               		.loc 1 371 5 view .LVU377
 374:../../../os/hal/src/hal_buffers.c ****       msg_t msg;
 1415               		.loc 1 374 5 view .LVU378
 374:../../../os/hal/src/hal_buffers.c ****       msg_t msg;
 1416               		.loc 1 374 13 is_stmt 0 view .LVU379
 1417 00bc 6B89      		ldd r22,Y+19
 1418 00be 7C89      		ldd r23,Y+20
 374:../../../os/hal/src/hal_buffers.c ****       msg_t msg;
 1419               		.loc 1 374 8 view .LVU380
 1420 00c0 6115      		cp r22,__zero_reg__
 1421 00c2 7105      		cpc r23,__zero_reg__
 1422 00c4 01F0      		breq .L58
 1423               	.L41:
 404:../../../os/hal/src/hal_buffers.c ****     if (size > (n - r)) {
 1424               		.loc 1 404 5 is_stmt 1 view .LVU381
 404:../../../os/hal/src/hal_buffers.c ****     if (size > (n - r)) {
 1425               		.loc 1 404 10 is_stmt 0 view .LVU382
 1426 00c6 8D89      		ldd r24,Y+21
 1427 00c8 9E89      		ldd r25,Y+22
 1428 00ca 861B      		sub r24,r22
 1429 00cc 970B      		sbc r25,r23
 1430               	.LVL61:
 405:../../../os/hal/src/hal_buffers.c ****       size = n - r;
 1431               		.loc 1 405 5 is_stmt 1 view .LVU383
 1432 00ce 8501      		movw r16,r10
 1433 00d0 0E19      		sub r16,r14
 1434 00d2 1F09      		sbc r17,r15
 1435 00d4 8017      		cp r24,r16
 1436 00d6 9107      		cpc r25,r17
 1437 00d8 00F4      		brsh .L47
 1438 00da 8C01      		movw r16,r24
 1439               	.L47:
 1440               	.LVL62:
 411:../../../os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 1441               		.loc 1 411 5 view .LVU384
 411:../../../os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 1442               		.loc 1 411 8 is_stmt 0 view .LVU385
 1443 00dc 0134      		cpi r16,65
 1444 00de 1105      		cpc r17,__zero_reg__
 1445 00e0 00F0      		brlo .+2
 1446 00e2 00C0      		rjmp .L59
 419:../../../os/hal/src/hal_buffers.c ****       bp        += size;
 1447               		.loc 1 419 7 is_stmt 1 view .LVU386
 1448 00e4 A801      		movw r20,r16
 1449 00e6 C601      		movw r24,r12
 1450 00e8 0E94 0000 		call memcpy
 1451               	.LVL63:
 420:../../../os/hal/src/hal_buffers.c ****       ibqp->ptr += size;
 1452               		.loc 1 420 7 view .LVU387
 420:../../../os/hal/src/hal_buffers.c ****       ibqp->ptr += size;
 1453               		.loc 1 420 17 is_stmt 0 view .LVU388
 1454 00ec C00E      		add r12,r16
 1455 00ee D11E      		adc r13,r17
 1456               	.LVL64:
 421:../../../os/hal/src/hal_buffers.c ****       r         += size;
 1457               		.loc 1 421 7 is_stmt 1 view .LVU389
 421:../../../os/hal/src/hal_buffers.c ****       r         += size;
 1458               		.loc 1 421 17 is_stmt 0 view .LVU390
 1459 00f0 8B89      		ldd r24,Y+19
 1460 00f2 9C89      		ldd r25,Y+20
 1461 00f4 800F      		add r24,r16
 1462 00f6 911F      		adc r25,r17
 1463 00f8 9C8B      		std Y+20,r25
 1464 00fa 8B8B      		std Y+19,r24
 422:../../../os/hal/src/hal_buffers.c ****     }
 1465               		.loc 1 422 7 is_stmt 1 view .LVU391
 422:../../../os/hal/src/hal_buffers.c ****     }
 1466               		.loc 1 422 17 is_stmt 0 view .LVU392
 1467 00fc E00E      		add r14,r16
 1468 00fe F11E      		adc r15,r17
 1469               	.LVL65:
 422:../../../os/hal/src/hal_buffers.c ****     }
 1470               		.loc 1 422 17 view .LVU393
 1471 0100 00C0      		rjmp .L49
 1472               	.LVL66:
 1473               	.L58:
 1474               	.LBB404:
 375:../../../os/hal/src/hal_buffers.c **** 
 1475               		.loc 1 375 7 is_stmt 1 view .LVU394
 379:../../../os/hal/src/hal_buffers.c ****         msg = ibqGetFullBufferTimeoutS(ibqp, timeout);
 1476               		.loc 1 379 7 view .LVU395
 379:../../../os/hal/src/hal_buffers.c ****         msg = ibqGetFullBufferTimeoutS(ibqp, timeout);
 1477               		.loc 1 379 10 is_stmt 0 view .LVU396
 1478 0102 8EEF      		ldi r24,-2
 1479 0104 6816      		cp r6,r24
 1480 0106 8FEF      		ldi r24,-1
 1481 0108 7806      		cpc r7,r24
 1482 010a 00F4      		brsh .L60
 1483               	.LBB363:
 383:../../../os/hal/src/hal_buffers.c ****                                                    deadline);
 1484               		.loc 1 383 9 is_stmt 1 view .LVU397
 1485               	.LBB364:
 1486               	.LBI364:
 634:../../../os/hal/osal/rt/osal.h **** 
 1487               		.loc 2 634 25 view .LVU398
 1488               	.LBE364:
 1489               	.LBE363:
 1490               	.LBE404:
 1491               	.LBE413:
 636:../../../os/hal/osal/rt/osal.h **** }
 1492               		.loc 2 636 3 view .LVU399
 1493               	.LBB414:
 1494               	.LBB405:
 1495               	.LBB379:
 1496               	.LBB372:
 1497               	.LBB365:
 1498               	.LBI365:
 115:../../../os/rt/include/chvt.h **** 
 1499               		.loc 7 115 25 view .LVU400
 1500               	.LBE365:
 1501               	.LBE372:
 1502               	.LBE379:
 1503               	.LBE405:
 1504               	.LBE414:
 1505               		.loc 7 120 3 view .LVU401
 1506               	.LBB415:
 1507               	.LBB406:
 1508               	.LBB380:
 1509               	.LBB373:
 1510               	.LBB370:
 1511               	.LBB366:
 1512               	.LBI366:
 105:../../../os/common/ports/AVR/chcore_timer.h **** 
 1513               		.loc 8 105 25 view .LVU402
 1514               	.LBE366:
 1515               	.LBE370:
 1516               	.LBE373:
 1517               	.LBE380:
 1518               	.LBE406:
 1519               	.LBE415:
 1520               		.loc 8 107 3 view .LVU403
 1521               	.LBB416:
 1522               	.LBB407:
 1523               	.LBB381:
 1524               	.LBB374:
 1525               	.LBB371:
 1526               	.LBB369:
 1527               	.LBB367:
 1528               	.LBI367:
  87:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
 1529               		.loc 9 87 25 view .LVU404
 1530               	.LBB368:
 1531               		.loc 9 89 3 view .LVU405
 1532               		.loc 9 89 10 is_stmt 0 view .LVU406
 1533 010c 8091 8400 		lds r24,132
 1534 0110 9091 8500 		lds r25,132+1
 1535               	.LVL67:
 1536               		.loc 9 89 10 view .LVU407
 1537               	.LBE368:
 1538               	.LBE367:
 1539               	.LBE369:
 1540               	.LBE371:
 1541               	.LBE374:
 1542               	.LBB375:
 1543               	.LBI375:
 663:../../../os/hal/osal/rt/osal.h **** 
 1544               		.loc 2 663 29 is_stmt 1 view .LVU408
 1545               	.LBE375:
 1546               	.LBE381:
 1547               	.LBE407:
 1548               	.LBE416:
 665:../../../os/hal/osal/rt/osal.h **** }
 1549               		.loc 2 665 3 view .LVU409
 1550               	.LBB417:
 1551               	.LBB408:
 1552               	.LBB382:
 1553               	.LBB378:
 1554               	.LBB376:
 1555               	.LBI376:
 480:../../../os/rt/include/chtime.h **** }
 481:../../../os/rt/include/chtime.h **** 
 482:../../../os/rt/include/chtime.h **** /**
 483:../../../os/rt/include/chtime.h ****  * @brief   Subtracts two system times returning an interval.
 484:../../../os/rt/include/chtime.h ****  *
 485:../../../os/rt/include/chtime.h ****  * @param[in] start     first system time
 486:../../../os/rt/include/chtime.h ****  * @param[in] end       second system time
 487:../../../os/rt/include/chtime.h ****  * @return              The interval representing the time difference.
 488:../../../os/rt/include/chtime.h ****  *
 489:../../../os/rt/include/chtime.h ****  * @xclass
 490:../../../os/rt/include/chtime.h ****  */
 491:../../../os/rt/include/chtime.h **** static inline sysinterval_t chTimeDiffX(systime_t start, systime_t end) {
 1556               		.loc 10 491 29 view .LVU410
 1557               	.LBB377:
 492:../../../os/rt/include/chtime.h **** 
 493:../../../os/rt/include/chtime.h ****   /*lint -save -e9033 [10.8] This cast is required by the operation, it is
 494:../../../os/rt/include/chtime.h ****     known that the destination type can be wider.*/
 495:../../../os/rt/include/chtime.h ****   return (sysinterval_t)((systime_t)(end - start));
 1558               		.loc 10 495 3 view .LVU411
 1559               		.loc 10 495 10 is_stmt 0 view .LVU412
 1560 0114 B201      		movw r22,r4
 1561 0116 681B      		sub r22,r24
 1562 0118 790B      		sbc r23,r25
 1563               	.LVL68:
 1564               		.loc 10 495 10 view .LVU413
 1565               	.LBE377:
 1566               	.LBE376:
 1567               	.LBE378:
 389:../../../os/hal/src/hal_buffers.c ****           osalSysUnlock();
 1568               		.loc 1 389 9 is_stmt 1 view .LVU414
 389:../../../os/hal/src/hal_buffers.c ****           osalSysUnlock();
 1569               		.loc 1 389 12 is_stmt 0 view .LVU415
 1570 011a 8616      		cp r8,r22
 1571 011c 9706      		cpc r9,r23
 1572 011e 00F0      		brlo .L46
 393:../../../os/hal/src/hal_buffers.c ****       }
 1573               		.loc 1 393 9 is_stmt 1 view .LVU416
 393:../../../os/hal/src/hal_buffers.c ****       }
 1574               		.loc 1 393 15 is_stmt 0 view .LVU417
 1575 0120 CE01      		movw r24,r28
 1576 0122 0E94 0000 		call ibqGetFullBufferTimeoutS
 1577               	.LVL69:
 393:../../../os/hal/src/hal_buffers.c ****       }
 1578               		.loc 1 393 15 view .LVU418
 1579               	.LBE382:
 397:../../../os/hal/src/hal_buffers.c ****         osalSysUnlock();
 1580               		.loc 1 397 7 is_stmt 1 view .LVU419
 397:../../../os/hal/src/hal_buffers.c ****         osalSysUnlock();
 1581               		.loc 1 397 10 is_stmt 0 view .LVU420
 1582 0126 892B      		or r24,r25
 1583 0128 01F4      		brne .L46
 1584               	.L61:
 397:../../../os/hal/src/hal_buffers.c ****         osalSysUnlock();
 1585               		.loc 1 397 10 view .LVU421
 1586 012a 6B89      		ldd r22,Y+19
 1587 012c 7C89      		ldd r23,Y+20
 1588 012e 00C0      		rjmp .L41
 1589               	.LVL70:
 1590               	.L60:
 380:../../../os/hal/src/hal_buffers.c ****       }
 1591               		.loc 1 380 9 is_stmt 1 view .LVU422
 380:../../../os/hal/src/hal_buffers.c ****       }
 1592               		.loc 1 380 15 is_stmt 0 view .LVU423
 1593 0130 B401      		movw r22,r8
 1594 0132 CE01      		movw r24,r28
 1595 0134 0E94 0000 		call ibqGetFullBufferTimeoutS
 1596               	.LVL71:
 397:../../../os/hal/src/hal_buffers.c ****         osalSysUnlock();
 1597               		.loc 1 397 7 is_stmt 1 view .LVU424
 397:../../../os/hal/src/hal_buffers.c ****         osalSysUnlock();
 1598               		.loc 1 397 10 is_stmt 0 view .LVU425
 1599 0138 892B      		or r24,r25
 1600 013a 01F0      		breq .L61
 1601               	.LVL72:
 1602               	.L46:
 398:../../../os/hal/src/hal_buffers.c ****         return r;
 1603               		.loc 1 398 9 is_stmt 1 view .LVU426
 1604               	.LBB383:
 1605               	.LBI383:
 520:../../../os/hal/osal/rt/osal.h **** 
 1606               		.loc 2 520 20 view .LVU427
 1607               	.LBE383:
 1608               	.LBE408:
 1609               	.LBE417:
 522:../../../os/hal/osal/rt/osal.h **** }
 1610               		.loc 2 522 3 view .LVU428
 1611               	.LBB418:
 1612               	.LBB409:
 1613               	.LBB388:
 1614               	.LBB384:
 1615               	.LBI384:
 365:../../../os/rt/include/chsys.h **** 
 1616               		.loc 5 365 20 view .LVU429
 1617               	.LBB385:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1618               		.loc 5 367 22 view .LVU430
 368:../../../os/rt/include/chsys.h **** 
 1619               		.loc 5 368 33 view .LVU431
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1620               		.loc 5 374 3 view .LVU432
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1621               		.loc 5 374 3 view .LVU433
 1622               		.loc 5 378 3 view .LVU434
 1623               	.LBB386:
 1624               	.LBI386:
 445:../../../os/common/ports/AVR/chcore.h **** 
 1625               		.loc 6 445 20 view .LVU435
 1626               	.LBB387:
 1627               		.loc 6 447 3 view .LVU436
 1628               	/* #APP */
 1629               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 1630 013c 7894      		sei
 1631               	 ;  0 "" 2
 1632               	/* #NOAPP */
 1633               	.LBE387:
 1634               	.LBE386:
 1635               	.LBE385:
 1636               	.LBE384:
 1637               	.LBE388:
 399:../../../os/hal/src/hal_buffers.c ****       }
 1638               		.loc 1 399 9 view .LVU437
 1639               	.L40:
 399:../../../os/hal/src/hal_buffers.c ****       }
 1640               		.loc 1 399 9 is_stmt 0 view .LVU438
 1641               	.LBE409:
 1642               	.LBE418:
 436:../../../os/hal/src/hal_buffers.c ****   }
 437:../../../os/hal/src/hal_buffers.c **** }
 1643               		.loc 1 437 1 view .LVU439
 1644 013e C701      		movw r24,r14
 1645               	/* epilogue start */
 1646 0140 DF91      		pop r29
 1647 0142 CF91      		pop r28
 1648               	.LVL73:
 1649               		.loc 1 437 1 view .LVU440
 1650 0144 1F91      		pop r17
 1651 0146 0F91      		pop r16
 1652 0148 FF90      		pop r15
 1653 014a EF90      		pop r14
 1654               	.LVL74:
 1655               		.loc 1 437 1 view .LVU441
 1656 014c DF90      		pop r13
 1657 014e CF90      		pop r12
 1658               	.LVL75:
 1659               		.loc 1 437 1 view .LVU442
 1660 0150 BF90      		pop r11
 1661 0152 AF90      		pop r10
 1662               	.LVL76:
 1663               		.loc 1 437 1 view .LVU443
 1664 0154 9F90      		pop r9
 1665 0156 8F90      		pop r8
 1666               	.LVL77:
 1667               		.loc 1 437 1 view .LVU444
 1668 0158 7F90      		pop r7
 1669 015a 6F90      		pop r6
 1670               	.LVL78:
 1671               		.loc 1 437 1 view .LVU445
 1672 015c 5F90      		pop r5
 1673 015e 4F90      		pop r4
 1674               	.LVL79:
 1675               		.loc 1 437 1 view .LVU446
 1676 0160 0895      		ret
 1677               		.cfi_endproc
 1678               	.LFE182:
 1680               		.section	.text.obqObjectInit,"ax",@progbits
 1681               	.global	obqObjectInit
 1683               	obqObjectInit:
 1684               	.LVL80:
 1685               	.LFB183:
 438:../../../os/hal/src/hal_buffers.c **** 
 439:../../../os/hal/src/hal_buffers.c **** /**
 440:../../../os/hal/src/hal_buffers.c ****  * @brief   Initializes an output buffers queue object.
 441:../../../os/hal/src/hal_buffers.c ****  *
 442:../../../os/hal/src/hal_buffers.c ****  * @param[out] obqp     pointer to the @p output_buffers_queue_t object
 443:../../../os/hal/src/hal_buffers.c ****  * @param[in] suspended initial state of the queue
 444:../../../os/hal/src/hal_buffers.c ****  * @param[in] bp        pointer to a memory area allocated for buffers
 445:../../../os/hal/src/hal_buffers.c ****  * @param[in] size      buffers size
 446:../../../os/hal/src/hal_buffers.c ****  * @param[in] n         number of buffers
 447:../../../os/hal/src/hal_buffers.c ****  * @param[in] onfy      callback called when a buffer is posted in the queue
 448:../../../os/hal/src/hal_buffers.c ****  * @param[in] link      application defined pointer
 449:../../../os/hal/src/hal_buffers.c ****  *
 450:../../../os/hal/src/hal_buffers.c ****  * @init
 451:../../../os/hal/src/hal_buffers.c ****  */
 452:../../../os/hal/src/hal_buffers.c **** void obqObjectInit(output_buffers_queue_t *obqp, bool suspended, uint8_t *bp,
 453:../../../os/hal/src/hal_buffers.c ****                    size_t size, size_t n, bqnotify_t onfy, void *link) {
 1686               		.loc 1 453 72 is_stmt 1 view -0
 1687               		.cfi_startproc
 1688               		.loc 1 453 72 is_stmt 0 view .LVU448
 1689 0000 CF92      		push r12
 1690               	.LCFI30:
 1691               		.cfi_def_cfa_offset 3
 1692               		.cfi_offset 12, -2
 1693 0002 DF92      		push r13
 1694               	.LCFI31:
 1695               		.cfi_def_cfa_offset 4
 1696               		.cfi_offset 13, -3
 1697 0004 EF92      		push r14
 1698               	.LCFI32:
 1699               		.cfi_def_cfa_offset 5
 1700               		.cfi_offset 14, -4
 1701 0006 FF92      		push r15
 1702               	.LCFI33:
 1703               		.cfi_def_cfa_offset 6
 1704               		.cfi_offset 15, -5
 1705 0008 0F93      		push r16
 1706               	.LCFI34:
 1707               		.cfi_def_cfa_offset 7
 1708               		.cfi_offset 16, -6
 1709 000a 1F93      		push r17
 1710               	.LCFI35:
 1711               		.cfi_def_cfa_offset 8
 1712               		.cfi_offset 17, -7
 1713               	/* prologue: function */
 1714               	/* frame size = 0 */
 1715               	/* stack size = 6 */
 1716               	.L__stack_usage = 6
 1717 000c FC01      		movw r30,r24
 454:../../../os/hal/src/hal_buffers.c **** 
 455:../../../os/hal/src/hal_buffers.c ****   osalDbgCheck((obqp != NULL) && (bp != NULL) && (size >= 2U));
 1718               		.loc 1 455 3 is_stmt 1 view .LVU449
 1719               		.loc 1 455 3 view .LVU450
 456:../../../os/hal/src/hal_buffers.c **** 
 457:../../../os/hal/src/hal_buffers.c ****   osalThreadQueueObjectInit(&obqp->waiting);
 1720               		.loc 1 457 3 view .LVU451
 1721               	.LVL81:
 1722               	.LBB419:
 1723               	.LBI419:
 800:../../../os/hal/osal/rt/osal.h **** 
 1724               		.loc 2 800 20 view .LVU452
 1725               	.LBE419:
 802:../../../os/hal/osal/rt/osal.h **** }
 1726               		.loc 2 802 3 view .LVU453
 1727               	.LBB424:
 1728               	.LBB420:
 1729               	.LBI420:
 392:../../../os/rt/include/chthreads.h **** 
 1730               		.loc 3 392 20 view .LVU454
 1731               	.LBE420:
 1732               	.LBE424:
 1733               		.loc 3 394 3 view .LVU455
 1734               	.LBB425:
 1735               	.LBB423:
 1736               	.LBB421:
 1737               	.LBI421:
 537:../../../os/rt/include/chschd.h **** 
 1738               		.loc 4 537 20 view .LVU456
 1739               	.LBB422:
 539:../../../os/rt/include/chschd.h ****   tqp->prev = (thread_t *)tqp;
 1740               		.loc 4 539 3 view .LVU457
 539:../../../os/rt/include/chschd.h ****   tqp->prev = (thread_t *)tqp;
 1741               		.loc 4 539 13 is_stmt 0 view .LVU458
 1742 000e 9183      		std Z+1,r25
 1743 0010 8083      		st Z,r24
 1744               		.loc 4 540 3 is_stmt 1 view .LVU459
 1745               		.loc 4 540 13 is_stmt 0 view .LVU460
 1746 0012 9383      		std Z+3,r25
 1747 0014 8283      		std Z+2,r24
 1748               	.LVL82:
 1749               		.loc 4 540 13 view .LVU461
 1750               	.LBE422:
 1751               	.LBE421:
 1752               	.LBE423:
 1753               	.LBE425:
 458:../../../os/hal/src/hal_buffers.c ****   obqp->suspended = suspended;
 1754               		.loc 1 458 3 is_stmt 1 view .LVU462
 1755               		.loc 1 458 19 is_stmt 0 view .LVU463
 1756 0016 6483      		std Z+4,r22
 459:../../../os/hal/src/hal_buffers.c ****   obqp->bcounter  = n;
 1757               		.loc 1 459 3 is_stmt 1 view .LVU464
 1758               		.loc 1 459 19 is_stmt 0 view .LVU465
 1759 0018 1683      		std Z+6,r17
 1760 001a 0583      		std Z+5,r16
 460:../../../os/hal/src/hal_buffers.c ****   obqp->brdptr    = bp;
 1761               		.loc 1 460 3 is_stmt 1 view .LVU466
 1762               		.loc 1 460 19 is_stmt 0 view .LVU467
 1763 001c 5287      		std Z+10,r21
 1764 001e 4187      		std Z+9,r20
 461:../../../os/hal/src/hal_buffers.c ****   obqp->bwrptr    = bp;
 1765               		.loc 1 461 3 is_stmt 1 view .LVU468
 1766               		.loc 1 461 19 is_stmt 0 view .LVU469
 1767 0020 5087      		std Z+8,r21
 1768 0022 4783      		std Z+7,r20
 462:../../../os/hal/src/hal_buffers.c ****   obqp->btop      = bp + ((size + sizeof (size_t)) * n);
 1769               		.loc 1 462 3 is_stmt 1 view .LVU470
 1770               		.loc 1 462 33 is_stmt 0 view .LVU471
 1771 0024 2E5F      		subi r18,-2
 1772 0026 3F4F      		sbci r19,-1
 1773               	.LVL83:
 1774               		.loc 1 462 52 view .LVU472
 1775 0028 209F      		mul r18,r16
 1776 002a C001      		movw r24,r0
 1777 002c 219F      		mul r18,r17
 1778 002e 900D      		add r25,r0
 1779 0030 309F      		mul r19,r16
 1780 0032 900D      		add r25,r0
 1781 0034 1124      		clr r1
 1782               	.LVL84:
 1783               		.loc 1 462 24 view .LVU473
 1784 0036 840F      		add r24,r20
 1785 0038 951F      		adc r25,r21
 1786               		.loc 1 462 19 view .LVU474
 1787 003a 9487      		std Z+12,r25
 1788 003c 8387      		std Z+11,r24
 463:../../../os/hal/src/hal_buffers.c ****   obqp->bsize     = size + sizeof (size_t);
 1789               		.loc 1 463 3 is_stmt 1 view .LVU475
 1790               		.loc 1 463 19 is_stmt 0 view .LVU476
 1791 003e 3687      		std Z+14,r19
 1792 0040 2587      		std Z+13,r18
 464:../../../os/hal/src/hal_buffers.c ****   obqp->bn        = n;
 1793               		.loc 1 464 3 is_stmt 1 view .LVU477
 1794               		.loc 1 464 19 is_stmt 0 view .LVU478
 1795 0042 108B      		std Z+16,r17
 1796 0044 0787      		std Z+15,r16
 465:../../../os/hal/src/hal_buffers.c ****   obqp->buffers   = bp;
 1797               		.loc 1 465 3 is_stmt 1 view .LVU479
 1798               		.loc 1 465 19 is_stmt 0 view .LVU480
 1799 0046 528B      		std Z+18,r21
 1800 0048 418B      		std Z+17,r20
 466:../../../os/hal/src/hal_buffers.c ****   obqp->ptr       = NULL;
 1801               		.loc 1 466 3 is_stmt 1 view .LVU481
 1802               		.loc 1 466 19 is_stmt 0 view .LVU482
 1803 004a 148A      		std Z+20,__zero_reg__
 1804 004c 138A      		std Z+19,__zero_reg__
 467:../../../os/hal/src/hal_buffers.c ****   obqp->top       = NULL;
 1805               		.loc 1 467 3 is_stmt 1 view .LVU483
 1806               		.loc 1 467 19 is_stmt 0 view .LVU484
 1807 004e 168A      		std Z+22,__zero_reg__
 1808 0050 158A      		std Z+21,__zero_reg__
 468:../../../os/hal/src/hal_buffers.c ****   obqp->notify    = onfy;
 1809               		.loc 1 468 3 is_stmt 1 view .LVU485
 1810               		.loc 1 468 19 is_stmt 0 view .LVU486
 1811 0052 F08E      		std Z+24,r15
 1812 0054 E78A      		std Z+23,r14
 469:../../../os/hal/src/hal_buffers.c ****   obqp->link      = link;
 1813               		.loc 1 469 3 is_stmt 1 view .LVU487
 1814               		.loc 1 469 19 is_stmt 0 view .LVU488
 1815 0056 D28E      		std Z+26,r13
 1816 0058 C18E      		std Z+25,r12
 1817               	/* epilogue start */
 470:../../../os/hal/src/hal_buffers.c **** }
 1818               		.loc 1 470 1 view .LVU489
 1819 005a 1F91      		pop r17
 1820 005c 0F91      		pop r16
 1821               	.LVL85:
 1822               		.loc 1 470 1 view .LVU490
 1823 005e FF90      		pop r15
 1824 0060 EF90      		pop r14
 1825               	.LVL86:
 1826               		.loc 1 470 1 view .LVU491
 1827 0062 DF90      		pop r13
 1828 0064 CF90      		pop r12
 1829               	.LVL87:
 1830               		.loc 1 470 1 view .LVU492
 1831 0066 0895      		ret
 1832               		.cfi_endproc
 1833               	.LFE183:
 1835               		.section	.text.obqResetI,"ax",@progbits
 1836               	.global	obqResetI
 1838               	obqResetI:
 1839               	.LVL88:
 1840               	.LFB184:
 471:../../../os/hal/src/hal_buffers.c **** 
 472:../../../os/hal/src/hal_buffers.c **** /**
 473:../../../os/hal/src/hal_buffers.c ****  * @brief   Resets an output buffers queue.
 474:../../../os/hal/src/hal_buffers.c ****  * @details All the data in the output buffers queue is erased and lost, any
 475:../../../os/hal/src/hal_buffers.c ****  *          waiting thread is resumed with status @p MSG_RESET.
 476:../../../os/hal/src/hal_buffers.c ****  * @note    A reset operation can be used by a low level driver in order to
 477:../../../os/hal/src/hal_buffers.c ****  *          obtain immediate attention from the high level layers.
 478:../../../os/hal/src/hal_buffers.c ****  *
 479:../../../os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 480:../../../os/hal/src/hal_buffers.c ****  *
 481:../../../os/hal/src/hal_buffers.c ****  * @iclass
 482:../../../os/hal/src/hal_buffers.c ****  */
 483:../../../os/hal/src/hal_buffers.c **** void obqResetI(output_buffers_queue_t *obqp) {
 1841               		.loc 1 483 46 is_stmt 1 view -0
 1842               		.cfi_startproc
 1843               	/* prologue: function */
 1844               	/* frame size = 0 */
 1845               	/* stack size = 0 */
 1846               	.L__stack_usage = 0
 1847               		.loc 1 483 46 is_stmt 0 view .LVU494
 1848 0000 FC01      		movw r30,r24
 484:../../../os/hal/src/hal_buffers.c **** 
 485:../../../os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 1849               		.loc 1 485 23 is_stmt 1 view .LVU495
 486:../../../os/hal/src/hal_buffers.c **** 
 487:../../../os/hal/src/hal_buffers.c ****   obqp->bcounter  = bqSizeX(obqp);
 1850               		.loc 1 487 3 view .LVU496
 1851               		.loc 1 487 21 is_stmt 0 view .LVU497
 1852 0002 8785      		ldd r24,Z+15
 1853 0004 9089      		ldd r25,Z+16
 1854               	.LVL89:
 1855               		.loc 1 487 19 view .LVU498
 1856 0006 9683      		std Z+6,r25
 1857 0008 8583      		std Z+5,r24
 488:../../../os/hal/src/hal_buffers.c ****   obqp->brdptr    = obqp->buffers;
 1858               		.loc 1 488 3 is_stmt 1 view .LVU499
 1859               		.loc 1 488 25 is_stmt 0 view .LVU500
 1860 000a 8189      		ldd r24,Z+17
 1861 000c 9289      		ldd r25,Z+18
 1862               		.loc 1 488 19 view .LVU501
 1863 000e 9287      		std Z+10,r25
 1864 0010 8187      		std Z+9,r24
 489:../../../os/hal/src/hal_buffers.c ****   obqp->bwrptr    = obqp->buffers;
 1865               		.loc 1 489 3 is_stmt 1 view .LVU502
 1866               		.loc 1 489 19 is_stmt 0 view .LVU503
 1867 0012 9087      		std Z+8,r25
 1868 0014 8783      		std Z+7,r24
 490:../../../os/hal/src/hal_buffers.c ****   obqp->ptr       = NULL;
 1869               		.loc 1 490 3 is_stmt 1 view .LVU504
 1870               		.loc 1 490 19 is_stmt 0 view .LVU505
 1871 0016 148A      		std Z+20,__zero_reg__
 1872 0018 138A      		std Z+19,__zero_reg__
 491:../../../os/hal/src/hal_buffers.c ****   obqp->top       = NULL;
 1873               		.loc 1 491 3 is_stmt 1 view .LVU506
 1874               		.loc 1 491 19 is_stmt 0 view .LVU507
 1875 001a 168A      		std Z+22,__zero_reg__
 1876 001c 158A      		std Z+21,__zero_reg__
 492:../../../os/hal/src/hal_buffers.c ****   osalThreadDequeueAllI(&obqp->waiting, MSG_RESET);
 1877               		.loc 1 492 3 is_stmt 1 view .LVU508
 1878               	.LVL90:
 1879               	.LBB426:
 1880               	.LBI426:
 855:../../../os/hal/osal/rt/osal.h **** 
 1881               		.loc 2 855 20 view .LVU509
 1882               	.LBB427:
 1883               		.loc 2 857 3 view .LVU510
 1884 001e 6EEF      		ldi r22,lo8(-2)
 1885 0020 7FEF      		ldi r23,lo8(-1)
 1886 0022 CF01      		movw r24,r30
 1887 0024 0C94 0000 		jmp chThdDequeueAllI
 1888               	.LVL91:
 1889               		.loc 2 857 3 is_stmt 0 view .LVU511
 1890               	.LBE427:
 1891               	.LBE426:
 1892               		.cfi_endproc
 1893               	.LFE184:
 1895               		.section	.text.obqGetFullBufferI,"ax",@progbits
 1896               	.global	obqGetFullBufferI
 1898               	obqGetFullBufferI:
 1899               	.LVL92:
 1900               	.LFB185:
 493:../../../os/hal/src/hal_buffers.c **** }
 494:../../../os/hal/src/hal_buffers.c **** 
 495:../../../os/hal/src/hal_buffers.c **** /**
 496:../../../os/hal/src/hal_buffers.c ****  * @brief   Gets the next filled buffer from the queue.
 497:../../../os/hal/src/hal_buffers.c ****  * @note    The function always returns the same buffer if called repeatedly.
 498:../../../os/hal/src/hal_buffers.c ****  *
 499:../../../os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 500:../../../os/hal/src/hal_buffers.c ****  * @param[out] sizep    pointer to the filled buffer size
 501:../../../os/hal/src/hal_buffers.c ****  * @return              A pointer to the filled buffer.
 502:../../../os/hal/src/hal_buffers.c ****  * @retval NULL         if the queue is empty.
 503:../../../os/hal/src/hal_buffers.c ****  *
 504:../../../os/hal/src/hal_buffers.c ****  * @iclass
 505:../../../os/hal/src/hal_buffers.c ****  */
 506:../../../os/hal/src/hal_buffers.c **** uint8_t *obqGetFullBufferI(output_buffers_queue_t *obqp,
 507:../../../os/hal/src/hal_buffers.c ****                            size_t *sizep) {
 1901               		.loc 1 507 43 is_stmt 1 view -0
 1902               		.cfi_startproc
 1903               	/* prologue: function */
 1904               	/* frame size = 0 */
 1905               	/* stack size = 0 */
 1906               	.L__stack_usage = 0
 1907               		.loc 1 507 43 is_stmt 0 view .LVU513
 1908 0000 FC01      		movw r30,r24
 508:../../../os/hal/src/hal_buffers.c **** 
 509:../../../os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 1909               		.loc 1 509 23 is_stmt 1 view .LVU514
 510:../../../os/hal/src/hal_buffers.c **** 
 511:../../../os/hal/src/hal_buffers.c ****   if (obqIsEmptyI(obqp)) {
 1910               		.loc 1 511 3 view .LVU515
 1911               		.loc 1 511 7 is_stmt 0 view .LVU516
 1912 0002 2185      		ldd r18,Z+9
 1913 0004 3285      		ldd r19,Z+10
 1914 0006 8781      		ldd r24,Z+7
 1915 0008 9085      		ldd r25,Z+8
 1916               	.LVL93:
 1917               		.loc 1 511 7 view .LVU517
 1918 000a 8217      		cp r24,r18
 1919 000c 9307      		cpc r25,r19
 1920 000e 01F0      		breq .L70
 1921               	.L65:
 512:../../../os/hal/src/hal_buffers.c ****     return NULL;
 513:../../../os/hal/src/hal_buffers.c ****   }
 514:../../../os/hal/src/hal_buffers.c **** 
 515:../../../os/hal/src/hal_buffers.c ****   /* Buffer size.*/
 516:../../../os/hal/src/hal_buffers.c ****   *sizep = *((size_t *)obqp->brdptr);
 1922               		.loc 1 516 3 is_stmt 1 view .LVU518
 1923               		.loc 1 516 12 is_stmt 0 view .LVU519
 1924 0010 F901      		movw r30,r18
 1925               	.LVL94:
 1926               		.loc 1 516 12 view .LVU520
 1927 0012 2191      		ld r18,Z+
 1928 0014 3191      		ld r19,Z+
 1929 0016 CF01      		movw r24,r30
 1930               		.loc 1 516 10 view .LVU521
 1931 0018 FB01      		movw r30,r22
 1932 001a 3183      		std Z+1,r19
 1933 001c 2083      		st Z,r18
 517:../../../os/hal/src/hal_buffers.c **** 
 518:../../../os/hal/src/hal_buffers.c ****   return obqp->brdptr + sizeof (size_t);
 1934               		.loc 1 518 3 is_stmt 1 view .LVU522
 1935               	/* epilogue start */
 519:../../../os/hal/src/hal_buffers.c **** }
 1936               		.loc 1 519 1 is_stmt 0 view .LVU523
 1937 001e 0895      		ret
 1938               	.LVL95:
 1939               	.L70:
 511:../../../os/hal/src/hal_buffers.c ****     return NULL;
 1940               		.loc 1 511 7 discriminator 1 view .LVU524
 1941 0020 8581      		ldd r24,Z+5
 1942 0022 9681      		ldd r25,Z+6
 1943 0024 892B      		or r24,r25
 1944 0026 01F0      		breq .L65
 512:../../../os/hal/src/hal_buffers.c ****   }
 1945               		.loc 1 512 12 view .LVU525
 1946 0028 90E0      		ldi r25,0
 1947 002a 80E0      		ldi r24,0
 1948 002c 0895      		ret
 1949               		.cfi_endproc
 1950               	.LFE185:
 1952               		.section	.text.obqReleaseEmptyBufferI,"ax",@progbits
 1953               	.global	obqReleaseEmptyBufferI
 1955               	obqReleaseEmptyBufferI:
 1956               	.LVL96:
 1957               	.LFB186:
 520:../../../os/hal/src/hal_buffers.c **** 
 521:../../../os/hal/src/hal_buffers.c **** /**
 522:../../../os/hal/src/hal_buffers.c ****  * @brief   Releases the next filled buffer back in the queue.
 523:../../../os/hal/src/hal_buffers.c ****  *
 524:../../../os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 525:../../../os/hal/src/hal_buffers.c ****  *
 526:../../../os/hal/src/hal_buffers.c ****  * @iclass
 527:../../../os/hal/src/hal_buffers.c ****  */
 528:../../../os/hal/src/hal_buffers.c **** void obqReleaseEmptyBufferI(output_buffers_queue_t *obqp) {
 1958               		.loc 1 528 59 is_stmt 1 view -0
 1959               		.cfi_startproc
 1960               	/* prologue: function */
 1961               	/* frame size = 0 */
 1962               	/* stack size = 0 */
 1963               	.L__stack_usage = 0
 1964               		.loc 1 528 59 is_stmt 0 view .LVU527
 1965 0000 FC01      		movw r30,r24
 529:../../../os/hal/src/hal_buffers.c **** 
 530:../../../os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 1966               		.loc 1 530 23 is_stmt 1 view .LVU528
 531:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsEmptyI(obqp), "buffers queue empty");
 1967               		.loc 1 531 3 view .LVU529
 1968               		.loc 1 531 3 view .LVU530
 532:../../../os/hal/src/hal_buffers.c **** 
 533:../../../os/hal/src/hal_buffers.c ****   /* Freeing a buffer slot in the queue.*/
 534:../../../os/hal/src/hal_buffers.c ****   obqp->bcounter++;
 1969               		.loc 1 534 3 view .LVU531
 1970               		.loc 1 534 7 is_stmt 0 view .LVU532
 1971 0002 8581      		ldd r24,Z+5
 1972 0004 9681      		ldd r25,Z+6
 1973               	.LVL97:
 1974               		.loc 1 534 17 view .LVU533
 1975 0006 0196      		adiw r24,1
 1976 0008 9683      		std Z+6,r25
 1977 000a 8583      		std Z+5,r24
 535:../../../os/hal/src/hal_buffers.c ****   obqp->brdptr += obqp->bsize;
 1978               		.loc 1 535 3 is_stmt 1 view .LVU534
 1979               		.loc 1 535 16 is_stmt 0 view .LVU535
 1980 000c 8185      		ldd r24,Z+9
 1981 000e 9285      		ldd r25,Z+10
 1982 0010 2585      		ldd r18,Z+13
 1983 0012 3685      		ldd r19,Z+14
 1984 0014 820F      		add r24,r18
 1985 0016 931F      		adc r25,r19
 1986 0018 9287      		std Z+10,r25
 1987 001a 8187      		std Z+9,r24
 536:../../../os/hal/src/hal_buffers.c ****   if (obqp->brdptr >= obqp->btop) {
 1988               		.loc 1 536 3 is_stmt 1 view .LVU536
 1989               		.loc 1 536 6 is_stmt 0 view .LVU537
 1990 001c 2385      		ldd r18,Z+11
 1991 001e 3485      		ldd r19,Z+12
 1992 0020 8217      		cp r24,r18
 1993 0022 9307      		cpc r25,r19
 1994 0024 00F0      		brlo .L72
 537:../../../os/hal/src/hal_buffers.c ****     obqp->brdptr = obqp->buffers;
 1995               		.loc 1 537 5 is_stmt 1 view .LVU538
 1996               		.loc 1 537 18 is_stmt 0 view .LVU539
 1997 0026 8189      		ldd r24,Z+17
 1998 0028 9289      		ldd r25,Z+18
 1999 002a 9287      		std Z+10,r25
 2000 002c 8187      		std Z+9,r24
 2001               	.L72:
 538:../../../os/hal/src/hal_buffers.c ****   }
 539:../../../os/hal/src/hal_buffers.c **** 
 540:../../../os/hal/src/hal_buffers.c ****   /* Waking up one waiting thread, if any.*/
 541:../../../os/hal/src/hal_buffers.c ****   osalThreadDequeueNextI(&obqp->waiting, MSG_OK);
 2002               		.loc 1 541 3 is_stmt 1 view .LVU540
 2003               	.LVL98:
 2004               	.LBB428:
 2005               	.LBI428:
 842:../../../os/hal/osal/rt/osal.h **** 
 2006               		.loc 2 842 20 view .LVU541
 2007               	.LBB429:
 844:../../../os/hal/osal/rt/osal.h **** }
 2008               		.loc 2 844 3 view .LVU542
 2009 002e 70E0      		ldi r23,0
 2010 0030 60E0      		ldi r22,0
 2011 0032 CF01      		movw r24,r30
 2012 0034 0C94 0000 		jmp chThdDequeueNextI
 2013               	.LVL99:
 844:../../../os/hal/osal/rt/osal.h **** }
 2014               		.loc 2 844 3 is_stmt 0 view .LVU543
 2015               	.LBE429:
 2016               	.LBE428:
 2017               		.cfi_endproc
 2018               	.LFE186:
 2020               		.section	.text.obqGetEmptyBufferTimeoutS,"ax",@progbits
 2021               	.global	obqGetEmptyBufferTimeoutS
 2023               	obqGetEmptyBufferTimeoutS:
 2024               	.LVL100:
 2025               	.LFB188:
 542:../../../os/hal/src/hal_buffers.c **** }
 543:../../../os/hal/src/hal_buffers.c **** 
 544:../../../os/hal/src/hal_buffers.c **** /**
 545:../../../os/hal/src/hal_buffers.c ****  * @brief   Gets the next empty buffer from the queue.
 546:../../../os/hal/src/hal_buffers.c ****  * @note    The function always acquires the same buffer if called repeatedly.
 547:../../../os/hal/src/hal_buffers.c ****  * @post    After calling the function the fields @p ptr and @p top are set
 548:../../../os/hal/src/hal_buffers.c ****  *          at beginning and end of the buffer data or @p NULL if the queue
 549:../../../os/hal/src/hal_buffers.c ****  *          is empty.
 550:../../../os/hal/src/hal_buffers.c ****  *
 551:../../../os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 552:../../../os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 553:../../../os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 554:../../../os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 555:../../../os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 556:../../../os/hal/src/hal_buffers.c ****  *                      .
 557:../../../os/hal/src/hal_buffers.c ****  * @return              The operation status.
 558:../../../os/hal/src/hal_buffers.c ****  * @retval MSG_OK       if a buffer has been acquired.
 559:../../../os/hal/src/hal_buffers.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 560:../../../os/hal/src/hal_buffers.c ****  * @retval MSG_RESET    if the queue has been reset or has been put in
 561:../../../os/hal/src/hal_buffers.c ****  *                      suspended state.
 562:../../../os/hal/src/hal_buffers.c ****  *
 563:../../../os/hal/src/hal_buffers.c ****  * @api
 564:../../../os/hal/src/hal_buffers.c ****  */
 565:../../../os/hal/src/hal_buffers.c **** msg_t obqGetEmptyBufferTimeout(output_buffers_queue_t *obqp,
 566:../../../os/hal/src/hal_buffers.c ****                                 sysinterval_t timeout) {
 567:../../../os/hal/src/hal_buffers.c ****   msg_t msg;
 568:../../../os/hal/src/hal_buffers.c **** 
 569:../../../os/hal/src/hal_buffers.c ****   osalSysLock();
 570:../../../os/hal/src/hal_buffers.c ****   msg = obqGetEmptyBufferTimeoutS(obqp, timeout);
 571:../../../os/hal/src/hal_buffers.c ****   osalSysUnlock();
 572:../../../os/hal/src/hal_buffers.c **** 
 573:../../../os/hal/src/hal_buffers.c ****   return msg;
 574:../../../os/hal/src/hal_buffers.c **** }
 575:../../../os/hal/src/hal_buffers.c **** 
 576:../../../os/hal/src/hal_buffers.c **** /**
 577:../../../os/hal/src/hal_buffers.c ****  * @brief   Gets the next empty buffer from the queue.
 578:../../../os/hal/src/hal_buffers.c ****  * @note    The function always acquires the same buffer if called repeatedly.
 579:../../../os/hal/src/hal_buffers.c ****  * @post    After calling the function the fields @p ptr and @p top are set
 580:../../../os/hal/src/hal_buffers.c ****  *          at beginning and end of the buffer data or @p NULL if the queue
 581:../../../os/hal/src/hal_buffers.c ****  *          is empty.
 582:../../../os/hal/src/hal_buffers.c ****  *
 583:../../../os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 584:../../../os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 585:../../../os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 586:../../../os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 587:../../../os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 588:../../../os/hal/src/hal_buffers.c ****  *                      .
 589:../../../os/hal/src/hal_buffers.c ****  * @return              The operation status.
 590:../../../os/hal/src/hal_buffers.c ****  * @retval MSG_OK       if a buffer has been acquired.
 591:../../../os/hal/src/hal_buffers.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 592:../../../os/hal/src/hal_buffers.c ****  * @retval MSG_RESET    if the queue has been reset or has been put in
 593:../../../os/hal/src/hal_buffers.c ****  *                      suspended state.
 594:../../../os/hal/src/hal_buffers.c ****  *
 595:../../../os/hal/src/hal_buffers.c ****  * @sclass
 596:../../../os/hal/src/hal_buffers.c ****  */
 597:../../../os/hal/src/hal_buffers.c **** msg_t obqGetEmptyBufferTimeoutS(output_buffers_queue_t *obqp,
 598:../../../os/hal/src/hal_buffers.c ****                                 sysinterval_t timeout) {
 2026               		.loc 1 598 56 is_stmt 1 view -0
 2027               		.cfi_startproc
 2028               		.loc 1 598 56 is_stmt 0 view .LVU545
 2029 0000 0F93      		push r16
 2030               	.LCFI36:
 2031               		.cfi_def_cfa_offset 3
 2032               		.cfi_offset 16, -2
 2033 0002 1F93      		push r17
 2034               	.LCFI37:
 2035               		.cfi_def_cfa_offset 4
 2036               		.cfi_offset 17, -3
 2037 0004 CF93      		push r28
 2038               	.LCFI38:
 2039               		.cfi_def_cfa_offset 5
 2040               		.cfi_offset 28, -4
 2041 0006 DF93      		push r29
 2042               	.LCFI39:
 2043               		.cfi_def_cfa_offset 6
 2044               		.cfi_offset 29, -5
 2045               	/* prologue: function */
 2046               	/* frame size = 0 */
 2047               	/* stack size = 4 */
 2048               	.L__stack_usage = 4
 2049 0008 EC01      		movw r28,r24
 2050 000a 8B01      		movw r16,r22
 599:../../../os/hal/src/hal_buffers.c **** 
 600:../../../os/hal/src/hal_buffers.c ****   osalDbgCheckClassS();
 2051               		.loc 1 600 23 is_stmt 1 view .LVU546
 601:../../../os/hal/src/hal_buffers.c **** 
 602:../../../os/hal/src/hal_buffers.c ****   while (obqIsFullI(obqp)) {
 2052               		.loc 1 602 3 view .LVU547
 2053               		.loc 1 602 9 is_stmt 0 view .LVU548
 2054 000c 00C0      		rjmp .L74
 2055               	.LVL101:
 2056               	.L76:
 2057               	.LBB438:
 603:../../../os/hal/src/hal_buffers.c ****     if (obqp->suspended) {
 2058               		.loc 1 603 5 is_stmt 1 view .LVU549
 2059               		.loc 1 603 8 is_stmt 0 view .LVU550
 2060 000e 8C81      		ldd r24,Y+4
 2061 0010 8111      		cpse r24,__zero_reg__
 2062 0012 00C0      		rjmp .L77
 604:../../../os/hal/src/hal_buffers.c ****       return MSG_RESET;
 605:../../../os/hal/src/hal_buffers.c ****     }
 606:../../../os/hal/src/hal_buffers.c ****     msg_t msg = osalThreadEnqueueTimeoutS(&obqp->waiting, timeout);
 2063               		.loc 1 606 5 is_stmt 1 view .LVU551
 2064               	.LVL102:
 2065               	.LBB439:
 2066               	.LBI439:
 828:../../../os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 2067               		.loc 2 828 21 view .LVU552
 2068               	.LBB440:
 831:../../../os/hal/osal/rt/osal.h **** }
 2069               		.loc 2 831 3 view .LVU553
 831:../../../os/hal/osal/rt/osal.h **** }
 2070               		.loc 2 831 10 is_stmt 0 view .LVU554
 2071 0014 B801      		movw r22,r16
 2072 0016 CE01      		movw r24,r28
 2073 0018 0E94 0000 		call chThdEnqueueTimeoutS
 2074               	.LVL103:
 831:../../../os/hal/osal/rt/osal.h **** }
 2075               		.loc 2 831 10 view .LVU555
 2076               	.LBE440:
 2077               	.LBE439:
 607:../../../os/hal/src/hal_buffers.c ****     if (msg < MSG_OK) {
 2078               		.loc 1 607 5 is_stmt 1 view .LVU556
 2079               		.loc 1 607 8 is_stmt 0 view .LVU557
 2080 001c 97FD      		sbrc r25,7
 2081 001e 00C0      		rjmp .L73
 2082               	.LVL104:
 2083               	.L74:
 2084               		.loc 1 607 8 view .LVU558
 2085               	.LBE438:
 602:../../../os/hal/src/hal_buffers.c ****     if (obqp->suspended) {
 2086               		.loc 1 602 10 view .LVU559
 2087 0020 8D81      		ldd r24,Y+5
 2088 0022 9E81      		ldd r25,Y+6
 602:../../../os/hal/src/hal_buffers.c ****     if (obqp->suspended) {
 2089               		.loc 1 602 9 view .LVU560
 2090 0024 892B      		or r24,r25
 2091 0026 01F0      		breq .L76
 2092               	.LVL105:
 2093               	.LBB441:
 2094               	.LBB442:
 608:../../../os/hal/src/hal_buffers.c ****       return msg;
 609:../../../os/hal/src/hal_buffers.c ****     }
 610:../../../os/hal/src/hal_buffers.c ****   }
 611:../../../os/hal/src/hal_buffers.c **** 
 612:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsFullI(obqp), "still full");
 2095               		.loc 1 612 3 is_stmt 1 view .LVU561
 2096               		.loc 1 612 3 view .LVU562
 613:../../../os/hal/src/hal_buffers.c **** 
 614:../../../os/hal/src/hal_buffers.c ****   /* Setting up the "current" buffer and its boundary.*/
 615:../../../os/hal/src/hal_buffers.c ****   obqp->ptr = obqp->bwrptr + sizeof (size_t);
 2097               		.loc 1 615 3 view .LVU563
 2098               		.loc 1 615 19 is_stmt 0 view .LVU564
 2099 0028 8F81      		ldd r24,Y+7
 2100 002a 9885      		ldd r25,Y+8
 2101               		.loc 1 615 28 view .LVU565
 2102 002c 9C01      		movw r18,r24
 2103 002e 2E5F      		subi r18,-2
 2104 0030 3F4F      		sbci r19,-1
 2105               		.loc 1 615 13 view .LVU566
 2106 0032 3C8B      		std Y+20,r19
 2107 0034 2B8B      		std Y+19,r18
 616:../../../os/hal/src/hal_buffers.c ****   obqp->top = obqp->bwrptr + obqp->bsize;
 2108               		.loc 1 616 3 is_stmt 1 view .LVU567
 2109               		.loc 1 616 28 is_stmt 0 view .LVU568
 2110 0036 2D85      		ldd r18,Y+13
 2111 0038 3E85      		ldd r19,Y+14
 2112 003a 820F      		add r24,r18
 2113 003c 931F      		adc r25,r19
 2114               		.loc 1 616 13 view .LVU569
 2115 003e 9E8B      		std Y+22,r25
 2116 0040 8D8B      		std Y+21,r24
 617:../../../os/hal/src/hal_buffers.c **** 
 618:../../../os/hal/src/hal_buffers.c ****   return MSG_OK;
 2117               		.loc 1 618 3 is_stmt 1 view .LVU570
 2118               	.LVL106:
 616:../../../os/hal/src/hal_buffers.c ****   obqp->top = obqp->bwrptr + obqp->bsize;
 2119               		.loc 1 616 13 is_stmt 0 view .LVU571
 2120 0042 90E0      		ldi r25,0
 2121 0044 80E0      		ldi r24,0
 2122               	.L73:
 2123               	/* epilogue start */
 616:../../../os/hal/src/hal_buffers.c ****   obqp->top = obqp->bwrptr + obqp->bsize;
 2124               		.loc 1 616 13 view .LVU572
 2125               	.LBE442:
 2126               	.LBE441:
 619:../../../os/hal/src/hal_buffers.c **** }
 2127               		.loc 1 619 1 view .LVU573
 2128 0046 DF91      		pop r29
 2129 0048 CF91      		pop r28
 2130               	.LVL107:
 2131               		.loc 1 619 1 view .LVU574
 2132 004a 1F91      		pop r17
 2133 004c 0F91      		pop r16
 2134               	.LVL108:
 2135               		.loc 1 619 1 view .LVU575
 2136 004e 0895      		ret
 2137               	.LVL109:
 2138               	.L77:
 2139               	.LBB443:
 604:../../../os/hal/src/hal_buffers.c ****     }
 2140               		.loc 1 604 14 view .LVU576
 2141 0050 8EEF      		ldi r24,lo8(-2)
 2142 0052 9FEF      		ldi r25,lo8(-1)
 2143               	/* epilogue start */
 2144               	.LBE443:
 2145               		.loc 1 619 1 view .LVU577
 2146 0054 DF91      		pop r29
 2147 0056 CF91      		pop r28
 2148               	.LVL110:
 2149               		.loc 1 619 1 view .LVU578
 2150 0058 1F91      		pop r17
 2151 005a 0F91      		pop r16
 2152               	.LVL111:
 2153               		.loc 1 619 1 view .LVU579
 2154 005c 0895      		ret
 2155               		.cfi_endproc
 2156               	.LFE188:
 2158               		.section	.text.obqGetEmptyBufferTimeout,"ax",@progbits
 2159               	.global	obqGetEmptyBufferTimeout
 2161               	obqGetEmptyBufferTimeout:
 2162               	.LVL112:
 2163               	.LFB187:
 566:../../../os/hal/src/hal_buffers.c ****   msg_t msg;
 2164               		.loc 1 566 56 is_stmt 1 view -0
 2165               		.cfi_startproc
 2166               	/* prologue: function */
 2167               	/* frame size = 0 */
 2168               	/* stack size = 0 */
 2169               	.L__stack_usage = 0
 567:../../../os/hal/src/hal_buffers.c **** 
 2170               		.loc 1 567 3 view .LVU581
 569:../../../os/hal/src/hal_buffers.c ****   msg = obqGetEmptyBufferTimeoutS(obqp, timeout);
 2171               		.loc 1 569 3 view .LVU582
 2172               	.LBB444:
 2173               	.LBI444:
 509:../../../os/hal/osal/rt/osal.h **** 
 2174               		.loc 2 509 20 view .LVU583
 2175               	.LBE444:
 511:../../../os/hal/osal/rt/osal.h **** }
 2176               		.loc 2 511 3 view .LVU584
 2177               	.LBB449:
 2178               	.LBB445:
 2179               	.LBI445:
 353:../../../os/rt/include/chsys.h **** 
 2180               		.loc 5 353 20 view .LVU585
 2181               	.LBE445:
 2182               	.LBE449:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2183               		.loc 5 355 3 view .LVU586
 2184               	.LBB450:
 2185               	.LBB448:
 2186               	.LBB446:
 2187               	.LBI446:
 435:../../../os/common/ports/AVR/chcore.h **** 
 2188               		.loc 6 435 20 view .LVU587
 2189               	.LBB447:
 437:../../../os/common/ports/AVR/chcore.h **** }
 2190               		.loc 6 437 3 view .LVU588
 2191               	/* #APP */
 2192               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 2193 0000 F894      		cli
 2194               	 ;  0 "" 2
 2195               	/* #NOAPP */
 2196               	.LBE447:
 2197               	.LBE446:
 2198               	.LBE448:
 2199               	.LBE450:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 2200               		.loc 5 356 34 view .LVU589
 357:../../../os/rt/include/chsys.h **** }
 2201               		.loc 5 357 20 view .LVU590
 570:../../../os/hal/src/hal_buffers.c ****   osalSysUnlock();
 2202               		.loc 1 570 3 view .LVU591
 570:../../../os/hal/src/hal_buffers.c ****   osalSysUnlock();
 2203               		.loc 1 570 9 is_stmt 0 view .LVU592
 2204 0002 0E94 0000 		call obqGetEmptyBufferTimeoutS
 2205               	.LVL113:
 571:../../../os/hal/src/hal_buffers.c **** 
 2206               		.loc 1 571 3 is_stmt 1 view .LVU593
 2207               	.LBB451:
 2208               	.LBI451:
 520:../../../os/hal/osal/rt/osal.h **** 
 2209               		.loc 2 520 20 view .LVU594
 2210               	.LBE451:
 522:../../../os/hal/osal/rt/osal.h **** }
 2211               		.loc 2 522 3 view .LVU595
 2212               	.LBB456:
 2213               	.LBB452:
 2214               	.LBI452:
 365:../../../os/rt/include/chsys.h **** 
 2215               		.loc 5 365 20 view .LVU596
 2216               	.LBB453:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2217               		.loc 5 367 22 view .LVU597
 368:../../../os/rt/include/chsys.h **** 
 2218               		.loc 5 368 33 view .LVU598
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2219               		.loc 5 374 3 view .LVU599
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2220               		.loc 5 374 3 view .LVU600
 2221               		.loc 5 378 3 view .LVU601
 2222               	.LBB454:
 2223               	.LBI454:
 445:../../../os/common/ports/AVR/chcore.h **** 
 2224               		.loc 6 445 20 view .LVU602
 2225               	.LBB455:
 2226               		.loc 6 447 3 view .LVU603
 2227               	/* #APP */
 2228               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 2229 0006 7894      		sei
 2230               	 ;  0 "" 2
 2231               	/* #NOAPP */
 2232               	.LBE455:
 2233               	.LBE454:
 2234               	.LBE453:
 2235               	.LBE452:
 2236               	.LBE456:
 573:../../../os/hal/src/hal_buffers.c **** }
 2237               		.loc 1 573 3 view .LVU604
 2238               	/* epilogue start */
 574:../../../os/hal/src/hal_buffers.c **** 
 2239               		.loc 1 574 1 is_stmt 0 view .LVU605
 2240 0008 0895      		ret
 2241               		.cfi_endproc
 2242               	.LFE187:
 2244               		.section	.text.obqPostFullBuffer,"ax",@progbits
 2245               	.global	obqPostFullBuffer
 2247               	obqPostFullBuffer:
 2248               	.LVL114:
 2249               	.LFB189:
 620:../../../os/hal/src/hal_buffers.c **** 
 621:../../../os/hal/src/hal_buffers.c **** /**
 622:../../../os/hal/src/hal_buffers.c ****  * @brief   Posts a new filled buffer to the queue.
 623:../../../os/hal/src/hal_buffers.c ****  * @note    The object callback is called after releasing the buffer.
 624:../../../os/hal/src/hal_buffers.c ****  *
 625:../../../os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 626:../../../os/hal/src/hal_buffers.c ****  * @param[in] size      used size of the buffer, cannot be zero
 627:../../../os/hal/src/hal_buffers.c ****  *
 628:../../../os/hal/src/hal_buffers.c ****  * @api
 629:../../../os/hal/src/hal_buffers.c ****  */
 630:../../../os/hal/src/hal_buffers.c **** void obqPostFullBuffer(output_buffers_queue_t *obqp, size_t size) {
 2250               		.loc 1 630 67 is_stmt 1 view -0
 2251               		.cfi_startproc
 2252               	/* prologue: function */
 2253               	/* frame size = 0 */
 2254               	/* stack size = 0 */
 2255               	.L__stack_usage = 0
 2256               		.loc 1 630 67 is_stmt 0 view .LVU607
 2257 0000 DC01      		movw r26,r24
 631:../../../os/hal/src/hal_buffers.c **** 
 632:../../../os/hal/src/hal_buffers.c ****   osalSysLock();
 2258               		.loc 1 632 3 is_stmt 1 view .LVU608
 2259               	.LBB457:
 2260               	.LBI457:
 509:../../../os/hal/osal/rt/osal.h **** 
 2261               		.loc 2 509 20 view .LVU609
 2262               	.LBE457:
 511:../../../os/hal/osal/rt/osal.h **** }
 2263               		.loc 2 511 3 view .LVU610
 2264               	.LBB462:
 2265               	.LBB458:
 2266               	.LBI458:
 353:../../../os/rt/include/chsys.h **** 
 2267               		.loc 5 353 20 view .LVU611
 2268               	.LBE458:
 2269               	.LBE462:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2270               		.loc 5 355 3 view .LVU612
 2271               	.LBB463:
 2272               	.LBB461:
 2273               	.LBB459:
 2274               	.LBI459:
 435:../../../os/common/ports/AVR/chcore.h **** 
 2275               		.loc 6 435 20 view .LVU613
 2276               	.LBB460:
 437:../../../os/common/ports/AVR/chcore.h **** }
 2277               		.loc 6 437 3 view .LVU614
 2278               	/* #APP */
 2279               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 2280 0002 F894      		cli
 2281               	 ;  0 "" 2
 2282               	/* #NOAPP */
 2283               	.LBE460:
 2284               	.LBE459:
 2285               	.LBE461:
 2286               	.LBE463:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 2287               		.loc 5 356 34 view .LVU615
 357:../../../os/rt/include/chsys.h **** }
 2288               		.loc 5 357 20 view .LVU616
 633:../../../os/hal/src/hal_buffers.c ****   obqPostFullBufferS(obqp, size);
 2289               		.loc 1 633 3 view .LVU617
 2290               	.LVL115:
 2291               	.LBB464:
 2292               	.LBI464:
 634:../../../os/hal/src/hal_buffers.c ****   osalSysUnlock();
 635:../../../os/hal/src/hal_buffers.c **** }
 636:../../../os/hal/src/hal_buffers.c **** 
 637:../../../os/hal/src/hal_buffers.c **** /**
 638:../../../os/hal/src/hal_buffers.c ****  * @brief   Posts a new filled buffer to the queue.
 639:../../../os/hal/src/hal_buffers.c ****  * @note    The object callback is called after releasing the buffer.
 640:../../../os/hal/src/hal_buffers.c ****  *
 641:../../../os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 642:../../../os/hal/src/hal_buffers.c ****  * @param[in] size      used size of the buffer, cannot be zero
 643:../../../os/hal/src/hal_buffers.c ****  *
 644:../../../os/hal/src/hal_buffers.c ****  * @sclass
 645:../../../os/hal/src/hal_buffers.c ****  */
 646:../../../os/hal/src/hal_buffers.c **** void obqPostFullBufferS(output_buffers_queue_t *obqp, size_t size) {
 2293               		.loc 1 646 6 view .LVU618
 2294               	.LBB465:
 647:../../../os/hal/src/hal_buffers.c **** 
 648:../../../os/hal/src/hal_buffers.c ****   osalDbgCheckClassS();
 2295               		.loc 1 648 23 view .LVU619
 649:../../../os/hal/src/hal_buffers.c ****   osalDbgCheck((size > 0U) && (size <= (obqp->bsize - sizeof (size_t))));
 2296               		.loc 1 649 3 view .LVU620
 2297               		.loc 1 649 3 view .LVU621
 650:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsFullI(obqp), "buffers queue full");
 2298               		.loc 1 650 3 view .LVU622
 2299               		.loc 1 650 3 view .LVU623
 651:../../../os/hal/src/hal_buffers.c **** 
 652:../../../os/hal/src/hal_buffers.c ****   /* Writing size field in the buffer.*/
 653:../../../os/hal/src/hal_buffers.c ****   *((size_t *)obqp->bwrptr) = size;
 2300               		.loc 1 653 3 view .LVU624
 2301               		.loc 1 653 19 is_stmt 0 view .LVU625
 2302 0004 1796      		adiw r26,7
 2303 0006 ED91      		ld r30,X+
 2304 0008 FC91      		ld r31,X
 2305 000a 1897      		sbiw r26,7+1
 2306               		.loc 1 653 29 view .LVU626
 2307 000c 7183      		std Z+1,r23
 2308 000e 6083      		st Z,r22
 654:../../../os/hal/src/hal_buffers.c **** 
 655:../../../os/hal/src/hal_buffers.c ****   /* Posting the buffer in the queue.*/
 656:../../../os/hal/src/hal_buffers.c ****   obqp->bcounter--;
 2309               		.loc 1 656 3 is_stmt 1 view .LVU627
 2310               		.loc 1 656 7 is_stmt 0 view .LVU628
 2311 0010 1596      		adiw r26,5
 2312 0012 8D91      		ld r24,X+
 2313 0014 9C91      		ld r25,X
 2314 0016 1697      		sbiw r26,5+1
 2315               	.LVL116:
 2316               		.loc 1 656 17 view .LVU629
 2317 0018 0197      		sbiw r24,1
 2318 001a 1696      		adiw r26,5+1
 2319 001c 9C93      		st X,r25
 2320 001e 8E93      		st -X,r24
 2321 0020 1597      		sbiw r26,5
 657:../../../os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 2322               		.loc 1 657 3 is_stmt 1 view .LVU630
 2323               		.loc 1 657 16 is_stmt 0 view .LVU631
 2324 0022 1D96      		adiw r26,13
 2325 0024 8D91      		ld r24,X+
 2326 0026 9C91      		ld r25,X
 2327 0028 1E97      		sbiw r26,13+1
 2328 002a E80F      		add r30,r24
 2329 002c F91F      		adc r31,r25
 2330 002e 1896      		adiw r26,7+1
 2331 0030 FC93      		st X,r31
 2332 0032 EE93      		st -X,r30
 2333 0034 1797      		sbiw r26,7
 658:../../../os/hal/src/hal_buffers.c ****   if (obqp->bwrptr >= obqp->btop) {
 2334               		.loc 1 658 3 is_stmt 1 view .LVU632
 2335               		.loc 1 658 6 is_stmt 0 view .LVU633
 2336 0036 1B96      		adiw r26,11
 2337 0038 8D91      		ld r24,X+
 2338 003a 9C91      		ld r25,X
 2339 003c 1C97      		sbiw r26,11+1
 2340 003e E817      		cp r30,r24
 2341 0040 F907      		cpc r31,r25
 2342 0042 00F0      		brlo .L80
 659:../../../os/hal/src/hal_buffers.c ****     obqp->bwrptr = obqp->buffers;
 2343               		.loc 1 659 5 is_stmt 1 view .LVU634
 2344               		.loc 1 659 18 is_stmt 0 view .LVU635
 2345 0044 5196      		adiw r26,17
 2346 0046 8D91      		ld r24,X+
 2347 0048 9C91      		ld r25,X
 2348 004a 5297      		sbiw r26,17+1
 2349 004c 1896      		adiw r26,7+1
 2350 004e 9C93      		st X,r25
 2351 0050 8E93      		st -X,r24
 2352 0052 1797      		sbiw r26,7
 2353               	.L80:
 660:../../../os/hal/src/hal_buffers.c ****   }
 661:../../../os/hal/src/hal_buffers.c **** 
 662:../../../os/hal/src/hal_buffers.c ****   /* No "current" buffer.*/
 663:../../../os/hal/src/hal_buffers.c ****   obqp->ptr = NULL;
 2354               		.loc 1 663 3 is_stmt 1 view .LVU636
 2355               		.loc 1 663 13 is_stmt 0 view .LVU637
 2356 0054 5496      		adiw r26,19+1
 2357 0056 1C92      		st X,__zero_reg__
 2358 0058 1E92      		st -X,__zero_reg__
 2359 005a 5397      		sbiw r26,19
 664:../../../os/hal/src/hal_buffers.c **** 
 665:../../../os/hal/src/hal_buffers.c ****   /* Notifying the buffer release.*/
 666:../../../os/hal/src/hal_buffers.c ****   if (obqp->notify != NULL) {
 2360               		.loc 1 666 3 is_stmt 1 view .LVU638
 2361               		.loc 1 666 11 is_stmt 0 view .LVU639
 2362 005c 5796      		adiw r26,23
 2363 005e ED91      		ld r30,X+
 2364 0060 FC91      		ld r31,X
 2365 0062 5897      		sbiw r26,23+1
 2366               		.loc 1 666 6 view .LVU640
 2367 0064 3097      		sbiw r30,0
 2368 0066 01F0      		breq .L81
 667:../../../os/hal/src/hal_buffers.c ****     obqp->notify(obqp);
 2369               		.loc 1 667 5 is_stmt 1 view .LVU641
 2370 0068 CD01      		movw r24,r26
 2371 006a 0995      		icall
 2372               	.LVL117:
 2373               	.L81:
 2374               		.loc 1 667 5 is_stmt 0 view .LVU642
 2375               	.LBE465:
 2376               	.LBE464:
 634:../../../os/hal/src/hal_buffers.c **** }
 2377               		.loc 1 634 3 is_stmt 1 view .LVU643
 2378               	.LBB466:
 2379               	.LBI466:
 520:../../../os/hal/osal/rt/osal.h **** 
 2380               		.loc 2 520 20 view .LVU644
 2381               	.LBE466:
 522:../../../os/hal/osal/rt/osal.h **** }
 2382               		.loc 2 522 3 view .LVU645
 2383               	.LBB471:
 2384               	.LBB467:
 2385               	.LBI467:
 365:../../../os/rt/include/chsys.h **** 
 2386               		.loc 5 365 20 view .LVU646
 2387               	.LBB468:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2388               		.loc 5 367 22 view .LVU647
 368:../../../os/rt/include/chsys.h **** 
 2389               		.loc 5 368 33 view .LVU648
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2390               		.loc 5 374 3 view .LVU649
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2391               		.loc 5 374 3 view .LVU650
 2392               		.loc 5 378 3 view .LVU651
 2393               	.LBB469:
 2394               	.LBI469:
 445:../../../os/common/ports/AVR/chcore.h **** 
 2395               		.loc 6 445 20 view .LVU652
 2396               	.LBB470:
 2397               		.loc 6 447 3 view .LVU653
 2398               	/* #APP */
 2399               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 2400 006c 7894      		sei
 2401               	 ;  0 "" 2
 2402               	/* #NOAPP */
 2403               	/* epilogue start */
 2404               	.LBE470:
 2405               	.LBE469:
 2406               	.LBE468:
 2407               	.LBE467:
 2408               	.LBE471:
 635:../../../os/hal/src/hal_buffers.c **** 
 2409               		.loc 1 635 1 is_stmt 0 view .LVU654
 2410 006e 0895      		ret
 2411               		.cfi_endproc
 2412               	.LFE189:
 2414               		.section	.text.obqPostFullBufferS,"ax",@progbits
 2415               	.global	obqPostFullBufferS
 2417               	obqPostFullBufferS:
 2418               	.LVL118:
 2419               	.LFB190:
 646:../../../os/hal/src/hal_buffers.c **** 
 2420               		.loc 1 646 68 is_stmt 1 view -0
 2421               		.cfi_startproc
 2422               	/* prologue: function */
 2423               	/* frame size = 0 */
 2424               	/* stack size = 0 */
 2425               	.L__stack_usage = 0
 646:../../../os/hal/src/hal_buffers.c **** 
 2426               		.loc 1 646 68 is_stmt 0 view .LVU656
 2427 0000 DC01      		movw r26,r24
 648:../../../os/hal/src/hal_buffers.c ****   osalDbgCheck((size > 0U) && (size <= (obqp->bsize - sizeof (size_t))));
 2428               		.loc 1 648 23 is_stmt 1 view .LVU657
 649:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsFullI(obqp), "buffers queue full");
 2429               		.loc 1 649 3 view .LVU658
 649:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsFullI(obqp), "buffers queue full");
 2430               		.loc 1 649 3 view .LVU659
 650:../../../os/hal/src/hal_buffers.c **** 
 2431               		.loc 1 650 3 view .LVU660
 650:../../../os/hal/src/hal_buffers.c **** 
 2432               		.loc 1 650 3 view .LVU661
 653:../../../os/hal/src/hal_buffers.c **** 
 2433               		.loc 1 653 3 view .LVU662
 653:../../../os/hal/src/hal_buffers.c **** 
 2434               		.loc 1 653 19 is_stmt 0 view .LVU663
 2435 0002 1796      		adiw r26,7
 2436 0004 ED91      		ld r30,X+
 2437 0006 FC91      		ld r31,X
 2438 0008 1897      		sbiw r26,7+1
 653:../../../os/hal/src/hal_buffers.c **** 
 2439               		.loc 1 653 29 view .LVU664
 2440 000a 7183      		std Z+1,r23
 2441 000c 6083      		st Z,r22
 656:../../../os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 2442               		.loc 1 656 3 is_stmt 1 view .LVU665
 656:../../../os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 2443               		.loc 1 656 7 is_stmt 0 view .LVU666
 2444 000e 1596      		adiw r26,5
 2445 0010 8D91      		ld r24,X+
 2446 0012 9C91      		ld r25,X
 2447 0014 1697      		sbiw r26,5+1
 2448               	.LVL119:
 656:../../../os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 2449               		.loc 1 656 17 view .LVU667
 2450 0016 0197      		sbiw r24,1
 2451 0018 1696      		adiw r26,5+1
 2452 001a 9C93      		st X,r25
 2453 001c 8E93      		st -X,r24
 2454 001e 1597      		sbiw r26,5
 657:../../../os/hal/src/hal_buffers.c ****   if (obqp->bwrptr >= obqp->btop) {
 2455               		.loc 1 657 3 is_stmt 1 view .LVU668
 657:../../../os/hal/src/hal_buffers.c ****   if (obqp->bwrptr >= obqp->btop) {
 2456               		.loc 1 657 16 is_stmt 0 view .LVU669
 2457 0020 1D96      		adiw r26,13
 2458 0022 8D91      		ld r24,X+
 2459 0024 9C91      		ld r25,X
 2460 0026 1E97      		sbiw r26,13+1
 2461 0028 E80F      		add r30,r24
 2462 002a F91F      		adc r31,r25
 2463 002c 1896      		adiw r26,7+1
 2464 002e FC93      		st X,r31
 2465 0030 EE93      		st -X,r30
 2466 0032 1797      		sbiw r26,7
 658:../../../os/hal/src/hal_buffers.c ****     obqp->bwrptr = obqp->buffers;
 2467               		.loc 1 658 3 is_stmt 1 view .LVU670
 658:../../../os/hal/src/hal_buffers.c ****     obqp->bwrptr = obqp->buffers;
 2468               		.loc 1 658 6 is_stmt 0 view .LVU671
 2469 0034 1B96      		adiw r26,11
 2470 0036 8D91      		ld r24,X+
 2471 0038 9C91      		ld r25,X
 2472 003a 1C97      		sbiw r26,11+1
 2473 003c E817      		cp r30,r24
 2474 003e F907      		cpc r31,r25
 2475 0040 00F0      		brlo .L86
 659:../../../os/hal/src/hal_buffers.c ****   }
 2476               		.loc 1 659 5 is_stmt 1 view .LVU672
 659:../../../os/hal/src/hal_buffers.c ****   }
 2477               		.loc 1 659 18 is_stmt 0 view .LVU673
 2478 0042 5196      		adiw r26,17
 2479 0044 8D91      		ld r24,X+
 2480 0046 9C91      		ld r25,X
 2481 0048 5297      		sbiw r26,17+1
 2482 004a 1896      		adiw r26,7+1
 2483 004c 9C93      		st X,r25
 2484 004e 8E93      		st -X,r24
 2485 0050 1797      		sbiw r26,7
 2486               	.L86:
 663:../../../os/hal/src/hal_buffers.c **** 
 2487               		.loc 1 663 3 is_stmt 1 view .LVU674
 663:../../../os/hal/src/hal_buffers.c **** 
 2488               		.loc 1 663 13 is_stmt 0 view .LVU675
 2489 0052 5496      		adiw r26,19+1
 2490 0054 1C92      		st X,__zero_reg__
 2491 0056 1E92      		st -X,__zero_reg__
 2492 0058 5397      		sbiw r26,19
 666:../../../os/hal/src/hal_buffers.c ****     obqp->notify(obqp);
 2493               		.loc 1 666 3 is_stmt 1 view .LVU676
 666:../../../os/hal/src/hal_buffers.c ****     obqp->notify(obqp);
 2494               		.loc 1 666 11 is_stmt 0 view .LVU677
 2495 005a 5796      		adiw r26,23
 2496 005c ED91      		ld r30,X+
 2497 005e FC91      		ld r31,X
 2498 0060 5897      		sbiw r26,23+1
 666:../../../os/hal/src/hal_buffers.c ****     obqp->notify(obqp);
 2499               		.loc 1 666 6 view .LVU678
 2500 0062 3097      		sbiw r30,0
 2501 0064 01F0      		breq .L85
 2502               		.loc 1 667 5 is_stmt 1 view .LVU679
 2503 0066 CD01      		movw r24,r26
 2504 0068 0994      		ijmp
 2505               	.LVL120:
 2506               	.L85:
 2507               	/* epilogue start */
 668:../../../os/hal/src/hal_buffers.c ****   }
 669:../../../os/hal/src/hal_buffers.c **** }
 2508               		.loc 1 669 1 is_stmt 0 view .LVU680
 2509 006a 0895      		ret
 2510               		.cfi_endproc
 2511               	.LFE190:
 2513               		.section	.text.obqPutTimeout,"ax",@progbits
 2514               	.global	obqPutTimeout
 2516               	obqPutTimeout:
 2517               	.LVL121:
 2518               	.LFB191:
 670:../../../os/hal/src/hal_buffers.c **** 
 671:../../../os/hal/src/hal_buffers.c **** /**
 672:../../../os/hal/src/hal_buffers.c ****  * @brief   Output queue write with timeout.
 673:../../../os/hal/src/hal_buffers.c ****  * @details This function writes a byte value to an output queue. If
 674:../../../os/hal/src/hal_buffers.c ****  *          the queue is full then the calling thread is suspended until a
 675:../../../os/hal/src/hal_buffers.c ****  *          new buffer is freed in the queue or a timeout occurs.
 676:../../../os/hal/src/hal_buffers.c ****  *
 677:../../../os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 678:../../../os/hal/src/hal_buffers.c ****  * @param[in] b         byte value to be transferred
 679:../../../os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 680:../../../os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 681:../../../os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 682:../../../os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 683:../../../os/hal/src/hal_buffers.c ****  *                      .
 684:../../../os/hal/src/hal_buffers.c ****  * @return              A byte value from the queue.
 685:../../../os/hal/src/hal_buffers.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 686:../../../os/hal/src/hal_buffers.c ****  * @retval MSG_RESET    if the queue has been reset or has been put in
 687:../../../os/hal/src/hal_buffers.c ****  *                      suspended state.
 688:../../../os/hal/src/hal_buffers.c ****  *
 689:../../../os/hal/src/hal_buffers.c ****  * @api
 690:../../../os/hal/src/hal_buffers.c ****  */
 691:../../../os/hal/src/hal_buffers.c **** msg_t obqPutTimeout(output_buffers_queue_t *obqp, uint8_t b,
 692:../../../os/hal/src/hal_buffers.c ****                     sysinterval_t timeout) {
 2519               		.loc 1 692 44 is_stmt 1 view -0
 2520               		.cfi_startproc
 2521               		.loc 1 692 44 is_stmt 0 view .LVU682
 2522 0000 1F93      		push r17
 2523               	.LCFI40:
 2524               		.cfi_def_cfa_offset 3
 2525               		.cfi_offset 17, -2
 2526 0002 CF93      		push r28
 2527               	.LCFI41:
 2528               		.cfi_def_cfa_offset 4
 2529               		.cfi_offset 28, -3
 2530 0004 DF93      		push r29
 2531               	.LCFI42:
 2532               		.cfi_def_cfa_offset 5
 2533               		.cfi_offset 29, -4
 2534               	/* prologue: function */
 2535               	/* frame size = 0 */
 2536               	/* stack size = 3 */
 2537               	.L__stack_usage = 3
 2538 0006 EC01      		movw r28,r24
 2539 0008 162F      		mov r17,r22
 693:../../../os/hal/src/hal_buffers.c ****   msg_t msg;
 2540               		.loc 1 693 3 is_stmt 1 view .LVU683
 694:../../../os/hal/src/hal_buffers.c **** 
 695:../../../os/hal/src/hal_buffers.c ****   osalSysLock();
 2541               		.loc 1 695 3 view .LVU684
 2542               	.LBB472:
 2543               	.LBI472:
 509:../../../os/hal/osal/rt/osal.h **** 
 2544               		.loc 2 509 20 view .LVU685
 2545               	.LBE472:
 511:../../../os/hal/osal/rt/osal.h **** }
 2546               		.loc 2 511 3 view .LVU686
 2547               	.LBB477:
 2548               	.LBB473:
 2549               	.LBI473:
 353:../../../os/rt/include/chsys.h **** 
 2550               		.loc 5 353 20 view .LVU687
 2551               	.LBE473:
 2552               	.LBE477:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2553               		.loc 5 355 3 view .LVU688
 2554               	.LBB478:
 2555               	.LBB476:
 2556               	.LBB474:
 2557               	.LBI474:
 435:../../../os/common/ports/AVR/chcore.h **** 
 2558               		.loc 6 435 20 view .LVU689
 2559               	.LBB475:
 437:../../../os/common/ports/AVR/chcore.h **** }
 2560               		.loc 6 437 3 view .LVU690
 2561               	/* #APP */
 2562               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 2563 000a F894      		cli
 2564               	 ;  0 "" 2
 2565               	/* #NOAPP */
 2566               	.LBE475:
 2567               	.LBE474:
 2568               	.LBE476:
 2569               	.LBE478:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 2570               		.loc 5 356 34 view .LVU691
 357:../../../os/rt/include/chsys.h **** }
 2571               		.loc 5 357 20 view .LVU692
 696:../../../os/hal/src/hal_buffers.c **** 
 697:../../../os/hal/src/hal_buffers.c ****   /* This condition indicates that a new buffer must be acquired.*/
 698:../../../os/hal/src/hal_buffers.c ****   if (obqp->ptr == NULL) {
 2572               		.loc 1 698 3 view .LVU693
 2573               		.loc 1 698 11 is_stmt 0 view .LVU694
 2574 000c EB89      		ldd r30,Y+19
 2575 000e FC89      		ldd r31,Y+20
 2576               		.loc 1 698 6 view .LVU695
 2577 0010 3097      		sbiw r30,0
 2578 0012 01F0      		breq .L99
 2579               	.LVL122:
 2580               	.L89:
 699:../../../os/hal/src/hal_buffers.c ****     msg = obqGetEmptyBufferTimeoutS(obqp, timeout);
 700:../../../os/hal/src/hal_buffers.c ****     if (msg != MSG_OK) {
 701:../../../os/hal/src/hal_buffers.c ****       osalSysUnlock();
 702:../../../os/hal/src/hal_buffers.c ****       return msg;
 703:../../../os/hal/src/hal_buffers.c ****     }
 704:../../../os/hal/src/hal_buffers.c ****   }
 705:../../../os/hal/src/hal_buffers.c **** 
 706:../../../os/hal/src/hal_buffers.c ****   /* Writing the byte to the buffer.*/
 707:../../../os/hal/src/hal_buffers.c ****   *obqp->ptr = b;
 2581               		.loc 1 707 3 is_stmt 1 view .LVU696
 2582               		.loc 1 707 14 is_stmt 0 view .LVU697
 2583 0014 1083      		st Z,r17
 708:../../../os/hal/src/hal_buffers.c ****   obqp->ptr++;
 2584               		.loc 1 708 3 is_stmt 1 view .LVU698
 2585               		.loc 1 708 12 is_stmt 0 view .LVU699
 2586 0016 8B89      		ldd r24,Y+19
 2587 0018 9C89      		ldd r25,Y+20
 2588 001a 0196      		adiw r24,1
 2589 001c 9C8B      		std Y+20,r25
 2590 001e 8B8B      		std Y+19,r24
 709:../../../os/hal/src/hal_buffers.c **** 
 710:../../../os/hal/src/hal_buffers.c ****   /* If the current buffer has been fully written then it is posted as
 711:../../../os/hal/src/hal_buffers.c ****      full in the queue.*/
 712:../../../os/hal/src/hal_buffers.c ****   if (obqp->ptr >= obqp->top) {
 2591               		.loc 1 712 3 is_stmt 1 view .LVU700
 2592               		.loc 1 712 6 is_stmt 0 view .LVU701
 2593 0020 2D89      		ldd r18,Y+21
 2594 0022 3E89      		ldd r19,Y+22
 2595 0024 8217      		cp r24,r18
 2596 0026 9307      		cpc r25,r19
 2597 0028 00F0      		brlo .L93
 713:../../../os/hal/src/hal_buffers.c ****     obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 2598               		.loc 1 713 5 is_stmt 1 view .LVU702
 2599               	.LVL123:
 2600               	.LBB479:
 2601               	.LBI479:
 646:../../../os/hal/src/hal_buffers.c **** 
 2602               		.loc 1 646 6 view .LVU703
 2603               	.LBB480:
 648:../../../os/hal/src/hal_buffers.c ****   osalDbgCheck((size > 0U) && (size <= (obqp->bsize - sizeof (size_t))));
 2604               		.loc 1 648 23 view .LVU704
 649:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsFullI(obqp), "buffers queue full");
 2605               		.loc 1 649 3 view .LVU705
 649:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsFullI(obqp), "buffers queue full");
 2606               		.loc 1 649 3 view .LVU706
 650:../../../os/hal/src/hal_buffers.c **** 
 2607               		.loc 1 650 3 view .LVU707
 650:../../../os/hal/src/hal_buffers.c **** 
 2608               		.loc 1 650 3 view .LVU708
 653:../../../os/hal/src/hal_buffers.c **** 
 2609               		.loc 1 653 3 view .LVU709
 653:../../../os/hal/src/hal_buffers.c **** 
 2610               		.loc 1 653 19 is_stmt 0 view .LVU710
 2611 002a EF81      		ldd r30,Y+7
 2612 002c F885      		ldd r31,Y+8
 2613               	.LBE480:
 2614               	.LBE479:
 2615               		.loc 1 713 5 view .LVU711
 2616 002e 8D85      		ldd r24,Y+13
 2617 0030 9E85      		ldd r25,Y+14
 2618 0032 0297      		sbiw r24,2
 2619               	.LVL124:
 2620               	.LBB482:
 2621               	.LBB481:
 653:../../../os/hal/src/hal_buffers.c **** 
 2622               		.loc 1 653 29 view .LVU712
 2623 0034 9183      		std Z+1,r25
 2624 0036 8083      		st Z,r24
 656:../../../os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 2625               		.loc 1 656 3 is_stmt 1 view .LVU713
 656:../../../os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 2626               		.loc 1 656 7 is_stmt 0 view .LVU714
 2627 0038 8D81      		ldd r24,Y+5
 2628 003a 9E81      		ldd r25,Y+6
 2629               	.LVL125:
 656:../../../os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 2630               		.loc 1 656 17 view .LVU715
 2631 003c 0197      		sbiw r24,1
 2632 003e 9E83      		std Y+6,r25
 2633 0040 8D83      		std Y+5,r24
 2634               	.LVL126:
 657:../../../os/hal/src/hal_buffers.c ****   if (obqp->bwrptr >= obqp->btop) {
 2635               		.loc 1 657 3 is_stmt 1 view .LVU716
 657:../../../os/hal/src/hal_buffers.c ****   if (obqp->bwrptr >= obqp->btop) {
 2636               		.loc 1 657 16 is_stmt 0 view .LVU717
 2637 0042 8D85      		ldd r24,Y+13
 2638 0044 9E85      		ldd r25,Y+14
 2639 0046 8E0F      		add r24,r30
 2640 0048 9F1F      		adc r25,r31
 2641 004a 9887      		std Y+8,r25
 2642 004c 8F83      		std Y+7,r24
 658:../../../os/hal/src/hal_buffers.c ****     obqp->bwrptr = obqp->buffers;
 2643               		.loc 1 658 3 is_stmt 1 view .LVU718
 658:../../../os/hal/src/hal_buffers.c ****     obqp->bwrptr = obqp->buffers;
 2644               		.loc 1 658 6 is_stmt 0 view .LVU719
 2645 004e 2B85      		ldd r18,Y+11
 2646 0050 3C85      		ldd r19,Y+12
 2647 0052 8217      		cp r24,r18
 2648 0054 9307      		cpc r25,r19
 2649 0056 00F0      		brlo .L94
 659:../../../os/hal/src/hal_buffers.c ****   }
 2650               		.loc 1 659 5 is_stmt 1 view .LVU720
 659:../../../os/hal/src/hal_buffers.c ****   }
 2651               		.loc 1 659 18 is_stmt 0 view .LVU721
 2652 0058 8989      		ldd r24,Y+17
 2653 005a 9A89      		ldd r25,Y+18
 2654 005c 9887      		std Y+8,r25
 2655 005e 8F83      		std Y+7,r24
 2656               	.L94:
 663:../../../os/hal/src/hal_buffers.c **** 
 2657               		.loc 1 663 3 is_stmt 1 view .LVU722
 663:../../../os/hal/src/hal_buffers.c **** 
 2658               		.loc 1 663 13 is_stmt 0 view .LVU723
 2659 0060 1C8A      		std Y+20,__zero_reg__
 2660 0062 1B8A      		std Y+19,__zero_reg__
 666:../../../os/hal/src/hal_buffers.c ****     obqp->notify(obqp);
 2661               		.loc 1 666 3 is_stmt 1 view .LVU724
 666:../../../os/hal/src/hal_buffers.c ****     obqp->notify(obqp);
 2662               		.loc 1 666 11 is_stmt 0 view .LVU725
 2663 0064 EF89      		ldd r30,Y+23
 2664 0066 F88D      		ldd r31,Y+24
 666:../../../os/hal/src/hal_buffers.c ****     obqp->notify(obqp);
 2665               		.loc 1 666 6 view .LVU726
 2666 0068 3097      		sbiw r30,0
 2667 006a 01F0      		breq .L93
 667:../../../os/hal/src/hal_buffers.c ****   }
 2668               		.loc 1 667 5 is_stmt 1 view .LVU727
 2669 006c CE01      		movw r24,r28
 2670 006e 0995      		icall
 2671               	.LVL127:
 2672               	.L93:
 667:../../../os/hal/src/hal_buffers.c ****   }
 2673               		.loc 1 667 5 is_stmt 0 view .LVU728
 2674               	.LBE481:
 2675               	.LBE482:
 714:../../../os/hal/src/hal_buffers.c ****   }
 715:../../../os/hal/src/hal_buffers.c **** 
 716:../../../os/hal/src/hal_buffers.c ****   osalSysUnlock();
 2676               		.loc 1 716 3 is_stmt 1 view .LVU729
 2677               	.LBB483:
 2678               	.LBI483:
 520:../../../os/hal/osal/rt/osal.h **** 
 2679               		.loc 2 520 20 view .LVU730
 2680               	.LBE483:
 522:../../../os/hal/osal/rt/osal.h **** }
 2681               		.loc 2 522 3 view .LVU731
 2682               	.LBB488:
 2683               	.LBB484:
 2684               	.LBI484:
 365:../../../os/rt/include/chsys.h **** 
 2685               		.loc 5 365 20 view .LVU732
 2686               	.LBB485:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2687               		.loc 5 367 22 view .LVU733
 368:../../../os/rt/include/chsys.h **** 
 2688               		.loc 5 368 33 view .LVU734
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2689               		.loc 5 374 3 view .LVU735
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2690               		.loc 5 374 3 view .LVU736
 2691               		.loc 5 378 3 view .LVU737
 2692               	.LBB486:
 2693               	.LBI486:
 445:../../../os/common/ports/AVR/chcore.h **** 
 2694               		.loc 6 445 20 view .LVU738
 2695               	.LBB487:
 2696               		.loc 6 447 3 view .LVU739
 2697               	/* #APP */
 2698               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 2699 0070 7894      		sei
 2700               	 ;  0 "" 2
 2701               	/* #NOAPP */
 2702               	.LBE487:
 2703               	.LBE486:
 2704               	.LBE485:
 2705               	.LBE484:
 2706               	.LBE488:
 717:../../../os/hal/src/hal_buffers.c ****   return MSG_OK;
 2707               		.loc 1 717 3 view .LVU740
 2708               		.loc 1 717 10 is_stmt 0 view .LVU741
 2709 0072 90E0      		ldi r25,0
 2710 0074 80E0      		ldi r24,0
 2711               	.L88:
 2712               	/* epilogue start */
 718:../../../os/hal/src/hal_buffers.c **** }
 2713               		.loc 1 718 1 view .LVU742
 2714 0076 DF91      		pop r29
 2715 0078 CF91      		pop r28
 2716               	.LVL128:
 2717               		.loc 1 718 1 view .LVU743
 2718 007a 1F91      		pop r17
 2719               	.LVL129:
 2720               		.loc 1 718 1 view .LVU744
 2721 007c 0895      		ret
 2722               	.LVL130:
 2723               	.L99:
 699:../../../os/hal/src/hal_buffers.c ****     if (msg != MSG_OK) {
 2724               		.loc 1 699 5 is_stmt 1 view .LVU745
 699:../../../os/hal/src/hal_buffers.c ****     if (msg != MSG_OK) {
 2725               		.loc 1 699 11 is_stmt 0 view .LVU746
 2726 007e BA01      		movw r22,r20
 2727 0080 0E94 0000 		call obqGetEmptyBufferTimeoutS
 2728               	.LVL131:
 700:../../../os/hal/src/hal_buffers.c ****       osalSysUnlock();
 2729               		.loc 1 700 5 is_stmt 1 view .LVU747
 700:../../../os/hal/src/hal_buffers.c ****       osalSysUnlock();
 2730               		.loc 1 700 8 is_stmt 0 view .LVU748
 2731 0084 0097      		sbiw r24,0
 2732 0086 01F4      		brne .L90
 2733 0088 EB89      		ldd r30,Y+19
 2734 008a FC89      		ldd r31,Y+20
 2735 008c 00C0      		rjmp .L89
 2736               	.L90:
 701:../../../os/hal/src/hal_buffers.c ****       return msg;
 2737               		.loc 1 701 7 is_stmt 1 view .LVU749
 2738               	.LBB489:
 2739               	.LBI489:
 520:../../../os/hal/osal/rt/osal.h **** 
 2740               		.loc 2 520 20 view .LVU750
 2741               	.LBE489:
 522:../../../os/hal/osal/rt/osal.h **** }
 2742               		.loc 2 522 3 view .LVU751
 2743               	.LBB494:
 2744               	.LBB490:
 2745               	.LBI490:
 365:../../../os/rt/include/chsys.h **** 
 2746               		.loc 5 365 20 view .LVU752
 2747               	.LBB491:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2748               		.loc 5 367 22 view .LVU753
 368:../../../os/rt/include/chsys.h **** 
 2749               		.loc 5 368 33 view .LVU754
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2750               		.loc 5 374 3 view .LVU755
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2751               		.loc 5 374 3 view .LVU756
 2752               		.loc 5 378 3 view .LVU757
 2753               	.LBB492:
 2754               	.LBI492:
 445:../../../os/common/ports/AVR/chcore.h **** 
 2755               		.loc 6 445 20 view .LVU758
 2756               	.LBB493:
 2757               		.loc 6 447 3 view .LVU759
 2758               	/* #APP */
 2759               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 2760 008e 7894      		sei
 2761               	 ;  0 "" 2
 2762               	/* #NOAPP */
 2763               	.LBE493:
 2764               	.LBE492:
 2765               	.LBE491:
 2766               	.LBE490:
 2767               	.LBE494:
 702:../../../os/hal/src/hal_buffers.c ****     }
 2768               		.loc 1 702 7 view .LVU760
 702:../../../os/hal/src/hal_buffers.c ****     }
 2769               		.loc 1 702 14 is_stmt 0 view .LVU761
 2770 0090 00C0      		rjmp .L88
 2771               		.cfi_endproc
 2772               	.LFE191:
 2774               		.section	.text.obqWriteTimeout,"ax",@progbits
 2775               	.global	obqWriteTimeout
 2777               	obqWriteTimeout:
 2778               	.LVL132:
 2779               	.LFB192:
 719:../../../os/hal/src/hal_buffers.c **** 
 720:../../../os/hal/src/hal_buffers.c **** /**
 721:../../../os/hal/src/hal_buffers.c ****  * @brief   Output queue write with timeout.
 722:../../../os/hal/src/hal_buffers.c ****  * @details The function writes data from a buffer to an output queue. The
 723:../../../os/hal/src/hal_buffers.c ****  *          operation completes when the specified amount of data has been
 724:../../../os/hal/src/hal_buffers.c ****  *          transferred or after the specified timeout or if the queue has
 725:../../../os/hal/src/hal_buffers.c ****  *          been reset.
 726:../../../os/hal/src/hal_buffers.c ****  *
 727:../../../os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 728:../../../os/hal/src/hal_buffers.c ****  * @param[in] bp        pointer to the data buffer
 729:../../../os/hal/src/hal_buffers.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 730:../../../os/hal/src/hal_buffers.c ****  *                      value 0 is reserved
 731:../../../os/hal/src/hal_buffers.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 732:../../../os/hal/src/hal_buffers.c ****  *                      the following special values are allowed:
 733:../../../os/hal/src/hal_buffers.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 734:../../../os/hal/src/hal_buffers.c ****  *                      - @a TIME_INFINITE no timeout.
 735:../../../os/hal/src/hal_buffers.c ****  *                      .
 736:../../../os/hal/src/hal_buffers.c ****  * @return              The number of bytes effectively transferred.
 737:../../../os/hal/src/hal_buffers.c ****  * @retval 0            if a timeout occurred.
 738:../../../os/hal/src/hal_buffers.c ****  *
 739:../../../os/hal/src/hal_buffers.c ****  * @api
 740:../../../os/hal/src/hal_buffers.c ****  */
 741:../../../os/hal/src/hal_buffers.c **** size_t obqWriteTimeout(output_buffers_queue_t *obqp, const uint8_t *bp,
 742:../../../os/hal/src/hal_buffers.c ****                        size_t n, sysinterval_t timeout) {
 2780               		.loc 1 742 57 is_stmt 1 view -0
 2781               		.cfi_startproc
 2782               		.loc 1 742 57 is_stmt 0 view .LVU763
 2783 0000 4F92      		push r4
 2784               	.LCFI43:
 2785               		.cfi_def_cfa_offset 3
 2786               		.cfi_offset 4, -2
 2787 0002 5F92      		push r5
 2788               	.LCFI44:
 2789               		.cfi_def_cfa_offset 4
 2790               		.cfi_offset 5, -3
 2791 0004 6F92      		push r6
 2792               	.LCFI45:
 2793               		.cfi_def_cfa_offset 5
 2794               		.cfi_offset 6, -4
 2795 0006 7F92      		push r7
 2796               	.LCFI46:
 2797               		.cfi_def_cfa_offset 6
 2798               		.cfi_offset 7, -5
 2799 0008 8F92      		push r8
 2800               	.LCFI47:
 2801               		.cfi_def_cfa_offset 7
 2802               		.cfi_offset 8, -6
 2803 000a 9F92      		push r9
 2804               	.LCFI48:
 2805               		.cfi_def_cfa_offset 8
 2806               		.cfi_offset 9, -7
 2807 000c AF92      		push r10
 2808               	.LCFI49:
 2809               		.cfi_def_cfa_offset 9
 2810               		.cfi_offset 10, -8
 2811 000e BF92      		push r11
 2812               	.LCFI50:
 2813               		.cfi_def_cfa_offset 10
 2814               		.cfi_offset 11, -9
 2815 0010 CF92      		push r12
 2816               	.LCFI51:
 2817               		.cfi_def_cfa_offset 11
 2818               		.cfi_offset 12, -10
 2819 0012 DF92      		push r13
 2820               	.LCFI52:
 2821               		.cfi_def_cfa_offset 12
 2822               		.cfi_offset 13, -11
 2823 0014 EF92      		push r14
 2824               	.LCFI53:
 2825               		.cfi_def_cfa_offset 13
 2826               		.cfi_offset 14, -12
 2827 0016 FF92      		push r15
 2828               	.LCFI54:
 2829               		.cfi_def_cfa_offset 14
 2830               		.cfi_offset 15, -13
 2831 0018 0F93      		push r16
 2832               	.LCFI55:
 2833               		.cfi_def_cfa_offset 15
 2834               		.cfi_offset 16, -14
 2835 001a 1F93      		push r17
 2836               	.LCFI56:
 2837               		.cfi_def_cfa_offset 16
 2838               		.cfi_offset 17, -15
 2839 001c CF93      		push r28
 2840               	.LCFI57:
 2841               		.cfi_def_cfa_offset 17
 2842               		.cfi_offset 28, -16
 2843 001e DF93      		push r29
 2844               	.LCFI58:
 2845               		.cfi_def_cfa_offset 18
 2846               		.cfi_offset 29, -17
 2847               	/* prologue: function */
 2848               	/* frame size = 0 */
 2849               	/* stack size = 16 */
 2850               	.L__stack_usage = 16
 2851 0020 EC01      		movw r28,r24
 2852 0022 6B01      		movw r12,r22
 2853 0024 5A01      		movw r10,r20
 2854 0026 4901      		movw r8,r18
 743:../../../os/hal/src/hal_buffers.c ****   size_t w = 0;
 2855               		.loc 1 743 3 is_stmt 1 view .LVU764
 2856               	.LVL133:
 744:../../../os/hal/src/hal_buffers.c ****   systime_t deadline;
 2857               		.loc 1 744 3 view .LVU765
 745:../../../os/hal/src/hal_buffers.c **** 
 746:../../../os/hal/src/hal_buffers.c ****   osalDbgCheck(n > 0U);
 2858               		.loc 1 746 3 view .LVU766
 2859               		.loc 1 746 3 view .LVU767
 747:../../../os/hal/src/hal_buffers.c **** 
 748:../../../os/hal/src/hal_buffers.c ****   osalSysLock();
 2860               		.loc 1 748 3 view .LVU768
 2861               	.LBB495:
 2862               	.LBI495:
 509:../../../os/hal/osal/rt/osal.h **** 
 2863               		.loc 2 509 20 view .LVU769
 2864               	.LBE495:
 511:../../../os/hal/osal/rt/osal.h **** }
 2865               		.loc 2 511 3 view .LVU770
 2866               	.LBB500:
 2867               	.LBB496:
 2868               	.LBI496:
 353:../../../os/rt/include/chsys.h **** 
 2869               		.loc 5 353 20 view .LVU771
 2870               	.LBE496:
 2871               	.LBE500:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2872               		.loc 5 355 3 view .LVU772
 2873               	.LBB501:
 2874               	.LBB499:
 2875               	.LBB497:
 2876               	.LBI497:
 435:../../../os/common/ports/AVR/chcore.h **** 
 2877               		.loc 6 435 20 view .LVU773
 2878               	.LBB498:
 437:../../../os/common/ports/AVR/chcore.h **** }
 2879               		.loc 6 437 3 view .LVU774
 2880               	/* #APP */
 2881               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 2882 0028 F894      		cli
 2883               	 ;  0 "" 2
 2884               	/* #NOAPP */
 2885               	.LBE498:
 2886               	.LBE497:
 2887               	.LBE499:
 2888               	.LBE501:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 2889               		.loc 5 356 34 view .LVU775
 357:../../../os/rt/include/chsys.h **** }
 2890               		.loc 5 357 20 view .LVU776
 749:../../../os/hal/src/hal_buffers.c **** 
 750:../../../os/hal/src/hal_buffers.c ****   /* Time window for the whole operation.*/
 751:../../../os/hal/src/hal_buffers.c ****   deadline = osalTimeAddX(osalOsGetSystemTimeX(), timeout);
 2891               		.loc 1 751 3 view .LVU777
 2892               	.LBB502:
 2893               	.LBI502:
 634:../../../os/hal/osal/rt/osal.h **** 
 2894               		.loc 2 634 25 view .LVU778
 2895               	.LBE502:
 636:../../../os/hal/osal/rt/osal.h **** }
 2896               		.loc 2 636 3 view .LVU779
 2897               	.LBB510:
 2898               	.LBB503:
 2899               	.LBI503:
 115:../../../os/rt/include/chvt.h **** 
 2900               		.loc 7 115 25 view .LVU780
 2901               	.LBE503:
 2902               	.LBE510:
 2903               		.loc 7 120 3 view .LVU781
 2904               	.LBB511:
 2905               	.LBB508:
 2906               	.LBB504:
 2907               	.LBI504:
 105:../../../os/common/ports/AVR/chcore_timer.h **** 
 2908               		.loc 8 105 25 view .LVU782
 2909               	.LBE504:
 2910               	.LBE508:
 2911               	.LBE511:
 2912               		.loc 8 107 3 view .LVU783
 2913               	.LBB512:
 2914               	.LBB509:
 2915               	.LBB507:
 2916               	.LBB505:
 2917               	.LBI505:
  87:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
 2918               		.loc 9 87 25 view .LVU784
 2919               	.LBB506:
 2920               		.loc 9 89 3 view .LVU785
 2921               		.loc 9 89 10 is_stmt 0 view .LVU786
 2922 002a 4090 8400 		lds r4,132
 2923 002e 5090 8500 		lds r5,132+1
 2924               	.LVL134:
 2925               		.loc 9 89 10 view .LVU787
 2926               	.LBE506:
 2927               	.LBE505:
 2928               	.LBE507:
 2929               	.LBE509:
 2930               	.LBE512:
 2931               	.LBB513:
 2932               	.LBI513:
 648:../../../os/hal/osal/rt/osal.h ****                                      sysinterval_t interval) {
 2933               		.loc 2 648 25 is_stmt 1 view .LVU788
 2934               	.LBE513:
 651:../../../os/hal/osal/rt/osal.h **** }
 2935               		.loc 2 651 3 view .LVU789
 2936               	.LBB516:
 2937               	.LBB514:
 2938               	.LBI514:
 472:../../../os/rt/include/chtime.h ****                                    sysinterval_t interval) {
 2939               		.loc 10 472 25 view .LVU790
 2940               	.LBB515:
 479:../../../os/rt/include/chtime.h **** }
 2941               		.loc 10 479 3 view .LVU791
 479:../../../os/rt/include/chtime.h **** }
 2942               		.loc 10 479 18 is_stmt 0 view .LVU792
 2943 0032 420E      		add r4,r18
 2944 0034 531E      		adc r5,r19
 2945               	.LVL135:
 479:../../../os/rt/include/chtime.h **** }
 2946               		.loc 10 479 18 view .LVU793
 2947               	.LBE515:
 2948               	.LBE514:
 2949               	.LBE516:
 743:../../../os/hal/src/hal_buffers.c ****   systime_t deadline;
 2950               		.loc 1 743 10 view .LVU794
 2951 0036 F12C      		mov r15,__zero_reg__
 2952 0038 E12C      		mov r14,__zero_reg__
 2953               	.LBB517:
 2954               	.LBB518:
 752:../../../os/hal/src/hal_buffers.c **** 
 753:../../../os/hal/src/hal_buffers.c ****   while (true) {
 754:../../../os/hal/src/hal_buffers.c ****     size_t size;
 755:../../../os/hal/src/hal_buffers.c **** 
 756:../../../os/hal/src/hal_buffers.c ****     /* This condition indicates that a new buffer must be acquired.*/
 757:../../../os/hal/src/hal_buffers.c ****     if (obqp->ptr == NULL) {
 758:../../../os/hal/src/hal_buffers.c ****       msg_t msg;
 759:../../../os/hal/src/hal_buffers.c **** 
 760:../../../os/hal/src/hal_buffers.c ****       /* TIME_INFINITE and TIME_IMMEDIATE are handled differently, no
 761:../../../os/hal/src/hal_buffers.c ****          deadline.*/
 762:../../../os/hal/src/hal_buffers.c ****       if ((timeout == TIME_INFINITE) || (timeout == TIME_IMMEDIATE)) {
 2955               		.loc 1 762 38 view .LVU795
 2956 003a 3901      		movw r6,r18
 2957 003c 21E0      		ldi r18,1
 2958 003e 621A      		sub r6,r18
 2959 0040 7108      		sbc r7,__zero_reg__
 2960               	.LVL136:
 2961               		.loc 1 762 38 view .LVU796
 2962 0042 00C0      		rjmp .L114
 2963               	.LVL137:
 2964               	.L119:
 2965               		.loc 1 762 38 view .LVU797
 2966               	.LBE518:
 763:../../../os/hal/src/hal_buffers.c ****         msg = obqGetEmptyBufferTimeoutS(obqp, timeout);
 764:../../../os/hal/src/hal_buffers.c ****       }
 765:../../../os/hal/src/hal_buffers.c ****       else {
 766:../../../os/hal/src/hal_buffers.c ****         sysinterval_t next_timeout = osalTimeDiffX(osalOsGetSystemTimeX(),
 767:../../../os/hal/src/hal_buffers.c ****                                                    deadline);
 768:../../../os/hal/src/hal_buffers.c **** 
 769:../../../os/hal/src/hal_buffers.c ****         /* Handling the case where the system time went past the deadline,
 770:../../../os/hal/src/hal_buffers.c ****            in this case next becomes a very high number because the system
 771:../../../os/hal/src/hal_buffers.c ****            time is an unsigned type.*/
 772:../../../os/hal/src/hal_buffers.c ****         if (next_timeout > timeout) {
 773:../../../os/hal/src/hal_buffers.c ****           osalSysUnlock();
 774:../../../os/hal/src/hal_buffers.c ****           return w;
 775:../../../os/hal/src/hal_buffers.c ****         }
 776:../../../os/hal/src/hal_buffers.c ****         msg = obqGetEmptyBufferTimeoutS(obqp, next_timeout);
 777:../../../os/hal/src/hal_buffers.c ****       }
 778:../../../os/hal/src/hal_buffers.c **** 
 779:../../../os/hal/src/hal_buffers.c ****       /* Anything except MSG_OK interrupts the operation.*/
 780:../../../os/hal/src/hal_buffers.c ****       if (msg != MSG_OK) {
 781:../../../os/hal/src/hal_buffers.c ****         osalSysUnlock();
 782:../../../os/hal/src/hal_buffers.c ****         return w;
 783:../../../os/hal/src/hal_buffers.c ****       }
 784:../../../os/hal/src/hal_buffers.c ****     }
 785:../../../os/hal/src/hal_buffers.c **** 
 786:../../../os/hal/src/hal_buffers.c ****     /* Size of the space available in the current buffer.*/
 787:../../../os/hal/src/hal_buffers.c ****     size = (size_t)obqp->top - (size_t)obqp->ptr;
 788:../../../os/hal/src/hal_buffers.c ****     if (size > (n - w)) {
 789:../../../os/hal/src/hal_buffers.c ****       size = n - w;
 790:../../../os/hal/src/hal_buffers.c ****     }
 791:../../../os/hal/src/hal_buffers.c **** 
 792:../../../os/hal/src/hal_buffers.c ****     /* Smaller chunks in order to not make the critical zone too long,
 793:../../../os/hal/src/hal_buffers.c ****        this impacts throughput however.*/
 794:../../../os/hal/src/hal_buffers.c ****     if (size > 64U) {
 795:../../../os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 796:../../../os/hal/src/hal_buffers.c ****       memcpy(obqp->ptr, bp, 64U);
 2967               		.loc 1 796 7 is_stmt 1 view .LVU798
 2968 0044 20E4      		ldi r18,lo8(64)
 2969 0046 F601      		movw r30,r12
 2970 0048 DC01      		movw r26,r24
 2971               		0:
 2972 004a 0190      		ld r0,Z+
 2973 004c 0D92      		st X+,r0
 2974 004e 2A95      		dec r18
 2975 0050 01F4      		brne 0b
 797:../../../os/hal/src/hal_buffers.c ****       bp        += 64U;
 2976               		.loc 1 797 7 view .LVU799
 2977               		.loc 1 797 17 is_stmt 0 view .LVU800
 2978 0052 20E4      		ldi r18,64
 2979 0054 C20E      		add r12,r18
 2980 0056 D11C      		adc r13,__zero_reg__
 2981               	.LVL138:
 798:../../../os/hal/src/hal_buffers.c ****       obqp->ptr += 64U;
 2982               		.loc 1 798 7 is_stmt 1 view .LVU801
 2983               		.loc 1 798 17 is_stmt 0 view .LVU802
 2984 0058 8B89      		ldd r24,Y+19
 2985 005a 9C89      		ldd r25,Y+20
 2986 005c 805C      		subi r24,-64
 2987 005e 9F4F      		sbci r25,-1
 2988 0060 9C8B      		std Y+20,r25
 2989 0062 8B8B      		std Y+19,r24
 799:../../../os/hal/src/hal_buffers.c ****       w         += 64U;
 2990               		.loc 1 799 7 is_stmt 1 view .LVU803
 2991               		.loc 1 799 17 is_stmt 0 view .LVU804
 2992 0064 20E4      		ldi r18,64
 2993 0066 E20E      		add r14,r18
 2994 0068 F11C      		adc r15,__zero_reg__
 2995               	.LVL139:
 2996               	.L109:
 800:../../../os/hal/src/hal_buffers.c ****     }
 801:../../../os/hal/src/hal_buffers.c ****     else {
 802:../../../os/hal/src/hal_buffers.c ****       memcpy(obqp->ptr, bp, size);
 803:../../../os/hal/src/hal_buffers.c ****       bp        += size;
 804:../../../os/hal/src/hal_buffers.c ****       obqp->ptr += size;
 805:../../../os/hal/src/hal_buffers.c ****       w         += size;
 806:../../../os/hal/src/hal_buffers.c ****     }
 807:../../../os/hal/src/hal_buffers.c **** 
 808:../../../os/hal/src/hal_buffers.c ****     /* Has the current data buffer been finished? if so then release it.*/
 809:../../../os/hal/src/hal_buffers.c ****     if (obqp->ptr >= obqp->top) {
 2997               		.loc 1 809 5 is_stmt 1 view .LVU805
 2998               		.loc 1 809 8 is_stmt 0 view .LVU806
 2999 006a 2D89      		ldd r18,Y+21
 3000 006c 3E89      		ldd r19,Y+22
 3001 006e 8217      		cp r24,r18
 3002 0070 9307      		cpc r25,r19
 3003 0072 00F0      		brlo .L111
 810:../../../os/hal/src/hal_buffers.c ****       obqPostFullBufferS(obqp, obqp->bsize - sizeof (size_t));
 3004               		.loc 1 810 7 is_stmt 1 view .LVU807
 3005               	.LVL140:
 3006               	.LBB545:
 3007               	.LBI545:
 646:../../../os/hal/src/hal_buffers.c **** 
 3008               		.loc 1 646 6 view .LVU808
 3009               	.LBB546:
 648:../../../os/hal/src/hal_buffers.c ****   osalDbgCheck((size > 0U) && (size <= (obqp->bsize - sizeof (size_t))));
 3010               		.loc 1 648 23 view .LVU809
 649:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsFullI(obqp), "buffers queue full");
 3011               		.loc 1 649 3 view .LVU810
 649:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsFullI(obqp), "buffers queue full");
 3012               		.loc 1 649 3 view .LVU811
 650:../../../os/hal/src/hal_buffers.c **** 
 3013               		.loc 1 650 3 view .LVU812
 650:../../../os/hal/src/hal_buffers.c **** 
 3014               		.loc 1 650 3 view .LVU813
 653:../../../os/hal/src/hal_buffers.c **** 
 3015               		.loc 1 653 3 view .LVU814
 653:../../../os/hal/src/hal_buffers.c **** 
 3016               		.loc 1 653 19 is_stmt 0 view .LVU815
 3017 0074 EF81      		ldd r30,Y+7
 3018 0076 F885      		ldd r31,Y+8
 3019               	.LBE546:
 3020               	.LBE545:
 3021               		.loc 1 810 7 view .LVU816
 3022 0078 8D85      		ldd r24,Y+13
 3023 007a 9E85      		ldd r25,Y+14
 3024 007c 0297      		sbiw r24,2
 3025               	.LVL141:
 3026               	.LBB548:
 3027               	.LBB547:
 653:../../../os/hal/src/hal_buffers.c **** 
 3028               		.loc 1 653 29 view .LVU817
 3029 007e 9183      		std Z+1,r25
 3030 0080 8083      		st Z,r24
 656:../../../os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 3031               		.loc 1 656 3 is_stmt 1 view .LVU818
 656:../../../os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 3032               		.loc 1 656 7 is_stmt 0 view .LVU819
 3033 0082 8D81      		ldd r24,Y+5
 3034 0084 9E81      		ldd r25,Y+6
 3035               	.LVL142:
 656:../../../os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 3036               		.loc 1 656 17 view .LVU820
 3037 0086 0197      		sbiw r24,1
 3038 0088 9E83      		std Y+6,r25
 3039 008a 8D83      		std Y+5,r24
 3040               	.LVL143:
 657:../../../os/hal/src/hal_buffers.c ****   if (obqp->bwrptr >= obqp->btop) {
 3041               		.loc 1 657 3 is_stmt 1 view .LVU821
 657:../../../os/hal/src/hal_buffers.c ****   if (obqp->bwrptr >= obqp->btop) {
 3042               		.loc 1 657 16 is_stmt 0 view .LVU822
 3043 008c 8D85      		ldd r24,Y+13
 3044 008e 9E85      		ldd r25,Y+14
 3045 0090 8E0F      		add r24,r30
 3046 0092 9F1F      		adc r25,r31
 3047 0094 9887      		std Y+8,r25
 3048 0096 8F83      		std Y+7,r24
 658:../../../os/hal/src/hal_buffers.c ****     obqp->bwrptr = obqp->buffers;
 3049               		.loc 1 658 3 is_stmt 1 view .LVU823
 658:../../../os/hal/src/hal_buffers.c ****     obqp->bwrptr = obqp->buffers;
 3050               		.loc 1 658 6 is_stmt 0 view .LVU824
 3051 0098 2B85      		ldd r18,Y+11
 3052 009a 3C85      		ldd r19,Y+12
 3053 009c 8217      		cp r24,r18
 3054 009e 9307      		cpc r25,r19
 3055 00a0 00F0      		brlo .L112
 659:../../../os/hal/src/hal_buffers.c ****   }
 3056               		.loc 1 659 5 is_stmt 1 view .LVU825
 659:../../../os/hal/src/hal_buffers.c ****   }
 3057               		.loc 1 659 18 is_stmt 0 view .LVU826
 3058 00a2 8989      		ldd r24,Y+17
 3059 00a4 9A89      		ldd r25,Y+18
 3060 00a6 9887      		std Y+8,r25
 3061 00a8 8F83      		std Y+7,r24
 3062               	.L112:
 663:../../../os/hal/src/hal_buffers.c **** 
 3063               		.loc 1 663 3 is_stmt 1 view .LVU827
 663:../../../os/hal/src/hal_buffers.c **** 
 3064               		.loc 1 663 13 is_stmt 0 view .LVU828
 3065 00aa 1C8A      		std Y+20,__zero_reg__
 3066 00ac 1B8A      		std Y+19,__zero_reg__
 666:../../../os/hal/src/hal_buffers.c ****     obqp->notify(obqp);
 3067               		.loc 1 666 3 is_stmt 1 view .LVU829
 666:../../../os/hal/src/hal_buffers.c ****     obqp->notify(obqp);
 3068               		.loc 1 666 11 is_stmt 0 view .LVU830
 3069 00ae EF89      		ldd r30,Y+23
 3070 00b0 F88D      		ldd r31,Y+24
 666:../../../os/hal/src/hal_buffers.c ****     obqp->notify(obqp);
 3071               		.loc 1 666 6 view .LVU831
 3072 00b2 3097      		sbiw r30,0
 3073 00b4 01F0      		breq .L111
 667:../../../os/hal/src/hal_buffers.c ****   }
 3074               		.loc 1 667 5 is_stmt 1 view .LVU832
 3075 00b6 CE01      		movw r24,r28
 3076 00b8 0995      		icall
 3077               	.LVL144:
 3078               	.L111:
 667:../../../os/hal/src/hal_buffers.c ****   }
 3079               		.loc 1 667 5 is_stmt 0 view .LVU833
 3080               	.LBE547:
 3081               	.LBE548:
 811:../../../os/hal/src/hal_buffers.c ****     }
 812:../../../os/hal/src/hal_buffers.c **** 
 813:../../../os/hal/src/hal_buffers.c ****     /* Giving a preemption chance.*/
 814:../../../os/hal/src/hal_buffers.c ****     osalSysUnlock();
 3082               		.loc 1 814 5 is_stmt 1 view .LVU834
 3083               	.LBB549:
 3084               	.LBI549:
 520:../../../os/hal/osal/rt/osal.h **** 
 3085               		.loc 2 520 20 view .LVU835
 3086               	.LBE549:
 3087               	.LBE517:
 522:../../../os/hal/osal/rt/osal.h **** }
 3088               		.loc 2 522 3 view .LVU836
 3089               	.LBB568:
 3090               	.LBB554:
 3091               	.LBB550:
 3092               	.LBI550:
 365:../../../os/rt/include/chsys.h **** 
 3093               		.loc 5 365 20 view .LVU837
 3094               	.LBB551:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 3095               		.loc 5 367 22 view .LVU838
 368:../../../os/rt/include/chsys.h **** 
 3096               		.loc 5 368 33 view .LVU839
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 3097               		.loc 5 374 3 view .LVU840
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 3098               		.loc 5 374 3 view .LVU841
 3099               		.loc 5 378 3 view .LVU842
 3100               	.LBB552:
 3101               	.LBI552:
 445:../../../os/common/ports/AVR/chcore.h **** 
 3102               		.loc 6 445 20 view .LVU843
 3103               	.LBB553:
 3104               		.loc 6 447 3 view .LVU844
 3105               	/* #APP */
 3106               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 3107 00ba 7894      		sei
 3108               	 ;  0 "" 2
 3109               	/* #NOAPP */
 3110               	.LBE553:
 3111               	.LBE552:
 3112               	.LBE551:
 3113               	.LBE550:
 3114               	.LBE554:
 815:../../../os/hal/src/hal_buffers.c ****     if (w >= n) {
 3115               		.loc 1 815 5 view .LVU845
 3116               		.loc 1 815 8 is_stmt 0 view .LVU846
 3117 00bc EA14      		cp r14,r10
 3118 00be FB04      		cpc r15,r11
 3119 00c0 00F0      		brlo .+2
 3120 00c2 00C0      		rjmp .L100
 816:../../../os/hal/src/hal_buffers.c ****       return w;
 817:../../../os/hal/src/hal_buffers.c ****     }
 818:../../../os/hal/src/hal_buffers.c ****     osalSysLock();
 3121               		.loc 1 818 5 is_stmt 1 view .LVU847
 3122               	.LBB555:
 3123               	.LBI555:
 509:../../../os/hal/osal/rt/osal.h **** 
 3124               		.loc 2 509 20 view .LVU848
 3125               	.LBE555:
 3126               	.LBE568:
 511:../../../os/hal/osal/rt/osal.h **** }
 3127               		.loc 2 511 3 view .LVU849
 3128               	.LBB569:
 3129               	.LBB560:
 3130               	.LBB556:
 3131               	.LBI556:
 353:../../../os/rt/include/chsys.h **** 
 3132               		.loc 5 353 20 view .LVU850
 3133               	.LBE556:
 3134               	.LBE560:
 3135               	.LBE569:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 3136               		.loc 5 355 3 view .LVU851
 3137               	.LBB570:
 3138               	.LBB561:
 3139               	.LBB559:
 3140               	.LBB557:
 3141               	.LBI557:
 435:../../../os/common/ports/AVR/chcore.h **** 
 3142               		.loc 6 435 20 view .LVU852
 3143               	.LBB558:
 437:../../../os/common/ports/AVR/chcore.h **** }
 3144               		.loc 6 437 3 view .LVU853
 3145               	/* #APP */
 3146               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 3147 00c4 F894      		cli
 3148               	 ;  0 "" 2
 3149               	/* #NOAPP */
 3150               	.LBE558:
 3151               	.LBE557:
 3152               	.LBE559:
 3153               	.LBE561:
 3154               	.LBE570:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 3155               		.loc 5 356 34 view .LVU854
 357:../../../os/rt/include/chsys.h **** }
 3156               		.loc 5 357 20 view .LVU855
 3157               	.LVL145:
 3158               	.L114:
 753:../../../os/hal/src/hal_buffers.c ****     size_t size;
 3159               		.loc 1 753 3 view .LVU856
 3160               	.LBB571:
 754:../../../os/hal/src/hal_buffers.c **** 
 3161               		.loc 1 754 5 view .LVU857
 757:../../../os/hal/src/hal_buffers.c ****       msg_t msg;
 3162               		.loc 1 757 5 view .LVU858
 757:../../../os/hal/src/hal_buffers.c ****       msg_t msg;
 3163               		.loc 1 757 13 is_stmt 0 view .LVU859
 3164 00c6 8B89      		ldd r24,Y+19
 3165 00c8 9C89      		ldd r25,Y+20
 757:../../../os/hal/src/hal_buffers.c ****       msg_t msg;
 3166               		.loc 1 757 8 view .LVU860
 3167 00ca 0097      		sbiw r24,0
 3168 00cc 01F0      		breq .L118
 3169               	.L101:
 787:../../../os/hal/src/hal_buffers.c ****     if (size > (n - w)) {
 3170               		.loc 1 787 5 is_stmt 1 view .LVU861
 787:../../../os/hal/src/hal_buffers.c ****     if (size > (n - w)) {
 3171               		.loc 1 787 10 is_stmt 0 view .LVU862
 3172 00ce 2D89      		ldd r18,Y+21
 3173 00d0 3E89      		ldd r19,Y+22
 3174 00d2 281B      		sub r18,r24
 3175 00d4 390B      		sbc r19,r25
 3176               	.LVL146:
 788:../../../os/hal/src/hal_buffers.c ****       size = n - w;
 3177               		.loc 1 788 5 is_stmt 1 view .LVU863
 3178 00d6 8501      		movw r16,r10
 3179 00d8 0E19      		sub r16,r14
 3180 00da 1F09      		sbc r17,r15
 3181 00dc 2017      		cp r18,r16
 3182 00de 3107      		cpc r19,r17
 3183 00e0 00F4      		brsh .L107
 3184 00e2 8901      		movw r16,r18
 3185               	.L107:
 3186               	.LVL147:
 794:../../../os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 3187               		.loc 1 794 5 view .LVU864
 794:../../../os/hal/src/hal_buffers.c ****       /* Giving the compiler a chance to optimize for a fixed size move.*/
 3188               		.loc 1 794 8 is_stmt 0 view .LVU865
 3189 00e4 0134      		cpi r16,65
 3190 00e6 1105      		cpc r17,__zero_reg__
 3191 00e8 00F0      		brlo .+2
 3192 00ea 00C0      		rjmp .L119
 802:../../../os/hal/src/hal_buffers.c ****       bp        += size;
 3193               		.loc 1 802 7 is_stmt 1 view .LVU866
 3194 00ec A801      		movw r20,r16
 3195 00ee B601      		movw r22,r12
 3196 00f0 0E94 0000 		call memcpy
 3197               	.LVL148:
 803:../../../os/hal/src/hal_buffers.c ****       obqp->ptr += size;
 3198               		.loc 1 803 7 view .LVU867
 803:../../../os/hal/src/hal_buffers.c ****       obqp->ptr += size;
 3199               		.loc 1 803 17 is_stmt 0 view .LVU868
 3200 00f4 C00E      		add r12,r16
 3201 00f6 D11E      		adc r13,r17
 3202               	.LVL149:
 804:../../../os/hal/src/hal_buffers.c ****       w         += size;
 3203               		.loc 1 804 7 is_stmt 1 view .LVU869
 804:../../../os/hal/src/hal_buffers.c ****       w         += size;
 3204               		.loc 1 804 17 is_stmt 0 view .LVU870
 3205 00f8 8B89      		ldd r24,Y+19
 3206 00fa 9C89      		ldd r25,Y+20
 3207 00fc 800F      		add r24,r16
 3208 00fe 911F      		adc r25,r17
 3209 0100 9C8B      		std Y+20,r25
 3210 0102 8B8B      		std Y+19,r24
 805:../../../os/hal/src/hal_buffers.c ****     }
 3211               		.loc 1 805 7 is_stmt 1 view .LVU871
 805:../../../os/hal/src/hal_buffers.c ****     }
 3212               		.loc 1 805 17 is_stmt 0 view .LVU872
 3213 0104 E00E      		add r14,r16
 3214 0106 F11E      		adc r15,r17
 3215               	.LVL150:
 805:../../../os/hal/src/hal_buffers.c ****     }
 3216               		.loc 1 805 17 view .LVU873
 3217 0108 00C0      		rjmp .L109
 3218               	.LVL151:
 3219               	.L118:
 3220               	.LBB562:
 758:../../../os/hal/src/hal_buffers.c **** 
 3221               		.loc 1 758 7 is_stmt 1 view .LVU874
 762:../../../os/hal/src/hal_buffers.c ****         msg = obqGetEmptyBufferTimeoutS(obqp, timeout);
 3222               		.loc 1 762 7 view .LVU875
 762:../../../os/hal/src/hal_buffers.c ****         msg = obqGetEmptyBufferTimeoutS(obqp, timeout);
 3223               		.loc 1 762 10 is_stmt 0 view .LVU876
 3224 010a 8EEF      		ldi r24,-2
 3225 010c 6816      		cp r6,r24
 3226 010e 8FEF      		ldi r24,-1
 3227 0110 7806      		cpc r7,r24
 3228 0112 00F4      		brsh .L120
 3229               	.LBB519:
 766:../../../os/hal/src/hal_buffers.c ****                                                    deadline);
 3230               		.loc 1 766 9 is_stmt 1 view .LVU877
 3231               	.LBB520:
 3232               	.LBI520:
 634:../../../os/hal/osal/rt/osal.h **** 
 3233               		.loc 2 634 25 view .LVU878
 3234               	.LBE520:
 3235               	.LBE519:
 3236               	.LBE562:
 3237               	.LBE571:
 636:../../../os/hal/osal/rt/osal.h **** }
 3238               		.loc 2 636 3 view .LVU879
 3239               	.LBB572:
 3240               	.LBB563:
 3241               	.LBB535:
 3242               	.LBB528:
 3243               	.LBB521:
 3244               	.LBI521:
 115:../../../os/rt/include/chvt.h **** 
 3245               		.loc 7 115 25 view .LVU880
 3246               	.LBE521:
 3247               	.LBE528:
 3248               	.LBE535:
 3249               	.LBE563:
 3250               	.LBE572:
 3251               		.loc 7 120 3 view .LVU881
 3252               	.LBB573:
 3253               	.LBB564:
 3254               	.LBB536:
 3255               	.LBB529:
 3256               	.LBB526:
 3257               	.LBB522:
 3258               	.LBI522:
 105:../../../os/common/ports/AVR/chcore_timer.h **** 
 3259               		.loc 8 105 25 view .LVU882
 3260               	.LBE522:
 3261               	.LBE526:
 3262               	.LBE529:
 3263               	.LBE536:
 3264               	.LBE564:
 3265               	.LBE573:
 3266               		.loc 8 107 3 view .LVU883
 3267               	.LBB574:
 3268               	.LBB565:
 3269               	.LBB537:
 3270               	.LBB530:
 3271               	.LBB527:
 3272               	.LBB525:
 3273               	.LBB523:
 3274               	.LBI523:
  87:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_st_lld.h **** 
 3275               		.loc 9 87 25 view .LVU884
 3276               	.LBB524:
 3277               		.loc 9 89 3 view .LVU885
 3278               		.loc 9 89 10 is_stmt 0 view .LVU886
 3279 0114 8091 8400 		lds r24,132
 3280 0118 9091 8500 		lds r25,132+1
 3281               	.LVL152:
 3282               		.loc 9 89 10 view .LVU887
 3283               	.LBE524:
 3284               	.LBE523:
 3285               	.LBE525:
 3286               	.LBE527:
 3287               	.LBE530:
 3288               	.LBB531:
 3289               	.LBI531:
 663:../../../os/hal/osal/rt/osal.h **** 
 3290               		.loc 2 663 29 is_stmt 1 view .LVU888
 3291               	.LBE531:
 3292               	.LBE537:
 3293               	.LBE565:
 3294               	.LBE574:
 665:../../../os/hal/osal/rt/osal.h **** }
 3295               		.loc 2 665 3 view .LVU889
 3296               	.LBB575:
 3297               	.LBB566:
 3298               	.LBB538:
 3299               	.LBB534:
 3300               	.LBB532:
 3301               	.LBI532:
 491:../../../os/rt/include/chtime.h **** 
 3302               		.loc 10 491 29 view .LVU890
 3303               	.LBB533:
 3304               		.loc 10 495 3 view .LVU891
 3305               		.loc 10 495 10 is_stmt 0 view .LVU892
 3306 011c B201      		movw r22,r4
 3307 011e 681B      		sub r22,r24
 3308 0120 790B      		sbc r23,r25
 3309               	.LVL153:
 3310               		.loc 10 495 10 view .LVU893
 3311               	.LBE533:
 3312               	.LBE532:
 3313               	.LBE534:
 772:../../../os/hal/src/hal_buffers.c ****           osalSysUnlock();
 3314               		.loc 1 772 9 is_stmt 1 view .LVU894
 772:../../../os/hal/src/hal_buffers.c ****           osalSysUnlock();
 3315               		.loc 1 772 12 is_stmt 0 view .LVU895
 3316 0122 8616      		cp r8,r22
 3317 0124 9706      		cpc r9,r23
 3318 0126 00F0      		brlo .L106
 776:../../../os/hal/src/hal_buffers.c ****       }
 3319               		.loc 1 776 9 is_stmt 1 view .LVU896
 776:../../../os/hal/src/hal_buffers.c ****       }
 3320               		.loc 1 776 15 is_stmt 0 view .LVU897
 3321 0128 CE01      		movw r24,r28
 3322 012a 0E94 0000 		call obqGetEmptyBufferTimeoutS
 3323               	.LVL154:
 776:../../../os/hal/src/hal_buffers.c ****       }
 3324               		.loc 1 776 15 view .LVU898
 3325               	.LBE538:
 780:../../../os/hal/src/hal_buffers.c ****         osalSysUnlock();
 3326               		.loc 1 780 7 is_stmt 1 view .LVU899
 780:../../../os/hal/src/hal_buffers.c ****         osalSysUnlock();
 3327               		.loc 1 780 10 is_stmt 0 view .LVU900
 3328 012e 892B      		or r24,r25
 3329 0130 01F4      		brne .L106
 3330               	.L121:
 780:../../../os/hal/src/hal_buffers.c ****         osalSysUnlock();
 3331               		.loc 1 780 10 view .LVU901
 3332 0132 8B89      		ldd r24,Y+19
 3333 0134 9C89      		ldd r25,Y+20
 3334               	.LVL155:
 780:../../../os/hal/src/hal_buffers.c ****         osalSysUnlock();
 3335               		.loc 1 780 10 view .LVU902
 3336 0136 00C0      		rjmp .L101
 3337               	.L120:
 763:../../../os/hal/src/hal_buffers.c ****       }
 3338               		.loc 1 763 9 is_stmt 1 view .LVU903
 763:../../../os/hal/src/hal_buffers.c ****       }
 3339               		.loc 1 763 15 is_stmt 0 view .LVU904
 3340 0138 B401      		movw r22,r8
 3341 013a CE01      		movw r24,r28
 3342 013c 0E94 0000 		call obqGetEmptyBufferTimeoutS
 3343               	.LVL156:
 780:../../../os/hal/src/hal_buffers.c ****         osalSysUnlock();
 3344               		.loc 1 780 7 is_stmt 1 view .LVU905
 780:../../../os/hal/src/hal_buffers.c ****         osalSysUnlock();
 3345               		.loc 1 780 10 is_stmt 0 view .LVU906
 3346 0140 892B      		or r24,r25
 3347 0142 01F0      		breq .L121
 3348               	.LVL157:
 3349               	.L106:
 781:../../../os/hal/src/hal_buffers.c ****         return w;
 3350               		.loc 1 781 9 is_stmt 1 view .LVU907
 3351               	.LBB539:
 3352               	.LBI539:
 520:../../../os/hal/osal/rt/osal.h **** 
 3353               		.loc 2 520 20 view .LVU908
 3354               	.LBE539:
 3355               	.LBE566:
 3356               	.LBE575:
 522:../../../os/hal/osal/rt/osal.h **** }
 3357               		.loc 2 522 3 view .LVU909
 3358               	.LBB576:
 3359               	.LBB567:
 3360               	.LBB544:
 3361               	.LBB540:
 3362               	.LBI540:
 365:../../../os/rt/include/chsys.h **** 
 3363               		.loc 5 365 20 view .LVU910
 3364               	.LBB541:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 3365               		.loc 5 367 22 view .LVU911
 368:../../../os/rt/include/chsys.h **** 
 3366               		.loc 5 368 33 view .LVU912
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 3367               		.loc 5 374 3 view .LVU913
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 3368               		.loc 5 374 3 view .LVU914
 3369               		.loc 5 378 3 view .LVU915
 3370               	.LBB542:
 3371               	.LBI542:
 445:../../../os/common/ports/AVR/chcore.h **** 
 3372               		.loc 6 445 20 view .LVU916
 3373               	.LBB543:
 3374               		.loc 6 447 3 view .LVU917
 3375               	/* #APP */
 3376               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 3377 0144 7894      		sei
 3378               	 ;  0 "" 2
 3379               	/* #NOAPP */
 3380               	.LBE543:
 3381               	.LBE542:
 3382               	.LBE541:
 3383               	.LBE540:
 3384               	.LBE544:
 782:../../../os/hal/src/hal_buffers.c ****       }
 3385               		.loc 1 782 9 view .LVU918
 3386               	.L100:
 782:../../../os/hal/src/hal_buffers.c ****       }
 3387               		.loc 1 782 9 is_stmt 0 view .LVU919
 3388               	.LBE567:
 3389               	.LBE576:
 819:../../../os/hal/src/hal_buffers.c ****   }
 820:../../../os/hal/src/hal_buffers.c **** }
 3390               		.loc 1 820 1 view .LVU920
 3391 0146 C701      		movw r24,r14
 3392               	/* epilogue start */
 3393 0148 DF91      		pop r29
 3394 014a CF91      		pop r28
 3395               	.LVL158:
 3396               		.loc 1 820 1 view .LVU921
 3397 014c 1F91      		pop r17
 3398 014e 0F91      		pop r16
 3399 0150 FF90      		pop r15
 3400 0152 EF90      		pop r14
 3401               	.LVL159:
 3402               		.loc 1 820 1 view .LVU922
 3403 0154 DF90      		pop r13
 3404 0156 CF90      		pop r12
 3405               	.LVL160:
 3406               		.loc 1 820 1 view .LVU923
 3407 0158 BF90      		pop r11
 3408 015a AF90      		pop r10
 3409               	.LVL161:
 3410               		.loc 1 820 1 view .LVU924
 3411 015c 9F90      		pop r9
 3412 015e 8F90      		pop r8
 3413               	.LVL162:
 3414               		.loc 1 820 1 view .LVU925
 3415 0160 7F90      		pop r7
 3416 0162 6F90      		pop r6
 3417               	.LVL163:
 3418               		.loc 1 820 1 view .LVU926
 3419 0164 5F90      		pop r5
 3420 0166 4F90      		pop r4
 3421               	.LVL164:
 3422               		.loc 1 820 1 view .LVU927
 3423 0168 0895      		ret
 3424               		.cfi_endproc
 3425               	.LFE192:
 3427               		.section	.text.obqTryFlushI,"ax",@progbits
 3428               	.global	obqTryFlushI
 3430               	obqTryFlushI:
 3431               	.LVL165:
 3432               	.LFB193:
 821:../../../os/hal/src/hal_buffers.c **** 
 822:../../../os/hal/src/hal_buffers.c **** /**
 823:../../../os/hal/src/hal_buffers.c ****  * @brief   Flushes the current, partially filled, buffer to the queue.
 824:../../../os/hal/src/hal_buffers.c ****  * @note    The notification callback is not invoked because the function
 825:../../../os/hal/src/hal_buffers.c ****  *          is meant to be called from ISR context. An operation status is
 826:../../../os/hal/src/hal_buffers.c ****  *          returned instead.
 827:../../../os/hal/src/hal_buffers.c ****  *
 828:../../../os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 829:../../../os/hal/src/hal_buffers.c ****  * @return              The operation status.
 830:../../../os/hal/src/hal_buffers.c ****  * @retval false        if no new filled buffer has been posted to the queue.
 831:../../../os/hal/src/hal_buffers.c ****  * @retval true         if a new filled buffer has been posted to the queue.
 832:../../../os/hal/src/hal_buffers.c ****  *
 833:../../../os/hal/src/hal_buffers.c ****  * @iclass
 834:../../../os/hal/src/hal_buffers.c ****  */
 835:../../../os/hal/src/hal_buffers.c **** bool obqTryFlushI(output_buffers_queue_t *obqp) {
 3433               		.loc 1 835 49 is_stmt 1 view -0
 3434               		.cfi_startproc
 3435               	/* prologue: function */
 3436               	/* frame size = 0 */
 3437               	/* stack size = 0 */
 3438               	.L__stack_usage = 0
 3439               		.loc 1 835 49 is_stmt 0 view .LVU929
 3440 0000 FC01      		movw r30,r24
 836:../../../os/hal/src/hal_buffers.c **** 
 837:../../../os/hal/src/hal_buffers.c ****   osalDbgCheckClassI();
 3441               		.loc 1 837 23 is_stmt 1 view .LVU930
 838:../../../os/hal/src/hal_buffers.c **** 
 839:../../../os/hal/src/hal_buffers.c ****   /* If queue is empty and there is a buffer partially filled and
 840:../../../os/hal/src/hal_buffers.c ****      it is not being written.*/
 841:../../../os/hal/src/hal_buffers.c ****   if (obqIsEmptyI(obqp) && (obqp->ptr != NULL)) {
 3442               		.loc 1 841 3 view .LVU931
 3443               		.loc 1 841 7 is_stmt 0 view .LVU932
 3444 0002 A781      		ldd r26,Z+7
 3445 0004 B085      		ldd r27,Z+8
 3446 0006 8185      		ldd r24,Z+9
 3447 0008 9285      		ldd r25,Z+10
 3448               	.LVL166:
 3449               		.loc 1 841 7 view .LVU933
 3450 000a A817      		cp r26,r24
 3451 000c B907      		cpc r27,r25
 3452 000e 01F0      		breq .L130
 3453               	.L129:
 842:../../../os/hal/src/hal_buffers.c ****     size_t size = (size_t)obqp->ptr - ((size_t)obqp->bwrptr + sizeof (size_t));
 843:../../../os/hal/src/hal_buffers.c **** 
 844:../../../os/hal/src/hal_buffers.c ****     if (size > 0U) {
 845:../../../os/hal/src/hal_buffers.c **** 
 846:../../../os/hal/src/hal_buffers.c ****       /* Writing size field in the buffer.*/
 847:../../../os/hal/src/hal_buffers.c ****       *((size_t *)obqp->bwrptr) = size;
 848:../../../os/hal/src/hal_buffers.c **** 
 849:../../../os/hal/src/hal_buffers.c ****       /* Posting the buffer in the queue.*/
 850:../../../os/hal/src/hal_buffers.c ****       obqp->bcounter--;
 851:../../../os/hal/src/hal_buffers.c ****       obqp->bwrptr += obqp->bsize;
 852:../../../os/hal/src/hal_buffers.c ****       if (obqp->bwrptr >= obqp->btop) {
 853:../../../os/hal/src/hal_buffers.c ****         obqp->bwrptr = obqp->buffers;
 854:../../../os/hal/src/hal_buffers.c ****       }
 855:../../../os/hal/src/hal_buffers.c **** 
 856:../../../os/hal/src/hal_buffers.c ****       /* No "current" buffer.*/
 857:../../../os/hal/src/hal_buffers.c ****       obqp->ptr = NULL;
 858:../../../os/hal/src/hal_buffers.c **** 
 859:../../../os/hal/src/hal_buffers.c ****       return true;
 860:../../../os/hal/src/hal_buffers.c ****     }
 861:../../../os/hal/src/hal_buffers.c ****   }
 862:../../../os/hal/src/hal_buffers.c ****   return false;
 3454               		.loc 1 862 10 view .LVU934
 3455 0010 80E0      		ldi r24,0
 3456               	/* epilogue start */
 863:../../../os/hal/src/hal_buffers.c **** }
 3457               		.loc 1 863 1 view .LVU935
 3458 0012 0895      		ret
 3459               	.L130:
 841:../../../os/hal/src/hal_buffers.c ****     size_t size = (size_t)obqp->ptr - ((size_t)obqp->bwrptr + sizeof (size_t));
 3460               		.loc 1 841 7 discriminator 1 view .LVU936
 3461 0014 8581      		ldd r24,Z+5
 3462 0016 9681      		ldd r25,Z+6
 3463 0018 892B      		or r24,r25
 3464 001a 01F0      		breq .L129
 841:../../../os/hal/src/hal_buffers.c ****     size_t size = (size_t)obqp->ptr - ((size_t)obqp->bwrptr + sizeof (size_t));
 3465               		.loc 1 841 33 view .LVU937
 3466 001c 8389      		ldd r24,Z+19
 3467 001e 9489      		ldd r25,Z+20
 841:../../../os/hal/src/hal_buffers.c ****     size_t size = (size_t)obqp->ptr - ((size_t)obqp->bwrptr + sizeof (size_t));
 3468               		.loc 1 841 25 view .LVU938
 3469 0020 0097      		sbiw r24,0
 3470 0022 01F0      		breq .L129
 3471               	.LBB577:
 842:../../../os/hal/src/hal_buffers.c ****     size_t size = (size_t)obqp->ptr - ((size_t)obqp->bwrptr + sizeof (size_t));
 3472               		.loc 1 842 5 is_stmt 1 view .LVU939
 842:../../../os/hal/src/hal_buffers.c ****     size_t size = (size_t)obqp->ptr - ((size_t)obqp->bwrptr + sizeof (size_t));
 3473               		.loc 1 842 12 is_stmt 0 view .LVU940
 3474 0024 0297      		sbiw r24,2
 3475 0026 8A1B      		sub r24,r26
 3476 0028 9B0B      		sbc r25,r27
 3477               	.LVL167:
 844:../../../os/hal/src/hal_buffers.c **** 
 3478               		.loc 1 844 5 is_stmt 1 view .LVU941
 844:../../../os/hal/src/hal_buffers.c **** 
 3479               		.loc 1 844 8 is_stmt 0 view .LVU942
 3480 002a 01F0      		breq .L129
 847:../../../os/hal/src/hal_buffers.c **** 
 3481               		.loc 1 847 7 is_stmt 1 view .LVU943
 847:../../../os/hal/src/hal_buffers.c **** 
 3482               		.loc 1 847 33 is_stmt 0 view .LVU944
 3483 002c 1196      		adiw r26,1
 3484 002e 9C93      		st X,r25
 3485 0030 8E93      		st -X,r24
 850:../../../os/hal/src/hal_buffers.c ****       obqp->bwrptr += obqp->bsize;
 3486               		.loc 1 850 7 is_stmt 1 view .LVU945
 850:../../../os/hal/src/hal_buffers.c ****       obqp->bwrptr += obqp->bsize;
 3487               		.loc 1 850 11 is_stmt 0 view .LVU946
 3488 0032 8581      		ldd r24,Z+5
 3489 0034 9681      		ldd r25,Z+6
 3490               	.LVL168:
 850:../../../os/hal/src/hal_buffers.c ****       obqp->bwrptr += obqp->bsize;
 3491               		.loc 1 850 21 view .LVU947
 3492 0036 0197      		sbiw r24,1
 3493 0038 9683      		std Z+6,r25
 3494 003a 8583      		std Z+5,r24
 3495               	.LVL169:
 851:../../../os/hal/src/hal_buffers.c ****       if (obqp->bwrptr >= obqp->btop) {
 3496               		.loc 1 851 7 is_stmt 1 view .LVU948
 851:../../../os/hal/src/hal_buffers.c ****       if (obqp->bwrptr >= obqp->btop) {
 3497               		.loc 1 851 20 is_stmt 0 view .LVU949
 3498 003c 8585      		ldd r24,Z+13
 3499 003e 9685      		ldd r25,Z+14
 3500 0040 A80F      		add r26,r24
 3501 0042 B91F      		adc r27,r25
 3502               	.LVL170:
 851:../../../os/hal/src/hal_buffers.c ****       if (obqp->bwrptr >= obqp->btop) {
 3503               		.loc 1 851 20 view .LVU950
 3504 0044 B087      		std Z+8,r27
 3505 0046 A783      		std Z+7,r26
 3506               	.LVL171:
 852:../../../os/hal/src/hal_buffers.c ****         obqp->bwrptr = obqp->buffers;
 3507               		.loc 1 852 7 is_stmt 1 view .LVU951
 852:../../../os/hal/src/hal_buffers.c ****         obqp->bwrptr = obqp->buffers;
 3508               		.loc 1 852 10 is_stmt 0 view .LVU952
 3509 0048 8385      		ldd r24,Z+11
 3510 004a 9485      		ldd r25,Z+12
 3511 004c A817      		cp r26,r24
 3512 004e B907      		cpc r27,r25
 3513 0050 00F0      		brlo .L125
 853:../../../os/hal/src/hal_buffers.c ****       }
 3514               		.loc 1 853 9 is_stmt 1 view .LVU953
 853:../../../os/hal/src/hal_buffers.c ****       }
 3515               		.loc 1 853 22 is_stmt 0 view .LVU954
 3516 0052 8189      		ldd r24,Z+17
 3517 0054 9289      		ldd r25,Z+18
 3518 0056 9087      		std Z+8,r25
 3519 0058 8783      		std Z+7,r24
 3520               	.L125:
 857:../../../os/hal/src/hal_buffers.c **** 
 3521               		.loc 1 857 7 is_stmt 1 view .LVU955
 857:../../../os/hal/src/hal_buffers.c **** 
 3522               		.loc 1 857 17 is_stmt 0 view .LVU956
 3523 005a 148A      		std Z+20,__zero_reg__
 3524 005c 138A      		std Z+19,__zero_reg__
 859:../../../os/hal/src/hal_buffers.c ****     }
 3525               		.loc 1 859 7 is_stmt 1 view .LVU957
 859:../../../os/hal/src/hal_buffers.c ****     }
 3526               		.loc 1 859 14 is_stmt 0 view .LVU958
 3527 005e 81E0      		ldi r24,lo8(1)
 3528 0060 0895      		ret
 3529               	.LBE577:
 3530               		.cfi_endproc
 3531               	.LFE193:
 3533               		.section	.text.obqFlush,"ax",@progbits
 3534               	.global	obqFlush
 3536               	obqFlush:
 3537               	.LVL172:
 3538               	.LFB194:
 864:../../../os/hal/src/hal_buffers.c **** 
 865:../../../os/hal/src/hal_buffers.c **** /**
 866:../../../os/hal/src/hal_buffers.c ****  * @brief   Flushes the current, partially filled, buffer to the queue.
 867:../../../os/hal/src/hal_buffers.c ****  *
 868:../../../os/hal/src/hal_buffers.c ****  * @param[in] obqp      pointer to the @p output_buffers_queue_t object
 869:../../../os/hal/src/hal_buffers.c ****  *
 870:../../../os/hal/src/hal_buffers.c ****  * @api
 871:../../../os/hal/src/hal_buffers.c ****  */
 872:../../../os/hal/src/hal_buffers.c **** void obqFlush(output_buffers_queue_t *obqp) {
 3539               		.loc 1 872 45 is_stmt 1 view -0
 3540               		.cfi_startproc
 3541               	/* prologue: function */
 3542               	/* frame size = 0 */
 3543               	/* stack size = 0 */
 3544               	.L__stack_usage = 0
 3545               		.loc 1 872 45 is_stmt 0 view .LVU960
 3546 0000 DC01      		movw r26,r24
 873:../../../os/hal/src/hal_buffers.c **** 
 874:../../../os/hal/src/hal_buffers.c ****   osalSysLock();
 3547               		.loc 1 874 3 is_stmt 1 view .LVU961
 3548               	.LBB578:
 3549               	.LBI578:
 509:../../../os/hal/osal/rt/osal.h **** 
 3550               		.loc 2 509 20 view .LVU962
 3551               	.LBE578:
 511:../../../os/hal/osal/rt/osal.h **** }
 3552               		.loc 2 511 3 view .LVU963
 3553               	.LBB583:
 3554               	.LBB579:
 3555               	.LBI579:
 353:../../../os/rt/include/chsys.h **** 
 3556               		.loc 5 353 20 view .LVU964
 3557               	.LBE579:
 3558               	.LBE583:
 355:../../../os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 3559               		.loc 5 355 3 view .LVU965
 3560               	.LBB584:
 3561               	.LBB582:
 3562               	.LBB580:
 3563               	.LBI580:
 435:../../../os/common/ports/AVR/chcore.h **** 
 3564               		.loc 6 435 20 view .LVU966
 3565               	.LBB581:
 437:../../../os/common/ports/AVR/chcore.h **** }
 3566               		.loc 6 437 3 view .LVU967
 3567               	/* #APP */
 3568               	 ;  437 "../../../os/common/ports/AVR/chcore.h" 1
 3569 0002 F894      		cli
 3570               	 ;  0 "" 2
 3571               	/* #NOAPP */
 3572               	.LBE581:
 3573               	.LBE580:
 3574               	.LBE582:
 3575               	.LBE584:
 356:../../../os/rt/include/chsys.h ****   _dbg_check_lock();
 3576               		.loc 5 356 34 view .LVU968
 357:../../../os/rt/include/chsys.h **** }
 3577               		.loc 5 357 20 view .LVU969
 875:../../../os/hal/src/hal_buffers.c **** 
 876:../../../os/hal/src/hal_buffers.c ****   /* If there is a buffer partially filled and not being written.*/
 877:../../../os/hal/src/hal_buffers.c ****   if (obqp->ptr != NULL) {
 3578               		.loc 1 877 3 view .LVU970
 3579               		.loc 1 877 11 is_stmt 0 view .LVU971
 3580 0004 5396      		adiw r26,19
 3581 0006 2D91      		ld r18,X+
 3582 0008 3C91      		ld r19,X
 3583 000a 5497      		sbiw r26,19+1
 3584               		.loc 1 877 6 view .LVU972
 3585 000c 2115      		cp r18,__zero_reg__
 3586 000e 3105      		cpc r19,__zero_reg__
 3587 0010 01F0      		breq .L133
 3588               	.LBB585:
 878:../../../os/hal/src/hal_buffers.c ****     size_t size = ((size_t)obqp->ptr - (size_t)obqp->bwrptr) - sizeof (size_t);
 3589               		.loc 1 878 5 is_stmt 1 view .LVU973
 3590               		.loc 1 878 52 is_stmt 0 view .LVU974
 3591 0012 1796      		adiw r26,7
 3592 0014 ED91      		ld r30,X+
 3593 0016 FC91      		ld r31,X
 3594 0018 1897      		sbiw r26,7+1
 3595               		.loc 1 878 12 view .LVU975
 3596 001a 2250      		subi r18,2
 3597 001c 3109      		sbc r19,__zero_reg__
 3598 001e 2E1B      		sub r18,r30
 3599 0020 3F0B      		sbc r19,r31
 3600               	.LVL173:
 879:../../../os/hal/src/hal_buffers.c **** 
 880:../../../os/hal/src/hal_buffers.c ****     if (size > 0U) {
 3601               		.loc 1 880 5 is_stmt 1 view .LVU976
 3602               		.loc 1 880 8 is_stmt 0 view .LVU977
 3603 0022 01F0      		breq .L133
 881:../../../os/hal/src/hal_buffers.c ****       obqPostFullBufferS(obqp, size);
 3604               		.loc 1 881 7 is_stmt 1 view .LVU978
 3605               	.LVL174:
 3606               	.LBB586:
 3607               	.LBI586:
 646:../../../os/hal/src/hal_buffers.c **** 
 3608               		.loc 1 646 6 view .LVU979
 3609               	.LBB587:
 648:../../../os/hal/src/hal_buffers.c ****   osalDbgCheck((size > 0U) && (size <= (obqp->bsize - sizeof (size_t))));
 3610               		.loc 1 648 23 view .LVU980
 649:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsFullI(obqp), "buffers queue full");
 3611               		.loc 1 649 3 view .LVU981
 649:../../../os/hal/src/hal_buffers.c ****   osalDbgAssert(!obqIsFullI(obqp), "buffers queue full");
 3612               		.loc 1 649 3 view .LVU982
 650:../../../os/hal/src/hal_buffers.c **** 
 3613               		.loc 1 650 3 view .LVU983
 650:../../../os/hal/src/hal_buffers.c **** 
 3614               		.loc 1 650 3 view .LVU984
 653:../../../os/hal/src/hal_buffers.c **** 
 3615               		.loc 1 653 3 view .LVU985
 653:../../../os/hal/src/hal_buffers.c **** 
 3616               		.loc 1 653 29 is_stmt 0 view .LVU986
 3617 0024 3183      		std Z+1,r19
 3618 0026 2083      		st Z,r18
 656:../../../os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 3619               		.loc 1 656 3 is_stmt 1 view .LVU987
 656:../../../os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 3620               		.loc 1 656 7 is_stmt 0 view .LVU988
 3621 0028 1596      		adiw r26,5
 3622 002a 8D91      		ld r24,X+
 3623 002c 9C91      		ld r25,X
 3624 002e 1697      		sbiw r26,5+1
 3625               	.LVL175:
 656:../../../os/hal/src/hal_buffers.c ****   obqp->bwrptr += obqp->bsize;
 3626               		.loc 1 656 17 view .LVU989
 3627 0030 0197      		sbiw r24,1
 3628 0032 1696      		adiw r26,5+1
 3629 0034 9C93      		st X,r25
 3630 0036 8E93      		st -X,r24
 3631 0038 1597      		sbiw r26,5
 657:../../../os/hal/src/hal_buffers.c ****   if (obqp->bwrptr >= obqp->btop) {
 3632               		.loc 1 657 3 is_stmt 1 view .LVU990
 657:../../../os/hal/src/hal_buffers.c ****   if (obqp->bwrptr >= obqp->btop) {
 3633               		.loc 1 657 16 is_stmt 0 view .LVU991
 3634 003a 1D96      		adiw r26,13
 3635 003c 8D91      		ld r24,X+
 3636 003e 9C91      		ld r25,X
 3637 0040 1E97      		sbiw r26,13+1
 3638 0042 E80F      		add r30,r24
 3639 0044 F91F      		adc r31,r25
 3640 0046 1896      		adiw r26,7+1
 3641 0048 FC93      		st X,r31
 3642 004a EE93      		st -X,r30
 3643 004c 1797      		sbiw r26,7
 658:../../../os/hal/src/hal_buffers.c ****     obqp->bwrptr = obqp->buffers;
 3644               		.loc 1 658 3 is_stmt 1 view .LVU992
 658:../../../os/hal/src/hal_buffers.c ****     obqp->bwrptr = obqp->buffers;
 3645               		.loc 1 658 6 is_stmt 0 view .LVU993
 3646 004e 1B96      		adiw r26,11
 3647 0050 8D91      		ld r24,X+
 3648 0052 9C91      		ld r25,X
 3649 0054 1C97      		sbiw r26,11+1
 3650 0056 E817      		cp r30,r24
 3651 0058 F907      		cpc r31,r25
 3652 005a 00F4      		brsh .L142
 3653               	.L135:
 663:../../../os/hal/src/hal_buffers.c **** 
 3654               		.loc 1 663 3 is_stmt 1 view .LVU994
 663:../../../os/hal/src/hal_buffers.c **** 
 3655               		.loc 1 663 13 is_stmt 0 view .LVU995
 3656 005c 5496      		adiw r26,19+1
 3657 005e 1C92      		st X,__zero_reg__
 3658 0060 1E92      		st -X,__zero_reg__
 3659 0062 5397      		sbiw r26,19
 666:../../../os/hal/src/hal_buffers.c ****     obqp->notify(obqp);
 3660               		.loc 1 666 3 is_stmt 1 view .LVU996
 666:../../../os/hal/src/hal_buffers.c ****     obqp->notify(obqp);
 3661               		.loc 1 666 11 is_stmt 0 view .LVU997
 3662 0064 5796      		adiw r26,23
 3663 0066 ED91      		ld r30,X+
 3664 0068 FC91      		ld r31,X
 3665 006a 5897      		sbiw r26,23+1
 666:../../../os/hal/src/hal_buffers.c ****     obqp->notify(obqp);
 3666               		.loc 1 666 6 view .LVU998
 3667 006c 3097      		sbiw r30,0
 3668 006e 01F0      		breq .L133
 667:../../../os/hal/src/hal_buffers.c ****   }
 3669               		.loc 1 667 5 is_stmt 1 view .LVU999
 3670 0070 CD01      		movw r24,r26
 3671 0072 0995      		icall
 3672               	.LVL176:
 3673               	.L133:
 667:../../../os/hal/src/hal_buffers.c ****   }
 3674               		.loc 1 667 5 is_stmt 0 view .LVU1000
 3675               	.LBE587:
 3676               	.LBE586:
 3677               	.LBE585:
 882:../../../os/hal/src/hal_buffers.c ****     }
 883:../../../os/hal/src/hal_buffers.c ****   }
 884:../../../os/hal/src/hal_buffers.c **** 
 885:../../../os/hal/src/hal_buffers.c ****   osalSysUnlock();
 3678               		.loc 1 885 3 is_stmt 1 view .LVU1001
 3679               	.LBB590:
 3680               	.LBI590:
 520:../../../os/hal/osal/rt/osal.h **** 
 3681               		.loc 2 520 20 view .LVU1002
 3682               	.LBE590:
 522:../../../os/hal/osal/rt/osal.h **** }
 3683               		.loc 2 522 3 view .LVU1003
 3684               	.LBB595:
 3685               	.LBB591:
 3686               	.LBI591:
 365:../../../os/rt/include/chsys.h **** 
 3687               		.loc 5 365 20 view .LVU1004
 3688               	.LBB592:
 367:../../../os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 3689               		.loc 5 367 22 view .LVU1005
 368:../../../os/rt/include/chsys.h **** 
 3690               		.loc 5 368 33 view .LVU1006
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 3691               		.loc 5 374 3 view .LVU1007
 374:../../../os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 3692               		.loc 5 374 3 view .LVU1008
 3693               		.loc 5 378 3 view .LVU1009
 3694               	.LBB593:
 3695               	.LBI593:
 445:../../../os/common/ports/AVR/chcore.h **** 
 3696               		.loc 6 445 20 view .LVU1010
 3697               	.LBB594:
 3698               		.loc 6 447 3 view .LVU1011
 3699               	/* #APP */
 3700               	 ;  447 "../../../os/common/ports/AVR/chcore.h" 1
 3701 0074 7894      		sei
 3702               	 ;  0 "" 2
 3703               	/* #NOAPP */
 3704               	/* epilogue start */
 3705               	.LBE594:
 3706               	.LBE593:
 3707               	.LBE592:
 3708               	.LBE591:
 3709               	.LBE595:
 886:../../../os/hal/src/hal_buffers.c **** }
 3710               		.loc 1 886 1 is_stmt 0 view .LVU1012
 3711 0076 0895      		ret
 3712               	.LVL177:
 3713               	.L142:
 3714               	.LBB596:
 3715               	.LBB589:
 3716               	.LBB588:
 659:../../../os/hal/src/hal_buffers.c ****   }
 3717               		.loc 1 659 5 is_stmt 1 view .LVU1013
 659:../../../os/hal/src/hal_buffers.c ****   }
 3718               		.loc 1 659 18 is_stmt 0 view .LVU1014
 3719 0078 5196      		adiw r26,17
 3720 007a 8D91      		ld r24,X+
 3721 007c 9C91      		ld r25,X
 3722 007e 5297      		sbiw r26,17+1
 3723 0080 1896      		adiw r26,7+1
 3724 0082 9C93      		st X,r25
 3725 0084 8E93      		st -X,r24
 3726 0086 1797      		sbiw r26,7
 3727 0088 00C0      		rjmp .L135
 3728               	.LBE588:
 3729               	.LBE589:
 3730               	.LBE596:
 3731               		.cfi_endproc
 3732               	.LFE194:
 3734               		.text
 3735               	.Letext0:
 3736               		.file 11 "/usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/include/stddef.h"
 3737               		.file 12 "/usr/local/Cellar/avr-gcc/8.2.0/avr/include/stdint.h"
 3738               		.file 13 "../../../os/common/ports/AVR/compilers/GCC/chtypes.h"
 3739               		.file 14 "../../../os/rt/include/chsystypes.h"
 3740               		.file 15 "../../../os/rt/include/chsem.h"
 3741               		.file 16 "../../../os/rt/include/chmtx.h"
 3742               		.file 17 "../../../os/rt/include/chregistry.h"
 3743               		.file 18 "../../../os/rt/include/chevents.h"
 3744               		.file 19 "../../../os/common/oslib/include/chmemcore.h"
 3745               		.file 20 "../../../os/hal/include/hal_buffers.h"
 3746               		.file 21 "../../../os/hal/include/hal_queues.h"
 3747               		.file 22 "../../../os/hal/include/hal_pal.h"
 3748               		.file 23 "../../../os/hal/ports/AVR/MEGA/LLD/GPIOv1/hal_pal_lld.h"
 3749               		.file 24 "../../../os/hal/include/hal_adc.h"
 3750               		.file 25 "../../../os/hal/ports/AVR/MEGA/LLD/ADCv1/hal_adc_lld.h"
 3751               		.file 26 "../../../os/hal/include/hal_serial.h"
 3752               		.file 27 "../../../os/hal/ports/AVR/MEGA/LLD/USARTv1/hal_serial_lld.h"
 3753               		.file 28 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_buffers.c
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:4      *ABS*:000000000000003f __SREG__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:13     .text.ibqObjectInit:0000000000000000 ibqObjectInit
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:172    .text.ibqResetI:0000000000000000 ibqResetI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:229    .text.ibqGetEmptyBufferI:0000000000000000 ibqGetEmptyBufferI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:276    .text.ibqPostFullBufferI:0000000000000000 ibqPostFullBufferI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:354    .text.ibqGetFullBufferTimeoutS:0000000000000000 ibqGetFullBufferTimeoutS
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:491    .text.ibqGetFullBufferTimeout:0000000000000000 ibqGetFullBufferTimeout
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:579    .text.ibqReleaseEmptyBuffer:0000000000000000 ibqReleaseEmptyBuffer
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:742    .text.ibqReleaseEmptyBufferS:0000000000000000 ibqReleaseEmptyBufferS
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:834    .text.ibqGetTimeout:0000000000000000 ibqGetTimeout
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:1044   .text.ibqReadTimeout:0000000000000000 ibqReadTimeout
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:1683   .text.obqObjectInit:0000000000000000 obqObjectInit
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:1838   .text.obqResetI:0000000000000000 obqResetI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:1898   .text.obqGetFullBufferI:0000000000000000 obqGetFullBufferI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:1955   .text.obqReleaseEmptyBufferI:0000000000000000 obqReleaseEmptyBufferI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:2023   .text.obqGetEmptyBufferTimeoutS:0000000000000000 obqGetEmptyBufferTimeoutS
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:2161   .text.obqGetEmptyBufferTimeout:0000000000000000 obqGetEmptyBufferTimeout
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:2247   .text.obqPostFullBuffer:0000000000000000 obqPostFullBuffer
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:2417   .text.obqPostFullBufferS:0000000000000000 obqPostFullBufferS
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:2516   .text.obqPutTimeout:0000000000000000 obqPutTimeout
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:2777   .text.obqWriteTimeout:0000000000000000 obqWriteTimeout
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:3430   .text.obqTryFlushI:0000000000000000 obqTryFlushI
/var/folders/sg/tltzpcsx3k34y_dkw5w40_s40000gn/T//ccNgaU2R.s:3536   .text.obqFlush:0000000000000000 obqFlush

UNDEFINED SYMBOLS
chThdDequeueAllI
chThdDequeueNextI
chThdEnqueueTimeoutS
memcpy
