   1               		.file	"hal_pwm_lld.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.__vector_13,"ax",@progbits
  11               	.global	__vector_13
  13               	__vector_13:
  14               	.LFB170:
  15               		.file 1 "../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c"
   1:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /*
   2:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
   4:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     you may not use this file except in compliance with the License.
   6:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     You may obtain a copy of the License at
   7:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
   8:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
  10:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     Unless required by applicable law or agreed to in writing, software
  11:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     See the License for the specific language governing permissions and
  14:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     limitations under the License.
  15:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** */
  16:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
  17:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /*
  18:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****    This driver is based on the work done by Matteo Serva available at
  19:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****    http://github.com/matteoserva/ChibiOS-AVR
  20:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** */
  21:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
  22:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /**
  23:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @file    TIMv1/hal_pwm_lld.c
  24:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @brief   AVR/MEGA PWM subsystem low level driver source.
  25:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
  26:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @addtogroup PWM
  27:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @{
  28:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  */
  29:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
  30:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #include "hal.h"
  31:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
  32:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if HAL_USE_PWM || defined(__DOXYGEN__)
  33:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
  34:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /*==========================================================================*/
  35:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /* Driver local definitions.                                                */
  36:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /*==========================================================================*/
  37:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
  38:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #define TIM1_CS_OFFSET CS10
  39:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #define TIM1_WGM_OFFSET1 WGM10
  40:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #define TIM1_WGM_OFFSET2 WGM12
  41:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
  42:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** typedef struct {
  43:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   volatile uint8_t *tccra;
  44:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   volatile uint8_t *tccrb;
  45:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   volatile uint8_t *ocrah;
  46:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   volatile uint8_t *ocral;
  47:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   volatile uint8_t *ocrbh;
  48:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   volatile uint8_t *ocrbl;
  49:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   volatile uint8_t *ocrch;
  50:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   volatile uint8_t *ocrcl;
  51:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   volatile uint8_t *tifr;
  52:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   volatile uint8_t *timsk;
  53:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   volatile uint16_t *icr;
  54:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** } timer_registers_t;
  55:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
  56:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** static timer_registers_t regs_table[]=
  57:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** {
  58:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM1 || defined(__DOXYGEN__)
  59:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if defined(OCR1C)
  60:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   {&TCCR1A, &TCCR1B, &OCR1AH, &OCR1AL, &OCR1BH, &OCR1BL, &OCR1CH, &OCR1CL,
  61:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****    &TIFR1, &TIMSK1, &ICR1},
  62:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #else
  63:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   {&TCCR1A, &TCCR1B, &OCR1AH, &OCR1AL, &OCR1BH, &OCR1BL, NULL, NULL,
  64:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****    &TIFR1, &TIMSK1, &ICR1},
  65:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
  66:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
  67:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM2 || defined(__DOXYGEN__)
  68:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   {&TCCR2A, &TCCR2B, &OCR2A, &OCR2A, &OCR2B, &OCR2B, NULL, NULL,
  69:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****    &TIFR2, &TIMSK2, NULL},
  70:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
  71:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM3 || defined(__DOXYGEN__)
  72:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   {&TCCR3A, &TCCR3B, &OCR3AH, &OCR3AL, &OCR3BH, &OCR3BL, &OCR3CH, &OCR3CL,
  73:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****    &TIFR3, &TIMSK3, &ICR3},
  74:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
  75:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM4 || defined(__DOXYGEN__)
  76:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   {&TCCR4A, &TCCR4B, &OCR4AH, &OCR4AL, &OCR4CH, &OCR4CL, &OCR4CH, &OCR4CL,
  77:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****    &TIFR4, &TIMSK4, &ICR4},
  78:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
  79:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM5 || defined(__DOXYGEN__)
  80:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   {&TCCR5A, &TCCR5B, &OCR5AH, &OCR5AL, &OCR5BH, &OCR5BL, &OCR5CH, &OCR5CL,
  81:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****    &TIFR5, &TIMSK5, &ICR5},
  82:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
  83:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** };
  84:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
  85:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /*==========================================================================*/
  86:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /* Driver exported variables.                                               */
  87:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /*==========================================================================*/
  88:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
  89:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /** @brief PWM driver identifiers.*/
  90:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM1 || defined(__DOXYGEN__)
  91:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** PWMDriver PWMD1;
  92:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
  93:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM2 || defined(__DOXYGEN__)
  94:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** PWMDriver PWMD2;
  95:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
  96:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM3 || defined(__DOXYGEN__)
  97:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** PWMDriver PWMD3;
  98:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
  99:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM4 || defined(__DOXYGEN__)
 100:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** PWMDriver PWMD4;
 101:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 102:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM5 || defined(__DOXYGEN__)
 103:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** PWMDriver PWMD5;
 104:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 105:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 106:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /*==========================================================================*/
 107:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /* Driver local variables.                                                  */
 108:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /*==========================================================================*/
 109:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 110:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /*==========================================================================*/
 111:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /* Driver local functions.                                                  */
 112:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /*==========================================================================*/
 113:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 114:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** static void config_channel(volatile uint8_t *tccra,
 115:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                            uint8_t com1,
 116:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                            uint8_t com0,
 117:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                            pwmmode_t mode) {
 118:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 119:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   *tccra &= ~((1 << com1) | (1 << com0));
 120:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (mode == PWM_OUTPUT_ACTIVE_HIGH)
 121:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     *tccra |= ((1 << com1) | (0 << com0)); /* Non inverting mode. */
 122:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else if (mode == PWM_OUTPUT_ACTIVE_LOW)
 123:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     *tccra |= (1 << com1) | (1 << com0);   /* Inverting mode.     */
 124:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 125:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 126:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** static uint8_t timer_index(PWMDriver *pwmp) {
 127:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 128:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   uint8_t index = 0;
 129:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 130:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM1 || defined(__DOXYGEN__)
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (pwmp == &PWMD1) return index;
 132:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 133:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 134:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM2 || defined(__DOXYGEN__)
 135:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (pwmp == &PWMD2) return index;
 136:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 137:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 138:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM3 || defined(__DOXYGEN__)
 139:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (pwmp == &PWMD3) return index;
 140:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 141:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 142:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM4 || defined(__DOXYGEN__)
 143:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (pwmp == &PWMD4) return index;
 144:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 145:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 146:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM5 || defined(__DOXYGEN__)
 147:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (pwmp == &PWMD5) return index;
 148:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 149:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 150:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 151:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   /* This is an error! */
 152:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   return index;
 153:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 154:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 155:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /*==========================================================================*/
 156:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /* Driver interrupt handlers.                                               */
 157:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /*==========================================================================*/
 158:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 159:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /*
 160:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * Interrupt for compare1&2 and clock overflow. pwmd1 & pwmd2.
 161:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  */
 162:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM1 || defined(__DOXYGEN__)
 163:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER1_OVF_vect) {
  16               		.loc 1 163 0
  17               		.cfi_startproc
  18 0000 1F92      		push r1
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 1, -2
  22 0002 0F92      		push r0
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 0, -3
  26 0004 0FB6      		in r0,__SREG__
  27 0006 0F92      		push r0
  28 0008 1124      		clr __zero_reg__
  29 000a 2F93      		push r18
  30               	.LCFI2:
  31               		.cfi_def_cfa_offset 5
  32               		.cfi_offset 18, -4
  33 000c 3F93      		push r19
  34               	.LCFI3:
  35               		.cfi_def_cfa_offset 6
  36               		.cfi_offset 19, -5
  37 000e 4F93      		push r20
  38               	.LCFI4:
  39               		.cfi_def_cfa_offset 7
  40               		.cfi_offset 20, -6
  41 0010 5F93      		push r21
  42               	.LCFI5:
  43               		.cfi_def_cfa_offset 8
  44               		.cfi_offset 21, -7
  45 0012 6F93      		push r22
  46               	.LCFI6:
  47               		.cfi_def_cfa_offset 9
  48               		.cfi_offset 22, -8
  49 0014 7F93      		push r23
  50               	.LCFI7:
  51               		.cfi_def_cfa_offset 10
  52               		.cfi_offset 23, -9
  53 0016 8F93      		push r24
  54               	.LCFI8:
  55               		.cfi_def_cfa_offset 11
  56               		.cfi_offset 24, -10
  57 0018 9F93      		push r25
  58               	.LCFI9:
  59               		.cfi_def_cfa_offset 12
  60               		.cfi_offset 25, -11
  61 001a AF93      		push r26
  62               	.LCFI10:
  63               		.cfi_def_cfa_offset 13
  64               		.cfi_offset 26, -12
  65 001c BF93      		push r27
  66               	.LCFI11:
  67               		.cfi_def_cfa_offset 14
  68               		.cfi_offset 27, -13
  69 001e EF93      		push r30
  70               	.LCFI12:
  71               		.cfi_def_cfa_offset 15
  72               		.cfi_offset 30, -14
  73 0020 FF93      		push r31
  74               	.LCFI13:
  75               		.cfi_def_cfa_offset 16
  76               		.cfi_offset 31, -15
  77               	/* prologue: Signal */
  78               	/* frame size = 0 */
  79               	/* stack size = 15 */
  80               	.L__stack_usage = 15
 164:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 165:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
  81               		.loc 1 165 0
  82 0022 81E0      		ldi r24,lo8(1)
  83 0024 8093 0000 		sts __avr_in_isr,r24
 166:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD1.config->callback(&PWMD1);
  84               		.loc 1 166 0
  85 0028 E091 0000 		lds r30,PWMD1+1
  86 002c F091 0000 		lds r31,PWMD1+1+1
  87 0030 0680      		ldd __tmp_reg__,Z+6
  88 0032 F781      		ldd r31,Z+7
  89 0034 E02D      		mov r30,__tmp_reg__
  90 0036 80E0      		ldi r24,lo8(PWMD1)
  91 0038 90E0      		ldi r25,hi8(PWMD1)
  92 003a 0995      		icall
  93               	.LVL0:
 167:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
  94               		.loc 1 167 0
  95 003c 1092 0000 		sts __avr_in_isr,__zero_reg__
  96 0040 0E94 0000 		call chSchIsPreemptionRequired
  97               	.LVL1:
  98 0044 8111      		cpse r24,__zero_reg__
  99               		.loc 1 167 0 is_stmt 0 discriminator 1
 100 0046 0E94 0000 		call chSchDoReschedule
 101               	.LVL2:
 102               	.L1:
 103               	/* epilogue start */
 168:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 104               		.loc 1 168 0 is_stmt 1
 105 004a FF91      		pop r31
 106 004c EF91      		pop r30
 107 004e BF91      		pop r27
 108 0050 AF91      		pop r26
 109 0052 9F91      		pop r25
 110 0054 8F91      		pop r24
 111 0056 7F91      		pop r23
 112 0058 6F91      		pop r22
 113 005a 5F91      		pop r21
 114 005c 4F91      		pop r20
 115 005e 3F91      		pop r19
 116 0060 2F91      		pop r18
 117 0062 0F90      		pop r0
 118 0064 0FBE      		out __SREG__,r0
 119 0066 0F90      		pop r0
 120 0068 1F90      		pop r1
 121 006a 1895      		reti
 122               		.cfi_endproc
 123               	.LFE170:
 125               		.section	.text.__vector_11,"ax",@progbits
 126               	.global	__vector_11
 128               	__vector_11:
 129               	.LFB171:
 169:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 170:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER1_COMPA_vect) {
 130               		.loc 1 170 0
 131               		.cfi_startproc
 132 0000 1F92      		push r1
 133               	.LCFI14:
 134               		.cfi_def_cfa_offset 3
 135               		.cfi_offset 1, -2
 136 0002 0F92      		push r0
 137               	.LCFI15:
 138               		.cfi_def_cfa_offset 4
 139               		.cfi_offset 0, -3
 140 0004 0FB6      		in r0,__SREG__
 141 0006 0F92      		push r0
 142 0008 1124      		clr __zero_reg__
 143 000a 2F93      		push r18
 144               	.LCFI16:
 145               		.cfi_def_cfa_offset 5
 146               		.cfi_offset 18, -4
 147 000c 3F93      		push r19
 148               	.LCFI17:
 149               		.cfi_def_cfa_offset 6
 150               		.cfi_offset 19, -5
 151 000e 4F93      		push r20
 152               	.LCFI18:
 153               		.cfi_def_cfa_offset 7
 154               		.cfi_offset 20, -6
 155 0010 5F93      		push r21
 156               	.LCFI19:
 157               		.cfi_def_cfa_offset 8
 158               		.cfi_offset 21, -7
 159 0012 6F93      		push r22
 160               	.LCFI20:
 161               		.cfi_def_cfa_offset 9
 162               		.cfi_offset 22, -8
 163 0014 7F93      		push r23
 164               	.LCFI21:
 165               		.cfi_def_cfa_offset 10
 166               		.cfi_offset 23, -9
 167 0016 8F93      		push r24
 168               	.LCFI22:
 169               		.cfi_def_cfa_offset 11
 170               		.cfi_offset 24, -10
 171 0018 9F93      		push r25
 172               	.LCFI23:
 173               		.cfi_def_cfa_offset 12
 174               		.cfi_offset 25, -11
 175 001a AF93      		push r26
 176               	.LCFI24:
 177               		.cfi_def_cfa_offset 13
 178               		.cfi_offset 26, -12
 179 001c BF93      		push r27
 180               	.LCFI25:
 181               		.cfi_def_cfa_offset 14
 182               		.cfi_offset 27, -13
 183 001e EF93      		push r30
 184               	.LCFI26:
 185               		.cfi_def_cfa_offset 15
 186               		.cfi_offset 30, -14
 187 0020 FF93      		push r31
 188               	.LCFI27:
 189               		.cfi_def_cfa_offset 16
 190               		.cfi_offset 31, -15
 191               	/* prologue: Signal */
 192               	/* frame size = 0 */
 193               	/* stack size = 15 */
 194               	.L__stack_usage = 15
 171:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 172:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 195               		.loc 1 172 0
 196 0022 81E0      		ldi r24,lo8(1)
 197 0024 8093 0000 		sts __avr_in_isr,r24
 173:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD1.config->channels[0].callback(&PWMD1);
 198               		.loc 1 173 0
 199 0028 E091 0000 		lds r30,PWMD1+1
 200 002c F091 0000 		lds r31,PWMD1+1+1
 201 0030 0184      		ldd __tmp_reg__,Z+9
 202 0032 F285      		ldd r31,Z+10
 203 0034 E02D      		mov r30,__tmp_reg__
 204 0036 80E0      		ldi r24,lo8(PWMD1)
 205 0038 90E0      		ldi r25,hi8(PWMD1)
 206 003a 0995      		icall
 207               	.LVL3:
 174:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 208               		.loc 1 174 0
 209 003c 1092 0000 		sts __avr_in_isr,__zero_reg__
 210 0040 0E94 0000 		call chSchIsPreemptionRequired
 211               	.LVL4:
 212 0044 8111      		cpse r24,__zero_reg__
 213               		.loc 1 174 0 is_stmt 0 discriminator 1
 214 0046 0E94 0000 		call chSchDoReschedule
 215               	.LVL5:
 216               	.L7:
 217               	/* epilogue start */
 175:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 218               		.loc 1 175 0 is_stmt 1
 219 004a FF91      		pop r31
 220 004c EF91      		pop r30
 221 004e BF91      		pop r27
 222 0050 AF91      		pop r26
 223 0052 9F91      		pop r25
 224 0054 8F91      		pop r24
 225 0056 7F91      		pop r23
 226 0058 6F91      		pop r22
 227 005a 5F91      		pop r21
 228 005c 4F91      		pop r20
 229 005e 3F91      		pop r19
 230 0060 2F91      		pop r18
 231 0062 0F90      		pop r0
 232 0064 0FBE      		out __SREG__,r0
 233 0066 0F90      		pop r0
 234 0068 1F90      		pop r1
 235 006a 1895      		reti
 236               		.cfi_endproc
 237               	.LFE171:
 239               		.section	.text.__vector_12,"ax",@progbits
 240               	.global	__vector_12
 242               	__vector_12:
 243               	.LFB172:
 176:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 177:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER1_COMPB_vect) {
 244               		.loc 1 177 0
 245               		.cfi_startproc
 246 0000 1F92      		push r1
 247               	.LCFI28:
 248               		.cfi_def_cfa_offset 3
 249               		.cfi_offset 1, -2
 250 0002 0F92      		push r0
 251               	.LCFI29:
 252               		.cfi_def_cfa_offset 4
 253               		.cfi_offset 0, -3
 254 0004 0FB6      		in r0,__SREG__
 255 0006 0F92      		push r0
 256 0008 1124      		clr __zero_reg__
 257 000a 2F93      		push r18
 258               	.LCFI30:
 259               		.cfi_def_cfa_offset 5
 260               		.cfi_offset 18, -4
 261 000c 3F93      		push r19
 262               	.LCFI31:
 263               		.cfi_def_cfa_offset 6
 264               		.cfi_offset 19, -5
 265 000e 4F93      		push r20
 266               	.LCFI32:
 267               		.cfi_def_cfa_offset 7
 268               		.cfi_offset 20, -6
 269 0010 5F93      		push r21
 270               	.LCFI33:
 271               		.cfi_def_cfa_offset 8
 272               		.cfi_offset 21, -7
 273 0012 6F93      		push r22
 274               	.LCFI34:
 275               		.cfi_def_cfa_offset 9
 276               		.cfi_offset 22, -8
 277 0014 7F93      		push r23
 278               	.LCFI35:
 279               		.cfi_def_cfa_offset 10
 280               		.cfi_offset 23, -9
 281 0016 8F93      		push r24
 282               	.LCFI36:
 283               		.cfi_def_cfa_offset 11
 284               		.cfi_offset 24, -10
 285 0018 9F93      		push r25
 286               	.LCFI37:
 287               		.cfi_def_cfa_offset 12
 288               		.cfi_offset 25, -11
 289 001a AF93      		push r26
 290               	.LCFI38:
 291               		.cfi_def_cfa_offset 13
 292               		.cfi_offset 26, -12
 293 001c BF93      		push r27
 294               	.LCFI39:
 295               		.cfi_def_cfa_offset 14
 296               		.cfi_offset 27, -13
 297 001e EF93      		push r30
 298               	.LCFI40:
 299               		.cfi_def_cfa_offset 15
 300               		.cfi_offset 30, -14
 301 0020 FF93      		push r31
 302               	.LCFI41:
 303               		.cfi_def_cfa_offset 16
 304               		.cfi_offset 31, -15
 305               	/* prologue: Signal */
 306               	/* frame size = 0 */
 307               	/* stack size = 15 */
 308               	.L__stack_usage = 15
 178:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 179:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 309               		.loc 1 179 0
 310 0022 81E0      		ldi r24,lo8(1)
 311 0024 8093 0000 		sts __avr_in_isr,r24
 180:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD1.config->channels[1].callback(&PWMD1);
 312               		.loc 1 180 0
 313 0028 E091 0000 		lds r30,PWMD1+1
 314 002c F091 0000 		lds r31,PWMD1+1+1
 315 0030 0484      		ldd __tmp_reg__,Z+12
 316 0032 F585      		ldd r31,Z+13
 317 0034 E02D      		mov r30,__tmp_reg__
 318 0036 80E0      		ldi r24,lo8(PWMD1)
 319 0038 90E0      		ldi r25,hi8(PWMD1)
 320 003a 0995      		icall
 321               	.LVL6:
 181:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 322               		.loc 1 181 0
 323 003c 1092 0000 		sts __avr_in_isr,__zero_reg__
 324 0040 0E94 0000 		call chSchIsPreemptionRequired
 325               	.LVL7:
 326 0044 8111      		cpse r24,__zero_reg__
 327               		.loc 1 181 0 is_stmt 0 discriminator 1
 328 0046 0E94 0000 		call chSchDoReschedule
 329               	.LVL8:
 330               	.L12:
 331               	/* epilogue start */
 182:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 332               		.loc 1 182 0 is_stmt 1
 333 004a FF91      		pop r31
 334 004c EF91      		pop r30
 335 004e BF91      		pop r27
 336 0050 AF91      		pop r26
 337 0052 9F91      		pop r25
 338 0054 8F91      		pop r24
 339 0056 7F91      		pop r23
 340 0058 6F91      		pop r22
 341 005a 5F91      		pop r21
 342 005c 4F91      		pop r20
 343 005e 3F91      		pop r19
 344 0060 2F91      		pop r18
 345 0062 0F90      		pop r0
 346 0064 0FBE      		out __SREG__,r0
 347 0066 0F90      		pop r0
 348 0068 1F90      		pop r1
 349 006a 1895      		reti
 350               		.cfi_endproc
 351               	.LFE172:
 353               		.section	.text.pwm_lld_init,"ax",@progbits
 354               	.global	pwm_lld_init
 356               	pwm_lld_init:
 357               	.LFB173:
 183:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if PWM_CHANNELS > 2
 184:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER1_COMPC_vect) {
 185:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 186:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 187:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD1.config->channels[2].callback(&PWMD1);
 188:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 189:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 190:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 191:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 192:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 193:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM2 || defined(__DOXYGEN__)
 194:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER2_OVF_vect) {
 195:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 196:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 197:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD2.config->callback(&PWMD2);
 198:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 199:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 200:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 201:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER2_COMPA_vect) {
 202:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 203:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 204:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD2.config->channels[0].callback(&PWMD2);
 205:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 206:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 207:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 208:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER2_COMPB_vect) {
 209:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 210:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 211:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD2.config->channels[1].callback(&PWMD2);
 212:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 213:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 214:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 215:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 216:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM3 || defined(__DOXYGEN__)
 217:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER3_OVF_vect) {
 218:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 219:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 220:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD3.config->callback(&PWMD3);
 221:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 222:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 223:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 224:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER3_COMPA_vect) {
 225:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 226:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 227:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD3.config->channels[0].callback(&PWMD3);
 228:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 229:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 230:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 231:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER3_COMPB_vect) {
 232:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 233:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 234:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD3.config->channels[1].callback(&PWMD3);
 235:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 236:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 237:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 238:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER3_COMPC_vect) {
 239:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 240:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 241:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD3.config->channels[2].callback(&PWMD3);
 242:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 243:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 244:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 245:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 246:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM4 || defined(__DOXYGEN__)
 247:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER4_OVF_vect) {
 248:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 249:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 250:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD4.config->callback(&PWMD4);
 251:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 252:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 253:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 254:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER4_COMPA_vect) {
 255:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 256:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 257:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD4.config->channels[0].callback(&PWMD4);
 258:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 259:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 260:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 261:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER4_COMPB_vect) {
 262:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 263:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 264:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD4.config->channels[1].callback(&PWMD4);
 265:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 266:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 267:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 268:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER4_COMPC_vect) {
 269:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 270:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 271:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD4.config->channels[2].callback(&PWMD4);
 272:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 273:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 274:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 275:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 276:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM5 || defined(__DOXYGEN__)
 277:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER5_OVF_vect) {
 278:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 279:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 280:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD5.config->callback(&PWMD5);
 281:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 282:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 283:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 284:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER5_COMPA_vect) {
 285:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 286:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 287:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD5.config->channels[0].callback(&PWMD5);
 288:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 289:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 290:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 291:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER5_COMPB_vect) {
 292:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 293:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 294:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD5.config->channels[1].callback(&PWMD5);
 295:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 296:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 297:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 298:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** OSAL_IRQ_HANDLER(TIMER5_COMPC_vect) {
 299:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 300:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_PROLOGUE();
 301:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD5.config->channels[2].callback(&PWMD5);
 302:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   OSAL_IRQ_EPILOGUE();
 303:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 304:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 305:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 306:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /*==========================================================================*/
 307:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /* Driver exported functions.                                               */
 308:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /*==========================================================================*/
 309:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 310:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /**
 311:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @brief   Low level PWM driver initialization.
 312:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 313:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @notapi
 314:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  */
 315:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** void pwm_lld_init(void) {
 358               		.loc 1 315 0
 359               		.cfi_startproc
 360               	/* prologue: function */
 361               	/* frame size = 0 */
 362               	/* stack size = 0 */
 363               	.L__stack_usage = 0
 316:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 317:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM1 || defined(__DOXYGEN__)
 318:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   pwmObjectInit(&PWMD1);
 364               		.loc 1 318 0
 365 0000 80E0      		ldi r24,lo8(PWMD1)
 366 0002 90E0      		ldi r25,hi8(PWMD1)
 367 0004 0E94 0000 		call pwmObjectInit
 368               	.LVL9:
 319:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD1.channels = PWM_CHANNELS;
 369               		.loc 1 319 0
 370 0008 82E0      		ldi r24,lo8(2)
 371 000a 8093 0000 		sts PWMD1+6,r24
 372 000e 0895      		ret
 373               		.cfi_endproc
 374               	.LFE173:
 376               		.section	.rodata
 377               	.LC0:
 378 0000 00        		.byte	0
 379 0001 03        		.byte	3
 380 0002 06        		.byte	6
 381 0003 08        		.byte	8
 382 0004 0A        		.byte	10
 383               		.section	.text.pwm_lld_start,"ax",@progbits
 384               	.global	pwm_lld_start
 386               	pwm_lld_start:
 387               	.LFB174:
 320:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 321:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 322:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM2 || defined(__DOXYGEN__)
 323:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   pwmObjectInit(&PWMD2);
 324:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD2.channels = PWM_CHANNELS;
 325:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 326:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 327:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM3 || defined(__DOXYGEN__)
 328:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   pwmObjectInit(&PWMD3);
 329:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD3.channels = PWM_CHANNELS;
 330:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 331:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 332:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM4 || defined(__DOXYGEN__)
 333:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   pwmObjectInit(&PWMD4);
 334:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD4.channels = PWM_CHANNELS;
 335:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 336:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 337:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM5 || defined(__DOXYGEN__)
 338:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   pwmObjectInit(&PWMD5);
 339:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   PWMD5.channels = PWM_CHANNELS;
 340:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 341:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 342:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 343:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /**
 344:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @brief   Configures and activates the PWM peripheral.
 345:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @note    We do not use the period value in Timer2 in order to
 346:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *          be able to use both PWM channels.
 347:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 348:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @param[in] pwmp      pointer to the @p PWMDriver object
 349:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 350:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @notapi
 351:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  */
 352:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** void pwm_lld_start(PWMDriver *pwmp) {
 388               		.loc 1 352 0
 389               		.cfi_startproc
 390               	.LVL10:
 391 0000 8F92      		push r8
 392               	.LCFI42:
 393               		.cfi_def_cfa_offset 3
 394               		.cfi_offset 8, -2
 395 0002 9F92      		push r9
 396               	.LCFI43:
 397               		.cfi_def_cfa_offset 4
 398               		.cfi_offset 9, -3
 399 0004 AF92      		push r10
 400               	.LCFI44:
 401               		.cfi_def_cfa_offset 5
 402               		.cfi_offset 10, -4
 403 0006 BF92      		push r11
 404               	.LCFI45:
 405               		.cfi_def_cfa_offset 6
 406               		.cfi_offset 11, -5
 407 0008 CF92      		push r12
 408               	.LCFI46:
 409               		.cfi_def_cfa_offset 7
 410               		.cfi_offset 12, -6
 411 000a DF92      		push r13
 412               	.LCFI47:
 413               		.cfi_def_cfa_offset 8
 414               		.cfi_offset 13, -7
 415 000c EF92      		push r14
 416               	.LCFI48:
 417               		.cfi_def_cfa_offset 9
 418               		.cfi_offset 14, -8
 419 000e FF92      		push r15
 420               	.LCFI49:
 421               		.cfi_def_cfa_offset 10
 422               		.cfi_offset 15, -9
 423 0010 CF93      		push r28
 424               	.LCFI50:
 425               		.cfi_def_cfa_offset 11
 426               		.cfi_offset 28, -10
 427 0012 DF93      		push r29
 428               	.LCFI51:
 429               		.cfi_def_cfa_offset 12
 430               		.cfi_offset 29, -11
 431 0014 00D0      		rcall .
 432 0016 00D0      		rcall .
 433 0018 1F92      		push __zero_reg__
 434               	.LCFI52:
 435               		.cfi_def_cfa_offset 17
 436 001a CDB7      		in r28,__SP_L__
 437 001c DEB7      		in r29,__SP_H__
 438               	.LCFI53:
 439               		.cfi_def_cfa_register 28
 440               	/* prologue: function */
 441               	/* frame size = 5 */
 442               	/* stack size = 15 */
 443               	.L__stack_usage = 15
 444 001e 9C01      		movw r18,r24
 353:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 354:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (pwmp->state == PWM_STOP) {
 445               		.loc 1 354 0
 446 0020 DC01      		movw r26,r24
 447 0022 8C91      		ld r24,X
 448               	.LVL11:
 449 0024 8130      		cpi r24,lo8(1)
 450 0026 01F0      		breq .L29
 451               	.L18:
 452               	/* epilogue start */
 355:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     uint8_t cs_value, wgm_value;
 356:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 357:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM2 || defined(__DOXYGEN__)
 358:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     if (pwmp == &PWMD2) {
 359:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       /* For now only fast pwm is supported. */
 360:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       wgm_value = 0x3;
 361:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       cs_value = 1;
 362:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 363:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       /* Period is fixed for timer2. */
 364:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       PWMD2.period = 0xFF;
 365:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 366:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       /* A prescaler value can only be a suitable power of 2 (1, 8, 32,
 367:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****          64, 128 256 or 1024), so we choose the one that makes F_CPU
 368:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****          divided by it equal to the given frequency (fallback value is
 369:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****          1, to keep compatibility with old code. */
 370:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       const uint8_t log_ratio_timer2[] = {0, 3, 5, 6, 7, 8, 10};
 371:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       uint8_t n;
 372:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       for (n=0; n<sizeof(log_ratio_timer2)/sizeof(uint8_t); n++) {
 373:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****         if (pwmp->config->frequency == (F_CPU >> log_ratio_timer2[n])) {
 374:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****               cs_value = n + 1;
 375:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****               break;
 376:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****             }
 377:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       }
 378:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 379:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       TCCR2A = (wgm_value & 0x3) << TIM1_WGM_OFFSET1;
 380:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       TCCR2B = ((cs_value << TIM1_CS_OFFSET) |
 381:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                 ((wgm_value >> 2) << TIM1_WGM_OFFSET2));
 382:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       if (pwmp->config->callback != NULL)
 383:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****         TIMSK2 |= (1 << TOIE2);
 384:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       return;
 385:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     }
 386:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 387:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 388:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     /* For now only fast pwm is supported. */
 389:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     wgm_value = 0xE;
 390:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     cs_value = 0x5;
 391:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 392:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     /* A prescaler value can only be a suitable power of 2 (1, 8, 64,
 393:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****        256 or 1024), so we choose the one that makes F_CPU divided by
 394:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****        it equal to the given frequency (fallback value is 1024, to
 395:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****        keep compatibility with old code. */
 396:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     const uint8_t log_ratio_timer1[] = {0, 3, 6, 8, 10};
 397:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     uint8_t n;
 398:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     for (n=0; n<sizeof(log_ratio_timer1)/sizeof(uint8_t); n++) {
 399:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       if (pwmp->config->frequency == (F_CPU >> log_ratio_timer1[n])) {
 400:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****         cs_value = n + 1;
 401:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****         break;
 402:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       }
 403:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     }
 404:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 405:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     uint8_t i = timer_index(pwmp);
 406:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 407:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     *regs_table[i].icr = pwmp->period;
 408:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     *regs_table[i].tccra = (wgm_value & 0x3) << TIM1_WGM_OFFSET1;
 409:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     *regs_table[i].tccrb = ((cs_value << TIM1_CS_OFFSET) |
 410:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                             ((wgm_value >> 2) << TIM1_WGM_OFFSET2));
 411:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     if (pwmp->config->callback != NULL)
 412:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       *regs_table[i].timsk = (1 << TOIE1);
 413:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   }
 414:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 453               		.loc 1 414 0
 454 0028 0F90      		pop __tmp_reg__
 455 002a 0F90      		pop __tmp_reg__
 456 002c 0F90      		pop __tmp_reg__
 457 002e 0F90      		pop __tmp_reg__
 458 0030 0F90      		pop __tmp_reg__
 459 0032 DF91      		pop r29
 460 0034 CF91      		pop r28
 461 0036 FF90      		pop r15
 462 0038 EF90      		pop r14
 463 003a DF90      		pop r13
 464 003c CF90      		pop r12
 465 003e BF90      		pop r11
 466 0040 AF90      		pop r10
 467 0042 9F90      		pop r9
 468 0044 8F90      		pop r8
 469 0046 0895      		ret
 470               	.L29:
 471               	.LVL12:
 472               	.LBB25:
 396:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     uint8_t n;
 473               		.loc 1 396 0
 474 0048 85E0      		ldi r24,lo8(5)
 475 004a E0E0      		ldi r30,lo8(.LC0)
 476 004c F0E0      		ldi r31,hi8(.LC0)
 477 004e DE01      		movw r26,r28
 478 0050 1196      		adiw r26,1
 479               		0:
 480 0052 0190      		ld r0,Z+
 481 0054 0D92      		st X+,r0
 482 0056 8A95      		dec r24
 483 0058 01F4      		brne 0b
 484               	.LVL13:
 485 005a D901      		movw r26,r18
 486 005c 1196      		adiw r26,1
 487 005e ED91      		ld r30,X+
 488 0060 FC91      		ld r31,X
 489 0062 1297      		sbiw r26,1+1
 490 0064 8080      		ld r8,Z
 491 0066 9180      		ldd r9,Z+1
 492 0068 A280      		ldd r10,Z+2
 493 006a B380      		ldd r11,Z+3
 494 006c FE01      		movw r30,r28
 495 006e 3196      		adiw r30,1
 398:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       if (pwmp->config->frequency == (F_CPU >> log_ratio_timer1[n])) {
 496               		.loc 1 398 0
 497 0070 90E0      		ldi r25,0
 399:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****         cs_value = n + 1;
 498               		.loc 1 399 0
 499 0072 C12C      		mov r12,__zero_reg__
 500 0074 84E2      		ldi r24,lo8(36)
 501 0076 D82E      		mov r13,r24
 502 0078 84EF      		ldi r24,lo8(-12)
 503 007a E82E      		mov r14,r24
 504 007c F12C      		mov r15,__zero_reg__
 505               	.LVL14:
 506               	.L22:
 507 007e B701      		movw r22,r14
 508 0080 A601      		movw r20,r12
 509 0082 0190      		ld r0,Z+
 510 0084 00C0      		rjmp 2f
 511               		1:
 512 0086 7695      		lsr r23
 513 0088 6795      		ror r22
 514 008a 5795      		ror r21
 515 008c 4795      		ror r20
 516               		2:
 517 008e 0A94      		dec r0
 518 0090 02F4      		brpl 1b
 400:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****         break;
 519               		.loc 1 400 0
 520 0092 9F5F      		subi r25,lo8(-(1))
 521               	.LVL15:
 399:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****         cs_value = n + 1;
 522               		.loc 1 399 0
 523 0094 4815      		cp r20,r8
 524 0096 5905      		cpc r21,r9
 525 0098 6A05      		cpc r22,r10
 526 009a 7B05      		cpc r23,r11
 527 009c 01F0      		breq .L30
 528               	.LVL16:
 398:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       if (pwmp->config->frequency == (F_CPU >> log_ratio_timer1[n])) {
 529               		.loc 1 398 0 discriminator 2
 530 009e 9530      		cpi r25,lo8(5)
 531 00a0 01F4      		brne .L22
 532 00a2 9DE1      		ldi r25,lo8(29)
 533               	.LVL17:
 534               	.L21:
 535               	.LBB26:
 536               	.LBB27:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 537               		.loc 1 131 0
 538 00a4 41E0      		ldi r20,lo8(1)
 539 00a6 50E0      		ldi r21,0
 540 00a8 B0E0      		ldi r27,hi8(PWMD1)
 541 00aa 2030      		cpi r18,lo8(PWMD1)
 542 00ac 3B07      		cpc r19,r27
 543 00ae 01F0      		breq .L31
 544               	.L23:
 545               	.LBE27:
 546               	.LBE26:
 407:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     *regs_table[i].tccra = (wgm_value & 0x3) << TIM1_WGM_OFFSET1;
 547               		.loc 1 407 0
 548 00b0 F901      		movw r30,r18
 549 00b2 6381      		ldd r22,Z+3
 550 00b4 7481      		ldd r23,Z+4
 551 00b6 7093 8700 		sts 134+1,r23
 552 00ba 6093 8600 		sts 134,r22
 408:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     *regs_table[i].tccrb = ((cs_value << TIM1_CS_OFFSET) |
 553               		.loc 1 408 0
 554 00be 86E1      		ldi r24,lo8(22)
 555 00c0 849F      		mul r24,r20
 556 00c2 F001      		movw r30,r0
 557 00c4 859F      		mul r24,r21
 558 00c6 F00D      		add r31,r0
 559 00c8 1124      		clr __zero_reg__
 560 00ca E050      		subi r30,lo8(-(regs_table))
 561 00cc F040      		sbci r31,hi8(-(regs_table))
 562 00ce A081      		ld r26,Z
 563 00d0 B181      		ldd r27,Z+1
 564 00d2 82E0      		ldi r24,lo8(2)
 565 00d4 8C93      		st X,r24
 409:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                             ((wgm_value >> 2) << TIM1_WGM_OFFSET2));
 566               		.loc 1 409 0
 567 00d6 A281      		ldd r26,Z+2
 568 00d8 B381      		ldd r27,Z+3
 569 00da 9C93      		st X,r25
 411:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       *regs_table[i].timsk = (1 << TOIE1);
 570               		.loc 1 411 0
 571 00dc D901      		movw r26,r18
 572 00de 1196      		adiw r26,1
 573 00e0 8D91      		ld r24,X+
 574 00e2 9C91      		ld r25,X
 575 00e4 1297      		sbiw r26,1+1
 576 00e6 DC01      		movw r26,r24
 577 00e8 1696      		adiw r26,6
 578 00ea 8D91      		ld r24,X+
 579 00ec 9C91      		ld r25,X
 580 00ee 1797      		sbiw r26,6+1
 581 00f0 892B      		or r24,r25
 582 00f2 01F4      		brne .+2
 583 00f4 00C0      		rjmp .L18
 412:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   }
 584               		.loc 1 412 0
 585 00f6 0288      		ldd __tmp_reg__,Z+18
 586 00f8 F389      		ldd r31,Z+19
 587 00fa E02D      		mov r30,__tmp_reg__
 588 00fc 81E0      		ldi r24,lo8(1)
 589 00fe 8083      		st Z,r24
 590 0100 00C0      		rjmp .L18
 591               	.LVL18:
 592               	.L30:
 593 0102 9861      		ori r25,lo8(24)
 594               	.LVL19:
 401:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       }
 595               		.loc 1 401 0
 596 0104 00C0      		rjmp .L21
 597               	.LVL20:
 598               	.L31:
 599               	.LBB29:
 600               	.LBB28:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 601               		.loc 1 131 0
 602 0106 40E0      		ldi r20,0
 603 0108 50E0      		ldi r21,0
 604 010a 00C0      		rjmp .L23
 605               	.LBE28:
 606               	.LBE29:
 607               	.LBE25:
 608               		.cfi_endproc
 609               	.LFE174:
 611               		.section	.text.pwm_lld_stop,"ax",@progbits
 612               	.global	pwm_lld_stop
 614               	pwm_lld_stop:
 615               	.LFB175:
 415:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 416:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /**
 417:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @brief   Deactivates the PWM peripheral.
 418:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 419:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @param[in] pwmp      pointer to the @p PWMDriver object
 420:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 421:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @notapi
 422:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  */
 423:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** void pwm_lld_stop(PWMDriver *pwmp) {
 616               		.loc 1 423 0
 617               		.cfi_startproc
 618               	.LVL21:
 619               	/* prologue: function */
 620               	/* frame size = 0 */
 621               	/* stack size = 0 */
 622               	.L__stack_usage = 0
 623               	.LBB30:
 624               	.LBB31:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 625               		.loc 1 131 0
 626 0000 21E0      		ldi r18,lo8(1)
 627 0002 30E0      		ldi r19,0
 628 0004 8050      		subi r24,lo8(PWMD1)
 629 0006 9040      		sbci r25,hi8(PWMD1)
 630 0008 01F0      		breq .L34
 631               	.L33:
 632               	.LBE31:
 633               	.LBE30:
 424:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 425:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM2 || defined(__DOXYGEN__)
 426:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (pwmp == &PWMD2) {
 427:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     TCCR2A = 0;
 428:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     TCCR2B = 0;
 429:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     TIMSK2 = 0;
 430:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     return;
 431:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   }
 432:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 433:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   uint8_t i = timer_index(pwmp);
 434:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   *regs_table[i].tccra = 0;
 634               		.loc 1 434 0
 635 000a 86E1      		ldi r24,lo8(22)
 636               	.LVL22:
 637 000c 829F      		mul r24,r18
 638 000e F001      		movw r30,r0
 639 0010 839F      		mul r24,r19
 640 0012 F00D      		add r31,r0
 641 0014 1124      		clr __zero_reg__
 642 0016 E050      		subi r30,lo8(-(regs_table))
 643 0018 F040      		sbci r31,hi8(-(regs_table))
 644 001a A081      		ld r26,Z
 645 001c B181      		ldd r27,Z+1
 646 001e 1C92      		st X,__zero_reg__
 435:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   *regs_table[i].tccrb = 0;
 647               		.loc 1 435 0
 648 0020 A281      		ldd r26,Z+2
 649 0022 B381      		ldd r27,Z+3
 650 0024 1C92      		st X,__zero_reg__
 436:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   *regs_table[i].timsk = 0;
 651               		.loc 1 436 0
 652 0026 0288      		ldd __tmp_reg__,Z+18
 653 0028 F389      		ldd r31,Z+19
 654 002a E02D      		mov r30,__tmp_reg__
 655 002c 1082      		st Z,__zero_reg__
 656 002e 0895      		ret
 657               	.LVL23:
 658               	.L34:
 659               	.LBB33:
 660               	.LBB32:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 661               		.loc 1 131 0
 662 0030 20E0      		ldi r18,0
 663 0032 30E0      		ldi r19,0
 664 0034 00C0      		rjmp .L33
 665               	.LBE32:
 666               	.LBE33:
 667               		.cfi_endproc
 668               	.LFE175:
 670               		.section	.text.pwm_lld_change_period,"ax",@progbits
 671               	.global	pwm_lld_change_period
 673               	pwm_lld_change_period:
 674               	.LFB176:
 437:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 438:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 439:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /**
 440:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @brief   Changes the period the PWM peripheral.
 441:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @details This function changes the period of a PWM unit that has already
 442:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *          been activated using @p pwmStart().
 443:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 444:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @post    The PWM unit period is changed to the new value.
 445:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @note    The function has effect at the next cycle start.
 446:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @note    If a period is specified that is shorter than the pulse width
 447:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *          programmed in one of the channels then the behavior is not
 448:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *          guaranteed.
 449:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 450:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 451:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @param[in] period    new cycle time in ticks
 452:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 453:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @notapi
 454:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  */
 455:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** void pwm_lld_change_period(PWMDriver *pwmp, pwmcnt_t period) {
 675               		.loc 1 455 0
 676               		.cfi_startproc
 677               	.LVL24:
 678               	/* prologue: function */
 679               	/* frame size = 0 */
 680               	/* stack size = 0 */
 681               	.L__stack_usage = 0
 456:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 457:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM2 || defined(__DOXYGEN__)
 458:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   /* Can't change period in timer2. */
 459:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (pwmp == &PWMD2) {
 460:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     PWMD2.period = 0xFF;
 461:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     return;
 462:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   }
 463:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 464:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   uint8_t i = timer_index(pwmp);
 465:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   *regs_table[i].icr = period;
 682               		.loc 1 465 0
 683 0000 7093 8700 		sts 134+1,r23
 684 0004 6093 8600 		sts 134,r22
 685 0008 0895      		ret
 686               		.cfi_endproc
 687               	.LFE176:
 689               		.section	.text.pwm_lld_enable_channel,"ax",@progbits
 690               	.global	pwm_lld_enable_channel
 692               	pwm_lld_enable_channel:
 693               	.LFB177:
 466:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 467:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 468:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /**
 469:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @brief   Enables a PWM channel.
 470:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 471:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @post    The channel is active using the specified configuration.
 472:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @note    Depending on the hardware implementation this function has
 473:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *          effect starting on the next cycle (recommended implementation)
 474:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *          or immediately (fallback implementation).
 475:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 476:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 477:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @param[in] channel   PWM channel identifier (0...PWM_CHANNELS-1)
 478:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @param[in] width     PWM pulse width as clock pulses number
 479:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 480:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @notapi
 481:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  */
 482:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** void pwm_lld_enable_channel(PWMDriver *pwmp,
 483:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                             pwmchannel_t channel,
 484:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                             pwmcnt_t width) {
 694               		.loc 1 484 0
 695               		.cfi_startproc
 696               	.LVL25:
 697 0000 AF92      		push r10
 698               	.LCFI54:
 699               		.cfi_def_cfa_offset 3
 700               		.cfi_offset 10, -2
 701 0002 BF92      		push r11
 702               	.LCFI55:
 703               		.cfi_def_cfa_offset 4
 704               		.cfi_offset 11, -3
 705 0004 CF92      		push r12
 706               	.LCFI56:
 707               		.cfi_def_cfa_offset 5
 708               		.cfi_offset 12, -4
 709 0006 DF92      		push r13
 710               	.LCFI57:
 711               		.cfi_def_cfa_offset 6
 712               		.cfi_offset 13, -5
 713 0008 EF92      		push r14
 714               	.LCFI58:
 715               		.cfi_def_cfa_offset 7
 716               		.cfi_offset 14, -6
 717 000a FF92      		push r15
 718               	.LCFI59:
 719               		.cfi_def_cfa_offset 8
 720               		.cfi_offset 15, -7
 721 000c 0F93      		push r16
 722               	.LCFI60:
 723               		.cfi_def_cfa_offset 9
 724               		.cfi_offset 16, -8
 725 000e 1F93      		push r17
 726               	.LCFI61:
 727               		.cfi_def_cfa_offset 10
 728               		.cfi_offset 17, -9
 729 0010 CF93      		push r28
 730               	.LCFI62:
 731               		.cfi_def_cfa_offset 11
 732               		.cfi_offset 28, -10
 733 0012 DF93      		push r29
 734               	.LCFI63:
 735               		.cfi_def_cfa_offset 12
 736               		.cfi_offset 29, -11
 737               	/* prologue: function */
 738               	/* frame size = 0 */
 739               	/* stack size = 10 */
 740               	.L__stack_usage = 10
 741 0014 EC01      		movw r28,r24
 742               	.LVL26:
 485:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 486:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   uint16_t val = width;
 487:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 488:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #if AVR_PWM_USE_TIM2 || defined(__DOXYGEN__)
 489:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (pwmp == &PWMD2) {
 490:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     config_channel(&TCCR2A,
 491:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                    7 - 2*channel,
 492:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                    6 - 2*channel,
 493:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                    pwmp->config->channels[channel].mode);
 494:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     /* Timer 2 is 8 bit. */
 495:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     if (val > 0xFF)
 496:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       val = 0xFF;
 497:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     switch (channel) {
 498:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     case 0: OCR2A = val; break;
 499:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     case 1: OCR2B = val; break;
 500:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     }
 501:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     TIFR2 = 1 << (OCF2A + channel);
 502:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     if (pwmp->config->channels[channel].callback)
 503:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****       TIMSK2 |= (1 << (OCIE2A + channel));
 504:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     return;
 505:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   }
 506:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** #endif
 507:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 508:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   uint8_t i = timer_index(pwmp);
 509:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   config_channel(regs_table[i].tccra,
 743               		.loc 1 509 0
 744 0016 262F      		mov r18,r22
 745 0018 30E0      		ldi r19,0
 746 001a A981      		ldd r26,Y+1
 747 001c BA81      		ldd r27,Y+2
 748 001e F901      		movw r30,r18
 749 0020 EE0F      		lsl r30
 750 0022 FF1F      		rol r31
 751 0024 CF01      		movw r24,r30
 752               	.LVL27:
 753 0026 820F      		add r24,r18
 754 0028 931F      		adc r25,r19
 755 002a A80F      		add r26,r24
 756 002c B91F      		adc r27,r25
 757 002e 1896      		adiw r26,8
 758 0030 7C91      		ld r23,X
 759               	.LBB34:
 760               	.LBB35:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 761               		.loc 1 131 0
 762 0032 01E0      		ldi r16,lo8(1)
 763 0034 10E0      		ldi r17,0
 764 0036 80E0      		ldi r24,hi8(PWMD1)
 765 0038 C030      		cpi r28,lo8(PWMD1)
 766 003a D807      		cpc r29,r24
 767 003c 01F4      		brne .+2
 768 003e 00C0      		rjmp .L50
 769               	.L37:
 770               	.LBE35:
 771               	.LBE34:
 772               		.loc 1 509 0
 773 0040 86E1      		ldi r24,lo8(22)
 774 0042 809F      		mul r24,r16
 775 0044 D001      		movw r26,r0
 776 0046 819F      		mul r24,r17
 777 0048 B00D      		add r27,r0
 778 004a 1124      		clr __zero_reg__
 779 004c A050      		subi r26,lo8(-(regs_table))
 780 004e B040      		sbci r27,hi8(-(regs_table))
 781 0050 ED90      		ld r14,X+
 782 0052 FC90      		ld r15,X
 783               	.LVL28:
 784               	.LBB37:
 785               	.LBB38:
 119:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (mode == PWM_OUTPUT_ACTIVE_HIGH)
 786               		.loc 1 119 0
 787 0054 D701      		movw r26,r14
 788 0056 8C91      		ld r24,X
 789               	.LBE38:
 790               	.LBE37:
 791               		.loc 1 509 0
 792 0058 962F      		mov r25,r22
 793 005a 9195      		neg r25
 794 005c 990F      		lsl r25
 795 005e 995F      		subi r25,lo8(-(7))
 796               	.LBB42:
 797               	.LBB39:
 119:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (mode == PWM_OUTPUT_ACTIVE_HIGH)
 798               		.loc 1 119 0
 799 0060 A1E0      		ldi r26,lo8(1)
 800 0062 B0E0      		ldi r27,0
 801 0064 6D01      		movw r12,r26
 802 0066 00C0      		rjmp 2f
 803               		1:
 804 0068 CC0C      		lsl r12
 805               		2:
 806 006a 9A95      		dec r25
 807 006c 02F4      		brpl 1b
 808               	.LBE39:
 809               	.LBE42:
 510:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                  7 - 2*channel,
 511:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                  6 - 2*channel,
 810               		.loc 1 511 0
 811 006e 93E0      		ldi r25,lo8(3)
 812 0070 A92E      		mov r10,r25
 813 0072 B12C      		mov r11,__zero_reg__
 814 0074 A21A      		sub r10,r18
 815 0076 B30A      		sbc r11,r19
 509:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                  7 - 2*channel,
 816               		.loc 1 509 0
 817 0078 AA0C      		lsl r10
 818               	.LBB43:
 819               	.LBB40:
 119:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (mode == PWM_OUTPUT_ACTIVE_HIGH)
 820               		.loc 1 119 0
 821 007a 00C0      		rjmp 2f
 822               		1:
 823 007c AA0F      		lsl r26
 824               		2:
 825 007e AA94      		dec r10
 826 0080 02F4      		brpl 1b
 827 0082 BA2E      		mov r11,r26
 828 0084 BC28      		or r11,r12
 829 0086 9B2D      		mov r25,r11
 830 0088 9095      		com r25
 831 008a 8923      		and r24,r25
 832 008c D701      		movw r26,r14
 833 008e 8C93      		st X,r24
 120:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     *tccra |= ((1 << com1) | (0 << com0)); /* Non inverting mode. */
 834               		.loc 1 120 0
 835 0090 7130      		cpi r23,lo8(1)
 836 0092 01F4      		brne .+2
 837 0094 00C0      		rjmp .L51
 122:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     *tccra |= (1 << com1) | (1 << com0);   /* Inverting mode.     */
 838               		.loc 1 122 0
 839 0096 7230      		cpi r23,lo8(2)
 840 0098 01F4      		brne .+2
 841 009a 00C0      		rjmp .L52
 842               	.L39:
 843               	.LBE40:
 844               	.LBE43:
 512:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                  pwmp->config->channels[channel].mode);
 513:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   volatile uint8_t *ocrh, *ocrl;
 514:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   switch (channel) {
 845               		.loc 1 514 0
 846 009c 6130      		cpi r22,lo8(1)
 847 009e 01F4      		brne .+2
 848 00a0 00C0      		rjmp .L41
 849 00a2 6230      		cpi r22,lo8(2)
 850 00a4 01F4      		brne .+2
 851 00a6 00C0      		rjmp .L42
 515:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   case 1:
 516:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     ocrh = regs_table[i].ocrbh;
 517:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     ocrl = regs_table[i].ocrbl;
 518:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     break;
 519:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   case 2:
 520:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     ocrh = regs_table[i].ocrch;
 521:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     ocrl = regs_table[i].ocrcl;
 522:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     break;
 523:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   default:
 524:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     ocrh = regs_table[i].ocrah;
 852               		.loc 1 524 0
 853 00a8 86E1      		ldi r24,lo8(22)
 854 00aa 809F      		mul r24,r16
 855 00ac D001      		movw r26,r0
 856 00ae 819F      		mul r24,r17
 857 00b0 B00D      		add r27,r0
 858 00b2 1124      		clr __zero_reg__
 859 00b4 A050      		subi r26,lo8(-(regs_table))
 860 00b6 B040      		sbci r27,hi8(-(regs_table))
 861 00b8 1496      		adiw r26,4
 862 00ba 8D91      		ld r24,X+
 863 00bc 9C91      		ld r25,X
 864 00be 1597      		sbiw r26,4+1
 865               	.LVL29:
 525:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     ocrl = regs_table[i].ocral;
 866               		.loc 1 525 0
 867 00c0 1696      		adiw r26,6
 868 00c2 6D91      		ld r22,X+
 869 00c4 7C91      		ld r23,X
 870 00c6 1797      		sbiw r26,6+1
 871               	.LVL30:
 872               	.L43:
 526:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   }
 527:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   *ocrh = val >> 8;
 873               		.loc 1 527 0
 874 00c8 DC01      		movw r26,r24
 875 00ca 5C93      		st X,r21
 528:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   *ocrl = val & 0xFF;
 876               		.loc 1 528 0
 877 00cc DB01      		movw r26,r22
 878 00ce 4C93      		st X,r20
 529:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   *regs_table[i].tifr = (1 << (channel + 1));
 879               		.loc 1 529 0
 880 00d0 86E1      		ldi r24,lo8(22)
 881               	.LVL31:
 882 00d2 809F      		mul r24,r16
 883 00d4 D001      		movw r26,r0
 884 00d6 819F      		mul r24,r17
 885 00d8 B00D      		add r27,r0
 886 00da 1124      		clr __zero_reg__
 887 00dc 8D01      		movw r16,r26
 888 00de 0050      		subi r16,lo8(-(regs_table))
 889 00e0 1040      		sbci r17,hi8(-(regs_table))
 890 00e2 D801      		movw r26,r16
 891 00e4 5096      		adiw r26,16
 892 00e6 8D91      		ld r24,X+
 893 00e8 9C91      		ld r25,X
 894 00ea 5197      		sbiw r26,16+1
 895 00ec B901      		movw r22,r18
 896               	.LVL32:
 897 00ee 6F5F      		subi r22,-1
 898 00f0 7F4F      		sbci r23,-1
 899 00f2 41E0      		ldi r20,lo8(1)
 900 00f4 50E0      		ldi r21,0
 901               	.LVL33:
 902 00f6 00C0      		rjmp 2f
 903               		1:
 904 00f8 440F      		lsl r20
 905               		2:
 906 00fa 6A95      		dec r22
 907 00fc 02F4      		brpl 1b
 908 00fe DC01      		movw r26,r24
 909 0100 4C93      		st X,r20
 530:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (pwmp->config->channels[channel].callback != NULL)
 910               		.loc 1 530 0
 911 0102 8981      		ldd r24,Y+1
 912 0104 9A81      		ldd r25,Y+2
 913 0106 2E0F      		add r18,r30
 914 0108 3F1F      		adc r19,r31
 915               	.LVL34:
 916 010a FC01      		movw r30,r24
 917 010c E20F      		add r30,r18
 918 010e F31F      		adc r31,r19
 919 0110 8185      		ldd r24,Z+9
 920 0112 9285      		ldd r25,Z+10
 921 0114 892B      		or r24,r25
 922 0116 01F0      		breq .L36
 531:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     *regs_table[i].timsk |= (1 << (channel + 1));
 923               		.loc 1 531 0
 924 0118 D801      		movw r26,r16
 925 011a 5296      		adiw r26,18
 926 011c ED91      		ld r30,X+
 927 011e FC91      		ld r31,X
 928 0120 5397      		sbiw r26,18+1
 929 0122 8081      		ld r24,Z
 930 0124 482B      		or r20,r24
 931 0126 4083      		st Z,r20
 932               	.L36:
 933               	/* epilogue start */
 532:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 934               		.loc 1 532 0
 935 0128 DF91      		pop r29
 936 012a CF91      		pop r28
 937               	.LVL35:
 938 012c 1F91      		pop r17
 939 012e 0F91      		pop r16
 940 0130 FF90      		pop r15
 941 0132 EF90      		pop r14
 942               	.LVL36:
 943 0134 DF90      		pop r13
 944 0136 CF90      		pop r12
 945 0138 BF90      		pop r11
 946 013a AF90      		pop r10
 947 013c 0895      		ret
 948               	.LVL37:
 949               	.L42:
 520:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     ocrl = regs_table[i].ocrcl;
 950               		.loc 1 520 0
 951 013e 86E1      		ldi r24,lo8(22)
 952 0140 809F      		mul r24,r16
 953 0142 D001      		movw r26,r0
 954 0144 819F      		mul r24,r17
 955 0146 B00D      		add r27,r0
 956 0148 1124      		clr __zero_reg__
 957 014a A050      		subi r26,lo8(-(regs_table))
 958 014c B040      		sbci r27,hi8(-(regs_table))
 959 014e 1C96      		adiw r26,12
 960 0150 8D91      		ld r24,X+
 961 0152 9C91      		ld r25,X
 962 0154 1D97      		sbiw r26,12+1
 963               	.LVL38:
 521:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     break;
 964               		.loc 1 521 0
 965 0156 1E96      		adiw r26,14
 966 0158 6D91      		ld r22,X+
 967 015a 7C91      		ld r23,X
 968 015c 1F97      		sbiw r26,14+1
 969               	.LVL39:
 522:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   default:
 970               		.loc 1 522 0
 971 015e 00C0      		rjmp .L43
 972               	.LVL40:
 973               	.L41:
 516:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     ocrl = regs_table[i].ocrbl;
 974               		.loc 1 516 0
 975 0160 86E1      		ldi r24,lo8(22)
 976 0162 809F      		mul r24,r16
 977 0164 D001      		movw r26,r0
 978 0166 819F      		mul r24,r17
 979 0168 B00D      		add r27,r0
 980 016a 1124      		clr __zero_reg__
 981 016c A050      		subi r26,lo8(-(regs_table))
 982 016e B040      		sbci r27,hi8(-(regs_table))
 983 0170 1896      		adiw r26,8
 984 0172 8D91      		ld r24,X+
 985 0174 9C91      		ld r25,X
 986 0176 1997      		sbiw r26,8+1
 987               	.LVL41:
 517:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****     break;
 988               		.loc 1 517 0
 989 0178 1A96      		adiw r26,10
 990 017a 6D91      		ld r22,X+
 991 017c 7C91      		ld r23,X
 992 017e 1B97      		sbiw r26,10+1
 993               	.LVL42:
 518:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   case 2:
 994               		.loc 1 518 0
 995 0180 00C0      		rjmp .L43
 996               	.LVL43:
 997               	.L51:
 998               	.LBB44:
 999               	.LBB41:
 121:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else if (mode == PWM_OUTPUT_ACTIVE_LOW)
 1000               		.loc 1 121 0
 1001 0182 8C91      		ld r24,X
 1002 0184 C82A      		or r12,r24
 1003 0186 CC92      		st X,r12
 1004 0188 00C0      		rjmp .L39
 1005               	.L52:
 123:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 1006               		.loc 1 123 0
 1007 018a D701      		movw r26,r14
 1008 018c 8C91      		ld r24,X
 1009 018e 8B29      		or r24,r11
 1010 0190 8C93      		st X,r24
 1011 0192 00C0      		rjmp .L39
 1012               	.LVL44:
 1013               	.L50:
 1014               	.LBE41:
 1015               	.LBE44:
 1016               	.LBB45:
 1017               	.LBB36:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 1018               		.loc 1 131 0
 1019 0194 00E0      		ldi r16,0
 1020 0196 10E0      		ldi r17,0
 1021 0198 00C0      		rjmp .L37
 1022               	.LBE36:
 1023               	.LBE45:
 1024               		.cfi_endproc
 1025               	.LFE177:
 1027               		.section	.text.pwm_lld_disable_channel,"ax",@progbits
 1028               	.global	pwm_lld_disable_channel
 1030               	pwm_lld_disable_channel:
 1031               	.LFB178:
 533:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 534:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /**
 535:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @brief   Disables a PWM channel.
 536:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 537:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @post    The channel is disabled and its output line returned to the
 538:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *          idle state.
 539:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @note    Depending on the hardware implementation this function has
 540:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *          effect starting on the next cycle (recommended implementation)
 541:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *          or immediately (fallback implementation).
 542:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 543:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 544:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @param[in] channel   PWM channel identifier (0...PWM_CHANNELS-1)
 545:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 546:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @notapi
 547:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  */
 548:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** void pwm_lld_disable_channel(PWMDriver *pwmp, pwmchannel_t channel) {
 1032               		.loc 1 548 0
 1033               		.cfi_startproc
 1034               	.LVL45:
 1035 0000 CF93      		push r28
 1036               	.LCFI64:
 1037               		.cfi_def_cfa_offset 3
 1038               		.cfi_offset 28, -2
 1039 0002 DF93      		push r29
 1040               	.LCFI65:
 1041               		.cfi_def_cfa_offset 4
 1042               		.cfi_offset 29, -3
 1043               	/* prologue: function */
 1044               	/* frame size = 0 */
 1045               	/* stack size = 2 */
 1046               	.L__stack_usage = 2
 1047               	.LVL46:
 549:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 550:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   uint8_t i = timer_index(pwmp);
 551:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   config_channel(regs_table[i].tccra,
 552:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                  7 - 2*channel,
 553:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                  6 - 2*channel,
 1048               		.loc 1 553 0
 1049 0004 462F      		mov r20,r22
 1050 0006 50E0      		ldi r21,0
 1051               	.LBB46:
 1052               	.LBB47:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 1053               		.loc 1 131 0
 1054 0008 21E0      		ldi r18,lo8(1)
 1055 000a 30E0      		ldi r19,0
 1056 000c 8050      		subi r24,lo8(PWMD1)
 1057 000e 9040      		sbci r25,hi8(PWMD1)
 1058 0010 01F0      		breq .L55
 1059               	.L54:
 1060               	.LBE47:
 1061               	.LBE46:
 551:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                  7 - 2*channel,
 1062               		.loc 1 551 0
 1063 0012 86E1      		ldi r24,lo8(22)
 1064               	.LVL47:
 1065 0014 829F      		mul r24,r18
 1066 0016 F001      		movw r30,r0
 1067 0018 839F      		mul r24,r19
 1068 001a F00D      		add r31,r0
 1069 001c 1124      		clr __zero_reg__
 1070 001e E050      		subi r30,lo8(-(regs_table))
 1071 0020 F040      		sbci r31,hi8(-(regs_table))
 1072 0022 A081      		ld r26,Z
 1073 0024 B181      		ldd r27,Z+1
 1074               	.LVL48:
 1075               	.LBB49:
 1076               	.LBB50:
 119:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (mode == PWM_OUTPUT_ACTIVE_HIGH)
 1077               		.loc 1 119 0
 1078 0026 7C91      		ld r23,X
 1079               	.LBE50:
 1080               	.LBE49:
 1081               		.loc 1 553 0
 1082 0028 83E0      		ldi r24,lo8(3)
 1083 002a 90E0      		ldi r25,0
 1084 002c 841B      		sub r24,r20
 1085 002e 950B      		sbc r25,r21
 551:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                  7 - 2*channel,
 1086               		.loc 1 551 0
 1087 0030 382F      		mov r19,r24
 1088 0032 330F      		lsl r19
 1089               	.LBB53:
 1090               	.LBB51:
 119:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (mode == PWM_OUTPUT_ACTIVE_HIGH)
 1091               		.loc 1 119 0
 1092 0034 81E0      		ldi r24,lo8(1)
 1093 0036 90E0      		ldi r25,0
 1094 0038 EC01      		movw r28,r24
 1095 003a 00C0      		rjmp 2f
 1096               		1:
 1097 003c CC0F      		lsl r28
 1098               		2:
 1099 003e 3A95      		dec r19
 1100 0040 02F4      		brpl 1b
 1101               	.LBE51:
 1102               	.LBE53:
 551:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                  7 - 2*channel,
 1103               		.loc 1 551 0
 1104 0042 6195      		neg r22
 1105               	.LVL49:
 1106 0044 660F      		lsl r22
 1107 0046 695F      		subi r22,lo8(-(7))
 1108               	.LBB54:
 1109               	.LBB52:
 119:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   if (mode == PWM_OUTPUT_ACTIVE_HIGH)
 1110               		.loc 1 119 0
 1111 0048 9C01      		movw r18,r24
 1112 004a 00C0      		rjmp 2f
 1113               		1:
 1114 004c 220F      		lsl r18
 1115               		2:
 1116 004e 6A95      		dec r22
 1117 0050 02F4      		brpl 1b
 1118 0052 2C2B      		or r18,r28
 1119 0054 2095      		com r18
 1120 0056 2723      		and r18,r23
 1121 0058 2C93      		st X,r18
 1122               	.LBE52:
 1123               	.LBE54:
 554:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                  PWM_OUTPUT_DISABLED);
 555:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   *regs_table[i].timsk &= ~(1 << (channel + 1));
 1124               		.loc 1 555 0
 1125 005a 0288      		ldd __tmp_reg__,Z+18
 1126 005c F389      		ldd r31,Z+19
 1127 005e E02D      		mov r30,__tmp_reg__
 1128 0060 2081      		ld r18,Z
 1129 0062 4F5F      		subi r20,-1
 1130 0064 5F4F      		sbci r21,-1
 1131               	.LVL50:
 1132 0066 00C0      		rjmp 2f
 1133               		1:
 1134 0068 880F      		lsl r24
 1135               		2:
 1136 006a 4A95      		dec r20
 1137 006c 02F4      		brpl 1b
 1138 006e 8095      		com r24
 1139 0070 8223      		and r24,r18
 1140 0072 8083      		st Z,r24
 1141               	/* epilogue start */
 556:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 1142               		.loc 1 556 0
 1143 0074 DF91      		pop r29
 1144 0076 CF91      		pop r28
 1145 0078 0895      		ret
 1146               	.LVL51:
 1147               	.L55:
 1148               	.LBB55:
 1149               	.LBB48:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 1150               		.loc 1 131 0
 1151 007a 20E0      		ldi r18,0
 1152 007c 30E0      		ldi r19,0
 1153 007e 00C0      		rjmp .L54
 1154               	.LBE48:
 1155               	.LBE55:
 1156               		.cfi_endproc
 1157               	.LFE178:
 1159               		.section	.text.pwm_lld_enable_periodic_notification,"ax",@progbits
 1160               	.global	pwm_lld_enable_periodic_notification
 1162               	pwm_lld_enable_periodic_notification:
 1163               	.LFB179:
 557:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 558:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /**
 559:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @brief   Enables the periodic activation edge notification.
 560:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 561:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @note    If the notification is already enabled then the call has no effect.
 562:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 563:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 564:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 565:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @notapi
 566:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  */
 567:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** void pwm_lld_enable_periodic_notification(PWMDriver *pwmp) {
 1164               		.loc 1 567 0
 1165               		.cfi_startproc
 1166               	.LVL52:
 1167               	/* prologue: function */
 1168               	/* frame size = 0 */
 1169               	/* stack size = 0 */
 1170               	.L__stack_usage = 0
 1171               	.LBB56:
 1172               	.LBB57:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 1173               		.loc 1 131 0
 1174 0000 21E0      		ldi r18,lo8(1)
 1175 0002 30E0      		ldi r19,0
 1176 0004 8050      		subi r24,lo8(PWMD1)
 1177 0006 9040      		sbci r25,hi8(PWMD1)
 1178 0008 01F0      		breq .L58
 1179               	.L57:
 1180               	.LBE57:
 1181               	.LBE56:
 568:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 569:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   uint8_t i = timer_index(pwmp);
 570:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   *regs_table[i].timsk |= (1 << TOIE1);
 1182               		.loc 1 570 0
 1183 000a 86E1      		ldi r24,lo8(22)
 1184               	.LVL53:
 1185 000c 829F      		mul r24,r18
 1186 000e F001      		movw r30,r0
 1187 0010 839F      		mul r24,r19
 1188 0012 F00D      		add r31,r0
 1189 0014 1124      		clr __zero_reg__
 1190 0016 E050      		subi r30,lo8(-(regs_table))
 1191 0018 F040      		sbci r31,hi8(-(regs_table))
 1192 001a 0288      		ldd __tmp_reg__,Z+18
 1193 001c F389      		ldd r31,Z+19
 1194 001e E02D      		mov r30,__tmp_reg__
 1195 0020 8081      		ld r24,Z
 1196 0022 8160      		ori r24,lo8(1)
 1197 0024 8083      		st Z,r24
 1198 0026 0895      		ret
 1199               	.LVL54:
 1200               	.L58:
 1201               	.LBB59:
 1202               	.LBB58:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 1203               		.loc 1 131 0
 1204 0028 20E0      		ldi r18,0
 1205 002a 30E0      		ldi r19,0
 1206 002c 00C0      		rjmp .L57
 1207               	.LBE58:
 1208               	.LBE59:
 1209               		.cfi_endproc
 1210               	.LFE179:
 1212               		.section	.text.pwm_lld_disable_periodic_notification,"ax",@progbits
 1213               	.global	pwm_lld_disable_periodic_notification
 1215               	pwm_lld_disable_periodic_notification:
 1216               	.LFB180:
 571:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 572:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 573:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /**
 574:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @brief   Disables the periodic activation edge notification.
 575:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 576:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @note    If the notification is already disabled then the call has no effect.
 577:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 578:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 579:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 580:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @notapi
 581:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  */
 582:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** void pwm_lld_disable_periodic_notification(PWMDriver *pwmp) {
 1217               		.loc 1 582 0
 1218               		.cfi_startproc
 1219               	.LVL55:
 1220               	/* prologue: function */
 1221               	/* frame size = 0 */
 1222               	/* stack size = 0 */
 1223               	.L__stack_usage = 0
 1224               	.LBB60:
 1225               	.LBB61:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 1226               		.loc 1 131 0
 1227 0000 21E0      		ldi r18,lo8(1)
 1228 0002 30E0      		ldi r19,0
 1229 0004 8050      		subi r24,lo8(PWMD1)
 1230 0006 9040      		sbci r25,hi8(PWMD1)
 1231 0008 01F0      		breq .L61
 1232               	.L60:
 1233               	.LBE61:
 1234               	.LBE60:
 583:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 584:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   uint8_t i = timer_index(pwmp);
 585:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   *regs_table[i].timsk &= ~(1 << TOIE1);
 1235               		.loc 1 585 0
 1236 000a 86E1      		ldi r24,lo8(22)
 1237               	.LVL56:
 1238 000c 829F      		mul r24,r18
 1239 000e F001      		movw r30,r0
 1240 0010 839F      		mul r24,r19
 1241 0012 F00D      		add r31,r0
 1242 0014 1124      		clr __zero_reg__
 1243 0016 E050      		subi r30,lo8(-(regs_table))
 1244 0018 F040      		sbci r31,hi8(-(regs_table))
 1245 001a 0288      		ldd __tmp_reg__,Z+18
 1246 001c F389      		ldd r31,Z+19
 1247 001e E02D      		mov r30,__tmp_reg__
 1248 0020 8081      		ld r24,Z
 1249 0022 8E7F      		andi r24,lo8(-2)
 1250 0024 8083      		st Z,r24
 1251 0026 0895      		ret
 1252               	.LVL57:
 1253               	.L61:
 1254               	.LBB63:
 1255               	.LBB62:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 1256               		.loc 1 131 0
 1257 0028 20E0      		ldi r18,0
 1258 002a 30E0      		ldi r19,0
 1259 002c 00C0      		rjmp .L60
 1260               	.LBE62:
 1261               	.LBE63:
 1262               		.cfi_endproc
 1263               	.LFE180:
 1265               		.section	.text.pwm_lld_enable_channel_notification,"ax",@progbits
 1266               	.global	pwm_lld_enable_channel_notification
 1268               	pwm_lld_enable_channel_notification:
 1269               	.LFB181:
 586:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 587:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 588:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /**
 589:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @brief   Enables a channel de-activation edge notification.
 590:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 591:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @pre     The channel must have been activated using @p pwmEnableChannel().
 592:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @note    If the notification is already enabled then the call has no effect.
 593:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 594:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 595:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @param[in] channel   PWM channel identifier (0...channels-1)
 596:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 597:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @notapi
 598:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  */
 599:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** void pwm_lld_enable_channel_notification(PWMDriver *pwmp,
 600:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                                          pwmchannel_t channel) {
 1270               		.loc 1 600 0
 1271               		.cfi_startproc
 1272               	.LVL58:
 1273               	/* prologue: function */
 1274               	/* frame size = 0 */
 1275               	/* stack size = 0 */
 1276               	.L__stack_usage = 0
 1277               	.LBB64:
 1278               	.LBB65:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 1279               		.loc 1 131 0
 1280 0000 21E0      		ldi r18,lo8(1)
 1281 0002 30E0      		ldi r19,0
 1282 0004 8050      		subi r24,lo8(PWMD1)
 1283 0006 9040      		sbci r25,hi8(PWMD1)
 1284 0008 01F0      		breq .L64
 1285               	.L63:
 1286               	.LBE65:
 1287               	.LBE64:
 601:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 602:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   uint8_t i = timer_index(pwmp);
 603:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   *regs_table[i].timsk |= (1 << (channel + 1));
 1288               		.loc 1 603 0
 1289 000a 86E1      		ldi r24,lo8(22)
 1290               	.LVL59:
 1291 000c 829F      		mul r24,r18
 1292 000e F001      		movw r30,r0
 1293 0010 839F      		mul r24,r19
 1294 0012 F00D      		add r31,r0
 1295 0014 1124      		clr __zero_reg__
 1296 0016 E050      		subi r30,lo8(-(regs_table))
 1297 0018 F040      		sbci r31,hi8(-(regs_table))
 1298 001a 0288      		ldd __tmp_reg__,Z+18
 1299 001c F389      		ldd r31,Z+19
 1300 001e E02D      		mov r30,__tmp_reg__
 1301 0020 2081      		ld r18,Z
 1302 0022 6F5F      		subi r22,lo8(-(1))
 1303               	.LVL60:
 1304 0024 81E0      		ldi r24,lo8(1)
 1305 0026 90E0      		ldi r25,0
 1306 0028 00C0      		rjmp 2f
 1307               		1:
 1308 002a 880F      		lsl r24
 1309               		2:
 1310 002c 6A95      		dec r22
 1311 002e 02F4      		brpl 1b
 1312 0030 822B      		or r24,r18
 1313 0032 8083      		st Z,r24
 1314 0034 0895      		ret
 1315               	.LVL61:
 1316               	.L64:
 1317               	.LBB67:
 1318               	.LBB66:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 1319               		.loc 1 131 0
 1320 0036 20E0      		ldi r18,0
 1321 0038 30E0      		ldi r19,0
 1322 003a 00C0      		rjmp .L63
 1323               	.LBE66:
 1324               	.LBE67:
 1325               		.cfi_endproc
 1326               	.LFE181:
 1328               		.section	.text.pwm_lld_disable_channel_notification,"ax",@progbits
 1329               	.global	pwm_lld_disable_channel_notification
 1331               	pwm_lld_disable_channel_notification:
 1332               	.LFB182:
 604:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** }
 605:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 606:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** /**
 607:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @brief   Disables a channel de-activation edge notification.
 608:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 609:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @pre     The channel must have been activated using @p pwmEnableChannel().
 610:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @note    If the notification is already disabled then the call has no effect.
 611:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 612:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 613:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @param[in] channel   PWM channel identifier (0...channels-1)
 614:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  *
 615:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  * @notapi
 616:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****  */
 617:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** void pwm_lld_disable_channel_notification(PWMDriver *pwmp,
 618:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****                                           pwmchannel_t channel) {
 1333               		.loc 1 618 0
 1334               		.cfi_startproc
 1335               	.LVL62:
 1336               	/* prologue: function */
 1337               	/* frame size = 0 */
 1338               	/* stack size = 0 */
 1339               	.L__stack_usage = 0
 1340               	.LBB68:
 1341               	.LBB69:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 1342               		.loc 1 131 0
 1343 0000 21E0      		ldi r18,lo8(1)
 1344 0002 30E0      		ldi r19,0
 1345 0004 8050      		subi r24,lo8(PWMD1)
 1346 0006 9040      		sbci r25,hi8(PWMD1)
 1347 0008 01F0      		breq .L67
 1348               	.L66:
 1349               	.LBE69:
 1350               	.LBE68:
 619:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c **** 
 620:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   uint8_t i = timer_index(pwmp);
 621:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   *regs_table[i].timsk &= ~(1 << (channel + 1));
 1351               		.loc 1 621 0
 1352 000a 86E1      		ldi r24,lo8(22)
 1353               	.LVL63:
 1354 000c 829F      		mul r24,r18
 1355 000e F001      		movw r30,r0
 1356 0010 839F      		mul r24,r19
 1357 0012 F00D      		add r31,r0
 1358 0014 1124      		clr __zero_reg__
 1359 0016 E050      		subi r30,lo8(-(regs_table))
 1360 0018 F040      		sbci r31,hi8(-(regs_table))
 1361 001a 0288      		ldd __tmp_reg__,Z+18
 1362 001c F389      		ldd r31,Z+19
 1363 001e E02D      		mov r30,__tmp_reg__
 1364 0020 2081      		ld r18,Z
 1365 0022 6F5F      		subi r22,lo8(-(1))
 1366               	.LVL64:
 1367 0024 81E0      		ldi r24,lo8(1)
 1368 0026 90E0      		ldi r25,0
 1369 0028 00C0      		rjmp 2f
 1370               		1:
 1371 002a 880F      		lsl r24
 1372               		2:
 1373 002c 6A95      		dec r22
 1374 002e 02F4      		brpl 1b
 1375 0030 8095      		com r24
 1376 0032 8223      		and r24,r18
 1377 0034 8083      		st Z,r24
 1378 0036 0895      		ret
 1379               	.LVL65:
 1380               	.L67:
 1381               	.LBB71:
 1382               	.LBB70:
 131:../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.c ****   else index++;
 1383               		.loc 1 131 0
 1384 0038 20E0      		ldi r18,0
 1385 003a 30E0      		ldi r19,0
 1386 003c 00C0      		rjmp .L66
 1387               	.LBE70:
 1388               	.LBE71:
 1389               		.cfi_endproc
 1390               	.LFE182:
 1392               		.comm	PWMD1,7,1
 1393               		.section	.rodata.regs_table,"a",@progbits
 1396               	regs_table:
 1397 0000 8000      		.word	128
 1398 0002 8100      		.word	129
 1399 0004 8900      		.word	137
 1400 0006 8800      		.word	136
 1401 0008 8B00      		.word	139
 1402 000a 8A00      		.word	138
 1403 000c 0000      		.word	0
 1404 000e 0000      		.word	0
 1405 0010 3600      		.word	54
 1406 0012 6F00      		.word	111
 1407 0014 8600      		.word	134
 1408               		.text
 1409               	.Letext0:
 1410               		.file 2 "/usr/lib/avr/include/stdint.h"
 1411               		.file 3 "../../../os/common/ports/AVR/compilers/GCC/chtypes.h"
 1412               		.file 4 "../../../os/rt/include/chsystypes.h"
 1413               		.file 5 "../../../os/rt/include/chschd.h"
 1414               		.file 6 "../../../os/rt/include/chtime.h"
 1415               		.file 7 "../../../os/common/ports/AVR/chcore.h"
 1416               		.file 8 "../../../os/rt/include/chsem.h"
 1417               		.file 9 "../../../os/rt/include/chmtx.h"
 1418               		.file 10 "../../../os/hal/include/hal_pwm.h"
 1419               		.file 11 "../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_pwm_lld.c
     /tmp/ccGu0aeG.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccGu0aeG.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccGu0aeG.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccGu0aeG.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccGu0aeG.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccGu0aeG.s:13     .text.__vector_13:0000000000000000 __vector_13
                            *COM*:0000000000000007 PWMD1
     /tmp/ccGu0aeG.s:128    .text.__vector_11:0000000000000000 __vector_11
     /tmp/ccGu0aeG.s:242    .text.__vector_12:0000000000000000 __vector_12
     /tmp/ccGu0aeG.s:356    .text.pwm_lld_init:0000000000000000 pwm_lld_init
     /tmp/ccGu0aeG.s:386    .text.pwm_lld_start:0000000000000000 pwm_lld_start
     /tmp/ccGu0aeG.s:1396   .rodata.regs_table:0000000000000000 regs_table
     /tmp/ccGu0aeG.s:614    .text.pwm_lld_stop:0000000000000000 pwm_lld_stop
     /tmp/ccGu0aeG.s:673    .text.pwm_lld_change_period:0000000000000000 pwm_lld_change_period
     /tmp/ccGu0aeG.s:692    .text.pwm_lld_enable_channel:0000000000000000 pwm_lld_enable_channel
     /tmp/ccGu0aeG.s:1030   .text.pwm_lld_disable_channel:0000000000000000 pwm_lld_disable_channel
     /tmp/ccGu0aeG.s:1162   .text.pwm_lld_enable_periodic_notification:0000000000000000 pwm_lld_enable_periodic_notification
     /tmp/ccGu0aeG.s:1215   .text.pwm_lld_disable_periodic_notification:0000000000000000 pwm_lld_disable_periodic_notification
     /tmp/ccGu0aeG.s:1268   .text.pwm_lld_enable_channel_notification:0000000000000000 pwm_lld_enable_channel_notification
     /tmp/ccGu0aeG.s:1331   .text.pwm_lld_disable_channel_notification:0000000000000000 pwm_lld_disable_channel_notification

UNDEFINED SYMBOLS
__avr_in_isr
chSchIsPreemptionRequired
chSchDoReschedule
pwmObjectInit
__do_copy_data
__do_clear_bss
